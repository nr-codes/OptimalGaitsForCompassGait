(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code::Initialization:: *)
(*
PackageVariables.nb: Lists global variables used by the NLinks package.
Copyright (C) 2014 Nelson Rosa Jr.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version. This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even the 
implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details. You should have 
received a copy of the GNU General Public License along with this program.
If not, see <http://www.gnu.org/licenses/>.
*)


(* ::Input::Initialization:: *)
BeginPackage["RigidBodyDynamics`", {"GlobalVariables`", "Derivatives`"}]
Begin["`Private`"]


(* ::Input::Initialization:: *)
IME[] := Module[{nqf, nqfb, fosim, xdot},
(* set up lengths of the different constraints *)
nqf = nq + nf;
nqfb = nqf + 1;

(* solves for qdd, f, u *)
Ab = ZAb[[1;;nqf, 1;;nqfb]]; (* to avoid bug when nu > 0 *)

(* formulate M.qdd + uJ = B.uff + u + J\[Transpose].f *)
Ab[[1;;nq, 1;;nq]] = M;
Ab[[1;;nq, nqfb]] = M . qd;

If[nf >0, 
Ab[[1;;nq, nq+1;;nqf]] = -J[[pcons]]\[Transpose];
Ab[[nq+1;;nqf, 1;;nq]] = J[[pcons]];
(* would like to incorporate non-plastic impacts *)
];
];


(* ::Input::Initialization:: *)
End[];
EndPackage[]
