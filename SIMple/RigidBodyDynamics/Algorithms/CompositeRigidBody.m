(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code::Initialization:: *)
(*
CompositeRigidBody.nb: An implementation of the CRB algorithm
and its derivative.
Copyright (C) 2014 Nelson Rosa Jr.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version. This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even the 
implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details. You should have 
received a copy of the GNU General Public License along with this program.
If not, see <http://www.gnu.org/licenses/>.
*)


(* ::Input::Initialization:: *)
BeginPackage["RigidBodyDynamics`", "GlobalVariables`"]
Begin["`Private`"]


(* ::Input::Initialization:: *)
(* 
user inputs: x;
zeroed inputs: M;
model data: \[DoubleStruckCapitalI], parent, nq;
modifies: M;
output: M (joint-space inertia matrix)
*)

CRB[] := Module[{fh, fj, IC, p , j},
(* clear/set CRB variables *)
M = ZM; (* joint-space inertia matrix *)
fh = z6;
fj = z6;
IC = \[DoubleStruckCapitalI];

(* calc inertia tensor *)
Do[
fh = IC[[i]].s[[i]];
M[[i,i]] = s[[i]].fh;

p = parent[[i]];
If[p != 0, 
IC[[p]] = IC[[p]] + XL[[i]]\[Transpose].IC[[i]].XL[[i]];
];

j = i;
While[parent[[j]] != 0,
fj = fh; (* to make DifferentiateFunction work properly *)
fh= XL[[j]]\[Transpose].fj;
j = parent[[j]];
(* only lower triangle needs to be computed if using LTDL factorization *)
M[[i, j]] = s[[j]].fh;
M[[j, i]] = M[[i, j]];
];, 
{i, nq, 1, -1}
];
];


(* ::Input::Initialization:: *)
End[]
EndPackage[]
