Notebook[{

Cell[CellGroupData[{
Cell["Biped Description", \
"Section",ExpressionUUID->"32dfc793-25eb-47c0-908e-6712b5951a51"],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvXd8FdX2v49ASCR0aXKxIJaL7VpAEfGiiCIqKihNBQmkkQbSCcFASOgd
BS+oKCAqvRcLKKIC0iEghPReSCUJfi45+b2/5/0767U5AW9MDoSynj/OazKZ
M2fPJGfmmbX3WrtZv4FdPStXqlRpiAteurqNeG7wYLdRb9bBD90ChgzwCvBw
7xQw1MPLY3DrflWw8glsG4iF/7dcrCiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoijXKRYbRUVFFgP+9vz58+YabMNXeYv8aO7q
L3Zr7lxRFEVRFEW57oFP/ve//4UBnjt37v/+7/8ghzRMvubn52PNn3/+SWks
LCzEAjbDW7ABFrAHrOQesKbIirmM93JjvBbZqOiDVhRFURRFUa4Q561g4ZwV
8UwxTxpjsS2GyZXYEgv/tSIWKvvBGkomt+Eb6ZwU1wo+ZkVRFEVRFOVKQYH8
Pyu///57nz59OnToMHDgwP3791NEz549K33iWDl8+PDXX3+9U6dOXbt2HT9+
/NGjRxnqFAulgv7222/YyauvvvrCCy/07NkzJCQkMjISv8U2jJdW9HEriqIo
iqIoVwgq4tKlS2+//fYXX3zxvffea9q0aaNGjWbNmgXVhBkWFhYeOnTorbfe
atas2eOPP/7mm296eno+++yzDRs2rF+//pAhQzIyMv78809oJ3b166+/tm/f
/q677mrTps27Vtq2bYstsfNp06Zxhzp0U1EURVEU5QaBccuTJ0/CJMeMGQNp
PH/+/NSpU6tUqQLhXLt2Lfxw8eLFTz/99EsvvbRhwwaGLrEZFBQ6WrNmzZtu
umn8+PF4V3Z29rJly+69915vb+/t27czkgm3zMvLGzZsmJOTU5MmTbArvFFt
U1EURVEU5QaBAzXhhy1btoyLi2OH+JYtW6pWrQqNDAoK2rlz5xNPPAFdTEhI
YPSS20A49+3b99RTT1WuXPn+++/PycmBaj7wwAPz58/Pzc1lNpAMAcWW9evX
xz7feOMNfIrapqIoiqIoyg0CxC8+Ph4++fHHH//3v/9lctDKlSvhkJDDFi1a
PProo35+fmlpaWY5o2Jr0hDe+Oabb1arVu2WW24ZM2bMww8//OGHH3IPxbYR
odwSjtq8eXPo67333vvbb79d1DappsVGhSXJl2eSkfxKMptkme8130gkWZ7b
K4qiKIqiKFcYGNrs2bObNGkSGxsrWedDhw6tUqUK5NDJyQk+mZeXd9G8Hthm
165dK1WqVKNGjdq1a0M4sWXJzaB8Z8+ebdq0Kba89dZbf/jhh5K2yUwlvBYU
FPz555+MoDK9HWvgioWFheyXF5/k9oygShCVufCSO88YrHivoiiKoiiKcoWB
xfn7+7du3To7O1sM7cUXX4QZQjj/8Y9//PHHH7C4kn6INUeOHGnbtm3lypXh
pXhLdHT0RTcD+/fvh45in9jhzz//XHIzWiKrJKEZsNMzZ86gSTk5OWghtBMe
i5W5ubnp6en5+fncAxqG32ZmZmL9WSv4FbdMs8L3cqDp5TuHiqIoiqIoyqU4
derUCy+8MHr0aAgbaxnh9c4773RycoJGjh8/HvLGGKPdG7Hmxx9/vOOOO7BZ
nTp12Id+0c1gj19++WXNmjVhmw888MC+fftKNoOVObEH2GZBQQG279evn5eV
gQMHDh48GErs5+fn4eGB9fhcBjBhlcuXL+/bt++AAQO8vb19fX2HDx8eEBDg
4+ODzfr37//777+LQl+uM6goiqIoiqJcmtOnT48YMWLPnj0MKuL16NGjtWrV
qlq1ar169eB1l/I0bPzVV19BSuGQsNP09HTms9ttxtjmkCFDXFxcsOWlsoRY
EJ5qCpNct24dvBEa2aJFC8ZOIavPP/88TBJifPDgQba2sLBw69at2Lm7uzu9
F+3BB3Xs2BFbhoWF/fHHH9Ijf1lOn6IoiqIoivKXcEikjHXE68SJE1nXqG3b
tsePH2eGDiepNMnLy3v//fcrWenQoYO83W4zrIGItmvXDpvBYMeNG0ertNtM
psKUMZlnz57NysoaOnQoHLJatWre3t45OTkFBQVsrbgx0+Tz8/PffPNNZ2fn
KlWqQJ7Z2y4lmC7afkVRFEVRFOUKwNij9KFDBXv06HGTlUGDBsH3ZC7LYlva
OK0yJSWlVatW2Aw2OGnSJDE6i0GxNQT6/fff33fffbDNJk2afPXVVyKKsplk
JzGXh/3pWIbrPv/883gj7Hfx4sUyA2axkbdOd83MzHzggQewpaur66ZNmzi3
EW2T7a/Qc6woiqIoinLjIlrIGcwjIyOfeOIJCCS0bd68eaKXYnqUN27ZoEED
2GaVKlXgkyKQ4oGSGI791K1bFyoIOz1w4AALE8lkl+x/lwikaZ47d+687bbb
8MbGjRufOnXqL/r09+zZU69ePWwJrf3ll1+031xRFEVRFOWqQgRv3bp1ELyq
Vavecccd69evl8BgSZncsmULPBOC17Bhw4SEBPZu0yElSokfz5w54+np6eTk
hI3fe++9/Px8blZsjZTaFcakhbJJWPnNN9+gJVDfhx9+mDJ8qUKd8+fPr169
OtS3c+fOMTExapuKoiiKoihXCRRIGTA5adIkV1dXDto8efKkqKPoKPvcseDv
7w8PhG126tSJIyql+qXZUf7bb7/985//ZG/4okWL7PbDz5V3SUQU6/Py8oYM
GYI3ojFeXl7SvV7yEPDRffr0gc3CaUeNGlVYWHjlT6OiKIqiKIpyUWTcJkQu
KyvLw8ODswi5ublJOFF62xnA5GjJxx9/HJvB8WbOnAnBkymEzOLqWLlgwYJq
1arBGO+7777U1FSJjkImo6KiWDnTnObSYpv6Jz09vWXLlvgICOfq1av/IrYZ
HR3dpk0bbFa/fn0I7aU2UxRFURRFUSoKKt/Ro0effvpp5trAIRlLlPBjsTV/
hyJ3/Pjxxo0bY8tbbrnlhx9+oGqyz12yv7EmIyOjZ8+eDIH27duXWksLXbly
pY+PD0djskKR9NRzP+Hh4TVq1KBDRkZGSv97SbZs2dKsWTNs+fDDD+/du1dt
U1EURVEU5epBgo3Qua1btzZq1IiCt337djokw4+SHMTu788++4zjJB966KED
Bw5wvcU2v4/I3h9//IFdYYcuLi4s3cmcoDNnzsBC3d3dGe2kXkoKEhbgn8uW
LWN5pXbt2mH7v+hJnzNnDry0SpUqHTt2zMnJUdVUFEVRFEW5ehCThAdC25yc
nOCQDz74IMtaSmxTetsZe+zbty9ss3Llyv3794cxmgM72eVNxo0bB13EZi1b
tszIyJCcoOjo6IYNG86ePVtGbMoYTskz6tWrF0t04rNOnDgRFxeHd0VFReE1
MjIyJiYGr1h59OhRT0/PKlbQGOYZqXAqiqIoiqJcJUDMOJM4k8c5cc/bb7/9
FxWNsrKy2rdvDxWsVq0aK21yD7IZ+8rBM888AwlkQc68vDyuhMfOmjXr3//+
d0REBHOLpJ6nyC1eH3nkEX5E06ZNmzdvfruVO+6448477+QrfwSurq6Q0lq1
ai1atOhS8U9FURRFURSlooArwu6SkpJatmzJIOHHH38sbim921Ih87fffmvR
ogU73Fl0Xbq5pVOePz766KPYGzxwy5YtUl0zLi7un//855QpU7AM85SAp5nP
Hh4ezmKed9999+zZszds2LDOChY2bty43gp+xOu0adPQDGzZqFGj6Ohos09f
URRFURRFuRqgJULw6taty1Dkvn37uN4s5y593AsXLmzYsCFs87HHHjt48KBd
5NO0U3d3d+zt9ttv37VrFwdnwmz9/PzatGkTExPDPnfJG5IiSHidP38+h2K+
9NJLp0+fNrcsNop/4iOWLFni4uIC22zVqpX09attKoqiKIqiXCXIDD4LFiyo
bOWee+45c+aMRCktxsySeM3Pzx80aBCrJHXr1i0vL88MZlIIZQznjh07mjdv
Dm/86quv0tLSILS+vr533303FqSYUsnyR/iVp6cn9g+HHDlyJOempFtK8JPa
iU/v378/O9zRKhFjtU1FURRFUZSrBMobRO6LL75o1KjRbbfdNn78eI7D5AZ2
Cem5ubnYAFu2aNFi9erVkkkk9eHFG7G+sLAQEvuvf/2rQYMGDz/8MN7SsWPH
vXv3cvQmP5rlj8wa7xEREf/+97/hkPXq1Vu4cCElUzzWVMqUlBS4KxORfvjh
h2JrRryZFK8oiqIoiqJUOIwupqamLl269Ouvv05LS5OqRMU225TqRng9ffo0
1HTlypX5+fmSQyQqKDtkLzxk8uDBg/Pnz588efKiRYuio6NlgksZCCpx1LNn
z+Lt33///T333AOHfOCBB3755Rf8Fjvhbs3y7/jxwIEDLi4uUE3YbHx8vARg
K+xUKso1jqTsEal/a67Rr5iiKIpy9YMbVkFBgQiq9KpLnz5HkLZv3z4lJYUb
SEgT5imd79BX9v4/88wzIsl2t0tFUUqPDL2WZ7oi2zyz8k3U75eiKIpy9SOV
jphMJNoJCgsLAwMDoZpVq1bt37+/BELNm2B+fj4Hc/bu3RuqiY1HjBjBCvCy
t4o+REW59hDDZF5eenp6dnZ2Tk6OdEBI9d2KbqmiKIqi/A+k69ycVP3cuXN4
PX36dMeOHVk36eOPP2YxT0kOYk4TlTIvL+++++676aabqlevzgpLvBvquE1F
KRtmXYjMzEw893Xt2vXLL780i+KqbSqKoijXCua4TUKN/Omnn26//XY4ZJMm
TZi6XmyzU3bqMb0I63/++WdW2nz00Uf37dvHOTHN26KiKH8LydfD9yspKen5
55/Ho9zIkSMlrU9VU1EURblWMPvHz9smRsddLCcn56OPPmL9zMcff5zr2WnO
3j3JTMevQkJCatSoUbly5bfffjs+Pl6KfNolNSiKUkrEJ7GQkZHx3HPPwTZD
Q0PNMmj85lZ0SxVFUZTLjhleMHPGrxWkBjvt8fDhw97e3h06dIBhNm3a1MnJ
qWrVqjDJJ598slOnTkFBQenp6ZI436tXr7Zt2+JXDRo0cHZ2rlatWuPGjVu2
bPniiy8GBwfn5uZqbFNRyoZcTPBdO3PmTLt27fDoN3bsWCl0xgc9tU1FUZQb
AckVlfDgteVXjEDyFRw5csTf3/+tt95yc3PDwtChQ4cNG/b++++/8847WDl+
/Pi0tDRuHxUV5eHh0aVLl3fffRcbDB8+fMSIEXgLfnz99dfHjRuXl5enM1cq
SpmRGCZs87nnnrv55pvxBTT70LUCkqIoyg3CeYNrMc7Aup3FtuT089b5083M
dEkdkswgTubOBbnxFRQUYAHvZSZRfn4+NmbPe4Uen6Jcq6htKoqiKCammF1b
zsncH4lwSvtleJjFmHVd8tDxCpOkT0qdFlHua1q/FeUqQW1TURRFIX9aEU+7
5hRLirpLoFJckVZJsbRciMyeyb5yloLnWyS8qfU2FaU8qG0qiqIoxJzD8Voc
tC+uyB9Z/sgu14kmyX52KqhEPkVNzbjueWMGTL0bKkrZUNtUFEVRSEJCApOv
i22WVdEt+ntwphLpKBdpFOwGCZh96+yFN6OdZsVODuO85k6IolwlqG0qiqJc
ZzBHxk6NpGfcTsPOnj27b9++hQsXDho06O233z558iTfe2UGbUrlE3E8aarF
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
uRw40Dal1IZMfIZrWkpKSkJCAp8ZOQiHvSe8PJofpCiKopQBs8wRL7N79+7F
9RyeCcOsaqVatWq33HLLjBkzsrOzOb4Rb2ToDxfqyMjInJwcB/akSyARr4mJ
iaNGjRo5cqQ5dzlFVDZjs9ktDspzKsywJ6ccKigoMAeIipaLcuNHbDB//vyA
gIBTp06ZpZYccjYURXGgbfLCxS9pdHT0smXLgoODe/fu3aNHj6CgoK1bt+Iq
x293lhV+zdU2FUVRygOf5RkSxHX1yJEjzz77LIsd0TYrV65co0aNSZMmycSU
jPWZ9mWxDWssf3vEHvGan58/ePBgX1/fmJgYDrakBJrzHHGIJrZktLOcbTC7
2KQxHAKKj5D9W4zin4x+4Ldz5sxxd3eHe0vYRO9QiuIQHGibUrMXYvnqq6/e
euutbdq0gXBOnjy5a9euDz300OzZs/EQ/eOPP3p4eOAREsLJWnCX+RAVRVGu
W2QUIgUpLS2tQ4cO7DcXcGGfMGFCTk4ODQoXXnFLhv5ksFN5mmEGFdkk+NuU
KVN69+6dnJxssY4plViiCCEaAAeWUKeMyCqb6UmhJMuFGfGsqwnYR2+GN6Xk
Jn6EZ7q5ufn4+EhsRKxVUZTy4EDbxJYpKSnQy2bNmtWqVQsPiREREcwlxKUG
j9XNmzfftm3bCy+8wG6d3bt385uug7EVRVHKhnQQw6MOHz782GOP3XTTTTBM
JycnLOCSXr9+fWag25kYe6M4plHyYsocx7OzTbQK95TZs2d36tQpPT1dPkJi
hrQ73iDMUVV2/N1myDhPvl1mz+Rv6brMUaJzitkymwlrcLfq3r07nDMjI8Ou
mJKiKGXGgbYZExPTrVs3jg5atWqVxRiMzZ34+flh/87OzuzWOXnypHRVXOaj
VBRFuR4wNcyMEGJ57969eJaHZOIizPRzvDZs2HDKlCnZ2dm0KTPcJ1E72Qn8
s/RX45J+yFBhsS3ysHz5ctwR1q9fLzcC6cWW+w5dV5RP7heOOlHFtkArd0t7
xGFmZmbaTV0kvg0L3bBhw0svvTRu3Djc1NjRX2Sbol3vVopSNhxlm7ia9e/f
H1e5OnXqTJgwAY+rFtvsaTLievfu3Y0bN+Zl8IknnsDlqPzdN4qiKDcOImaU
N7HHAwcOvPjii1K83ayrCbNyeCHNIiPNU+4XkkKOa/umTZvc3NxGjx7N2c+J
abm///77N998Y2aVcoccWunAphZbu9eZByRVj+Lj43/66ae0tDTapjSDZ7Wg
oADnrUOHDhD1iIgIZsdr3pCilIfy2CYvGuyS+PDDDzkJWvfu3fE8WGSMPJfJ
HfBlv/POO1lheODAgRBUeWC8sgetKIpyTcKEGgnHMS0oNTX1qaeekpwgdqPj
2X/s2LEcf+jYoBzFUmxT4pbMAMKtZP369StXruzcuTOMTgZqStc5tomLi3vl
lVeaN28OKaXFyagqyp6jmlpsiwCbMUycNDTv/vvv/+qrr2jIso2EQFmyCbez
Dz74AMKMQ+CYT42NKErZKLNtmhecHTt2PPDAA3DIxo0bL1261LwQSfcKXtPT
02+99VZcCV1cXLDZf22obSqKopQGuaLKDIwHDx587LHHRDLpnPXr1585c2ZO
To48+Du2DWbvuagaLvuJiYnLly/fv39/SEjI119/LTng5sCqlJQUd3d3Nvi2
22779NNPoaAirg7v7cLeoK88Y0xcWrhwoaurKz79lltu2bVrl1nvSFLUsXLj
xo1vv/12QEDAkCFDkpKS5EZmDmZQFKWUlM02zQE2uLz06dOH49JfeOEFDghn
kmOxUYwCX+cVK1bUrFkTW95zzz2//vqrfmcVRVH+FtQ2lhJiXc0OHTrQMGVu
yoYNG0I1s7KyxAYde5mVS7dphliAkkE1f/zxx++//x73EfZeSbSQzWCWOm4E
lStX5vzsd9999yeffMIBnBImdWBrxR7xmpmZuWDBApwffDROF17vu+++P/74
47wNi20aJiykpqaOHj3az88PwjlmzJiIiIiS2UwObKeiXN+UJ7bJy92qVavw
hIhLh4uLy6hRoyzW+SNkNJH5uDp8+HBcW3A97NixI+fJlcfeK37ciqIo1x5F
tqmCsHDixIlnn33WyQouv5yhsmrVqpMnT5YOdHZkl3L4fSmR+KpcwPERcLOV
K1d+99138fHxM2bM2Lp1K2OGvB3Ixj///HPTpk0Z2KQho83/+Mc/lixZIncN
x1YpYeIPdgv9RsPYv8bJlXje4JMMrrLyvARS8OM333zz0ksv4XwOHDgQd0Ym
DaltKkoZKLNt8jKCR0UPDw9WD4Zz7t69Wy4v0jdRZCuc261bN45d9/f3x8XQ
YiuCod9ZRVGU0mCx1SRPSEjAFZu2xkgde9JDQ0NxWS4ycqgvx7hNi5HejvZA
NSFmUM3k5OSffvpp9OjRuKFIANZiK7+Jhfbt28v0RnRO5jTdcccdixcv5qBN
x/aks6l5eXkTJkxo1KiRWYaUJ61x48biujK2kycwJSWFsc2JEyf6+Pjg5sjB
CWqbivJ3KbNt8gEwKSkJD6rsRn/ooYc4SqfISFeU0monT55s3bo1vt2urq54
wJRBR2qbiqIoJTE7rKFt8hQPwsPDcTmVGB3dCdY0ffp09l9bLqT8LcGHFhsZ
8cXGPETx8fHsQI+Ojj59+vTw4cMXLlzIgKpkAHEGyZkzZzo7O1e6EDkE3Erm
z58PnZN3FdmqmpR+MKf0pkmnPMDdbcSIESy+Z/fplN7nn3/++PHjFqOOipjn
tm3bXn/99SlTpowbN27QoEFBQUGJiYlSa0WdU1FKSZltk9/EjRs3suYGvrZe
Xl7yHYd2WmzTN3APX3/9Ncsf3X333Vu3bpXeDf22KoqilMRiZNZIZQ8s79+/
H9dquBMvvDAoPMXXq1dv6tSpnAPdsVdUcbZiozKn3DiSkpJwbcclPSoq6tSp
U3DOvn377tu377wxJyatDDrXqlWrSheDhehxIA0bNpw9e/bZs2f/ayDTXJby
pIkxUpJjY2OHDBlSu3ZtfATuVhzNJRN6Mrjq6ur68ccfM3deOt24DIXu168f
FBp3xrFjx/r6+gYGBkZERFis0zBRjB14thXleqXMWUK8CGBjfnPxhV2wYIHl
wkq5RbbSwXgqnzhxYvXq1bFZu3bt8P0ttj2EXvEjVhRFuQaw2MqSW2yZQbhg
Hjp0qFOnTsxw4ZM+lKlatWpQzaysLI42dLhtmp3y0suM17S0tBUrVnz77bdQ
TQhYXFzc0qVLR44cyVrKFut4TqmaPmvWLCjxRW1TOrXBrbfeOnfuXCmaxILz
1L9SnjRpHl7RJD8/P2YWmLlUPIHUdU4o/+ijj6ampopnimNDKSdPngyFxs1u
zJgxjHBOmjQJe9YinIpSespmm0W2SRnefvttfmHxoH3w4EFeFswyuXwKxrcY
31YOLsJzIi8g0jujKIqiXIr8/HxeVOPj459++mnaETugsVCzZs0PPvggLy9P
LuaXQ37MgZoEt4xvvvmGUU2o5okTJ9LT06dMmbJ8+XIZqykRwtOnT0OSS3Zk
V7LNeSTgNtGkSZNPPvnEHEVZ+tjmedu851jIzs52d3evXbs2zxjNnB8hnyVt
gLGvW7dOBoCZR/rTTz917949NDQU5zk4OBjC6e3tPXr0aMn61046RfmflMc2
sb5jx46SVJicnCwpiuaIHfyI5/HWrVtz0t45c+bId5mXr4o4bkVRlKsaiy0h
iNdJXEVxiaYyUZ+gSXXr1oXgMXWFvUiXY9ogCS/w8o6PiIuL++qrr77//vuY
mJhTp04dP3785MmTWAgJCTl48KBZqp3SuGzZMlz8xe5KDp5kjBHKh23wWq9e
vcmTJ1Oh5SSUprUcI4pGJiYmdu7cmeFfSUeSIlGmZ4rutmvXjh8kB8v7VFpa
2rvvvjts2LAJEybANsdbGTBgwIgRI2DRRUYdTgeedkW5zihzTzqvhC+//DK/
p23btsUeZCS51MvlpQbPhk2bNq1krTl87NgxeRKU+GcFHLmiKMpVjMUoNHT4
8GE+2vOZnVWPoGTjxo3DhddUI4ePUBLb5IUaPhYfH79q1apNmzbFxsZCMv/4
44+IiAisXL9+/ejRo5OTk2WIKa/waKGfnx+rM100tmkGGzmuEgsinCKQpWkt
Pi4/Px+t6tGjB92VMsmoiHyKuSwDOBs2bLhv3z67gan46LNnz+K26OPjExoa
ihMebGXSpElYM3bs2OjoaFPFHXjmFeV6ojy2ie+1h4cHv7NvvvkmRw1JxFIu
NQUFBQsWLMAXH5u1aNGisLBQLoyyWUUcuqIoylUKn9aZ7QKde/HFF52dnSVG
BzuqXr06ix3JuEGLQXk+Wq7J5gIHNHJY1MqVK7dv337aCtoWHh4Ou8vIyIAc
4vYhmaEinBDRu+66q2SneUnbtOtSr1OnDvYJ2ZNPN5PN5TYkR00zP3HiRLdu
3VxdXU3DLA0uLi5BQUFmSrvkxW/dutXLy2ucFRgmNgsJCcFCQEDAtGnT4uLi
pElmx7rKp6IIZbZNfrkWLlzIy0X37t3FNjnAm1tCNRMSEp5++mleT7p27Vps
lNEwP0hRFOVGRjqgCft9oqOj27ZtK0k01DBcqD/44ANWLXbs9dNiG3tfbNgm
V6I9UM3Fixf/8MMPp06domoC2B1sMy0tzdvbe9GiRUVGVhEN8KeffoLIld76
xEJh17fccsvEiRPPW+eno3OyY11q6/EscVZKLMNsO3bsiPNDz5SqnqUBJxl3
qLy8PHNIGP8ie/bs6dGjx6hRo2CYwcHBY8aMwfmHcAYGBvr7+2MBtzmzWJMK
p6LYUR7bxGtERATTDJ955hk+Zcvjp4zbefPNN+VS+eGHH1bEUSqKolztmIMG
i6zZ5YcPH5ZHdXajV6tWrW7dupMnT2b5dIfLjKTkWIwCIyxYl5ycvHLlyi1b
tkRFRXGUJjyTtsk4Z5cuXXbu3MlhVNRUHsuIESMuNWLzUsgh49XV1XXIkCEQ
3fO22eHRNk6OTB9mThBe0RKYuXwWCyv9rY9u2bLlsWPHRPgttpnT9+3b16tX
r2HDhsEz2ZOOhbFWoJ1eXl5YSEpKwoGz679IU4cU5ULK05MO8HCNJzt8qWvU
qHH06FG7no6UlBQ8D+LhFA+22KZ69eq4IlXEUSqKolzt8PoJj6JWHTx4sFOn
TqxJLhkuDRo0CA0Nzc3NPX8ZphQXLEYdIYutruaKFSu2bdsWExPDqCZHbOIV
jhcbG/vrr7/27t07Li6OAwDM3ivcWSoZCeCltE0mQ3EYJ4QzMDAQN5RiW/1P
mrbZ2f3zzz8/88wzMuyz0oXjM0tJs2bNNm3aJHuWIG10dHRQUNDQoUMpmePG
jcMC1rBvHX+RgIAALOA8WGzJ+DL4U51TUYrLYZtSPhdP3//+97/xHe/bty9L
kOE6kJmZie/sW2+9hX36+vryi//oo4/ycqEoiqLYIbXQ8Xr8+PFXXnmFvcBU
JtrX9OnTMzIyaDJSSs6BbbDzzGLrLSAtLY3FjuCZERERR48ePWFFbDMhIYEp
QpzXg0k90tl97733/i3lq2RL3sFtRY69Vq1akL3s7Gw0CQd+3gB3HGjwE088
wX5zdsGLcP4ty61Xr96nn35qDgPgecjKypo1a5afnx9VMyQk5IMPPoAABwcH
Y82ECRNYFgnro6KipIyACqeiCGW2TV5JeHncvXv366+/jsfPXr164TuI752b
m1urVq08PDxwzXzttdd4BfD09MQjeUUcpaIoylWNKAouqqmpqW3atIFrQS85
ZxALQo4aNSonJ0fSgjgLuWPDm5LdyVsAPgKquWTJkk2bNjGqCdsMDw+3s82U
lJSvv/4aJmzW2GQ7Y2NjOYtcpb8T3sTxygRDHEKAlTVr1sQZQHtkrCZtcMeO
HQ899NBNNsy0I3O8a2lwcXGZOnWq5Puct815d/bs2Xnz5jEJnVU3Aeway+xP
50hOzqXOeerVNhXFpDzjNvlcia881kRHR8+dO7dTp073339/ixYt+vbtu3nz
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
XkZGRpk/1K7eDn6EAsFn2HvOadBBjRo1YDIQPxk96MADFyzGxJT8IBza8uXL
N27cGBMTc/3Z5gkrUVFR0dHRH330EXSRTsVo3qhRoyQyiR+ZzgOtwkKYFSxM
njyZ5dmxGacEwnpK5t+SxmvINqmaTKUPtgY5sSWEHIqekpLCclLmPAiX4x9V
URRFUa5FGGM8fPjwk08+CYesU6fOvHnzeOukgEn2MencuTNt8/nnn4+Pjy/z
h3LnzIbGAhSoV69e7EBnIXdOTDlixAjW1XTsUUszLMa8jZIwBbldt27dhg0b
TluxU7XrwDbZsCNHjsA2oZ3Tp0/HIwZVEwLJ7mOq5ljrqEtWAYJSTpo0CZIZ
GBgoU0xiy9GjRwdbZ+Shhskk4w7RvCtDaWwz2NqZPtY60yUOGWsYB4arT506
FcJp/hepbSqKoiiKgNsifG/NmjW33norNLJZs2bfffcd7c5iyxOXiF9eXh6k
lCMqn3rqqdjY2DJ/qMyazT7r7t27V61alaM0ZcIgb29vdlPiLZw30JFHbg3q
mmnFDLTiE5kWxKKa4eHhV600lgccGgvU8zBnzpzp6+sLg4JQQaUomcHWFGxA
jXz77be7devGspn0TxnZiGUW0uQeSu+N15BtslgozkawVa3FyfHq4+MzY8YM
PHzZzb7k2H9XRVEURblG4ZAzyAZ7rtu0aZOeni6z55iFgCBjBw8eZE46hPCV
V15JSkoq24fKbIZ4PXPmTI8ePZycnLBPjtLEcvXq1WE1vH1LSziI1IGY2ZrF
1lneEhMTly9fDtXEoTEt6OSFccuKlkTHgAM5fPgw53mPsBIXFzd9+vSAgADY
lJmCLWkyYWFhd999N/4uHTp04DZjrRUpg42ucy7QxByleVeG0tgm45nmZvhx
1KhRwVYnh3BCue2eX1Q4FUVRFIUkJyf36tWLEcu+ffua/csW2xxntLIlS5bc
csstlay8//77OTk5pdm/eeeVjHLW1Tl16hRVE6Irc1PWrVuXdTVlS2lGeQ6z
ZEqmxZjznRno33333ZYtW6hh4eHhDABef7Yp+ek4Rs5riWUc7LRp02BNlCvY
FMOVAAt4HmnatCkeNF588cVJkyZhDTuUTTfjmuC/M3TzWrHNYFtOukmIFZlL
3dPTc9asWfgvUudUFEVRFBPcCo8dO3b//fdXqVIF1rd48WIzO1uglYWFhdWs
WZNDKzm8szT7Z4Ul7sGMl8Lo3n33XXome8+xW+w8MDAwJSXF4RnodoMzpRId
e/MzMjLWrl0L1WSsj1Z2nUnmX4BjjIqKwit8acCAAewcD7aNVxw/fjxE9B//
+Af+QB07dpw4cSIje8HlEMvyUOb9l8c2S0IP50JoaChk29fXFyeQc6mTy1FI
QVEURVGuLXAr/O6776pXrw7Zq127dkJCwkWjMViTm5vbu3dvJozfdtttpay3
yV54cw5uOmdhYWG3bt04ATr1FbpbtWpVd3d3RjXN2bodcphm1jnTh+m9HKsJ
1Vy9ejVV024C9BvENkFcXBxMaebMmV5eXgxvwjmxgKcMSFTjxo3xB1LbFBjI
5QRJ0E7mT/n4+EyaNCk7Oxv/V/gn57BnR/0bK4qiKMq1CARswYIFdMjmzZtL
xM9uM9wxf//998cee4zzSD733HOQk9LsX4Z9cj5EOifszsPDg9FUwPygatWq
QXJiYmIuR56F5cK528z5giEGUM1Vq1bFWBHVPHmD2ebx48fDw8Ojo6MhnBCn
AQMGjLV2pgcFBUGipkyZcscdd6htmrAPnXlVjHNy7AH+t2HsfLayGFO3qHYq
iqIoNya4J+K+yYpDL7zwAu+PF93sP//5T/Xq1TmuEjfZUo6ilFzvc+fOcTLE
yMjIN998k4YpyUE1a9YcPnx4amqqdLg7dnIWi23ijCLbNMFcmZ6evmbNmvXr
18OyYFzHjh2raO+rME6fPs251LHAqS39/PxYVJPjNm+99Va1zZK2GRYWNtZa
LcqcS93d3X3y5MkpKSks8KWJ6oqiKMqNDNQLd0yOnPT29maPc8nN0tLS+vbt
y81atWoFMSulDXKHf1rBMqSud+/eLi4uzs7OFE4WOwoICEhKSpJBnlLt83Ic
L20TQnvmzJnly5dv2LCBAzWZNXPjxDPtoGzjVMA5Y2Nj8QrhHDhwYFBQ0IQJ
E6ZPn37nnXeqbZqYIU27/WC9l5fXlClTEhIS1DYVRVGUGxyo17Rp05ikM378
eOlxttvs0KFDt912G6ORH374oRkh/Gsktgm7S01NhWrCMytXrsxiR1RNDw8P
pgUxh6j4wnkkHYLc69lsfApUc/369Rs3bjQz0MGNaZt/2CZ/h23COTmGE2dm
0qRJzFLHP4n2pJeE83WaC4Qzxfv7+8PYs7KytDNdURRFuZHBfXD58uWclBxq
YRZvYXc2yMnJCQ0NxQaQ0nbt2uHuWWwri3TRfUplIZmVEmuwk3feeadatWqM
Z0p1TU9Pz5iYmGKjOFKxUXypzNBvpT129Y4yMjI2bNiwfft2+pUpmTesbcoh
Hz9+nAWR8HfBj3BLLy+vqVOnNm3atHr16rBN5l9zjGLpxaxCbLDMbyw9Hxhw
DU8LbHPkyJFwdZw6TgUrcyWU5x9bURRFUa45cO87ePDgnXfeCf17++23zbpA
UsUFPsbg5xNPPAEPMQsZ2e1NhlwyIVcKZkZGRnbt2hWqyd7zypUrwzNdXV0D
AgI4VrOctTRLIvuUMKzkB0E1V61atX79ejqVXQZ6hQnf1Qe0M9rK3LlzR4wY
cffdd+PP9/zzz8M/OaWOlAAqg/iVxzYd+EaHK6iUxJdJ5CGcWE5MTMR/IKfE
cvisWIqiKIpyNYM7IHxvwIABMMB27dpREcG5c+c4fQ9krEOHDlWqVPnXv/61
ZcsWBmf+YtCmVBbCNhx+CdV0c3OragXWylru+LihQ4dC/Kij+NzLdHQyUJN5
8Tk5OatXr163bh1adfr0abXNvwBn5tixY0wamj9/fr169fCMgH+GadOmjRw5
MtgavrPrQf4LbhzbFLBzniJvb+/Zs2enpaWx+pYW4VQURVFuKKhh33777X33
3Ve3bt1du3bRymCbeA0PD3/nnXdcXFyefPLJjRs3MqlcSrVftAg8f1VQUMBu
dNxhe/TocfPNN0tOEMQVP/bt2zczM1OCn449KLNH3pwG/cyZM/DM9evXw6Ci
oqLMYkcn1TZLEB0dfeTIEfwPJFuR2Ob06dMhUWMvTMT+n9wItimTfmK3o0eP
DgwMxPnhifLw8IClcwwnH9l0GKeiKIpy44BbXl5e3uzZsxs0aNC6desffvgB
qokb4qeffoofYYYQjBMnTrAiuox+vGh8xmKr5c7fpqen+/j4MJIJz2Rs09nZ
2d3dXcZqUmsdmxNUZMBGovFUzVWrVjH/5dixY5zAUbkUOEX4Mx0/fhzL2dnZ
bm5uTz/9dM+ePSdOnBgSEhIaGsqedLVNgSFNqDhOjux5rG1CeQgnRJ0PWeY/
p6IoiqJc30g2EHzs+++/f/LJJ5s1a9akSZN69erdddddL7300po1a/Lz81kw
k6k3Up7oorYpYz4TEhK6devG3CLmoUM7a9asOXjw4NTUVGzDQZ6X2lU5D8pi
mzwIP+JTEhMTV69ejWOJj48/YYWTg9+YOUGlhInqp06dwkn7+eefN27ciKeS
5cuX+/n5UaVgmxzAWRpuENtkihD3zCDnWGtsE6+wdG9v7ylTpmRlZcnzmgqn
oiiKciNARaTyQSfWrVs3efLkGTNm/P777wUFBXYqKCIn052blYWkzzouLq5P
nz7QSxcXF6afMwMdosK6mrTcYmtiUTk70y/lvZJTf+bMmW+//Xbz5s0nrb3D
LPVjl4de0WZ3FUHDBOHh4VFRUdDyn3766fPPP8fjA/7o6enpn332mZeXFz1t
9OjRzE/nMMVgW0a2Y7l8fng5oHNyjAE9k/n7MHPW4fzwww+Tk5Ol/gP/Xcv8
/68oiqIo1zESlmTPu9gmhASq6erqylGa7EN3cnJyd3eHajq8Zrtkx4s2s1Uc
OMoO9G3btplzoKtklgRnRkpuciJLrImMjIRqLl++HL86byMtLe0///mPj4/P
qFGjOLUlLYuTqrN7vcx+eIWjkeVpRikJtvonz1JoaChOmq+v76xZs5ilzvC+
w2syKIqiKMr1Afvfi23aya72s2fPurm5wS0Zz6xWrRpnQvfy8oqLi+Pt1bH3
VokO8a5t9lHm5uZu2rRp5cqVsbGxVE21zUvBAQYnrcM1T58+jQX8vXbt2rVo
0SIss3RPfn4+x1GkpKQsWLAAf1PG7ph5zSAeF9Q2TXCWRo4cSTnneFdPT89J
kyZx2AnOrdbhVBRFUZSLQsGTypy4dcbExLADnRnonOnS1dXV29tbug4vNRV7
eZpRfOF4AHLmzJk1a9asXbuWlY5Ms1LbtINngxN3Mn8KqvnLL78sXrwYos65
RPk0wYIDeE1PT1+4cKG/vz9UEx411poLw451tU0T6Ddntxxri3NiOSQkBA9l
M2bMyM7Otvu/Ve1UFEVRFIGSyTnQcbuMjIzs168fB2oy/RzCCfMcNmwYVNPM
3LkcE6AL/BTcxNevXw/VhGfCNjX9/K+heLMzHbYZFRX1448/fvHFF/Hx8YWF
hXyU2L9//5YtW1hMAI8YkM/U1NRFixYNGDCAkhls60xX27SzzbHW8C8jwDxR
lM/+/fvPmTMnISHBHIiitqkoiqIogkzGBxXJz8/v2rWrq6srh2hyxCbM093d
nbMFsZtberod2AzzHs2uSajmunXrNmzYEB0dDQdmwovGM/8ahn+hmsxAX7Fi
BSwdf1YZlNupU6d77rnn448/xho8X9Dq09PTP/nkk4CAAIbsoFJhYWFqm3bg
tHDIgRTk5KcEBgb6+PhIHU61TUVRFEWxQzLQMzMzvb29OUqzshXOGdS7d++o
qChzRKVk8Ti2GdIXCQuCam7duhW2GRERgU+nZ2q9o79G0oLYgb506VKs4RgJ
Pk3g3D744IP4+06YMIGqydNeUFCAp4m5c+f6+flxUCJjd2qbAk7L6NGjYZsh
ISHYc5CVsUZ9JAjnjBkz7PrTHfgFURRFUZRrBclAZ3CSUUQsJCcnu7m5cawm
q7hjuXr16riHJiQkSAqPHWVuBpPNxXa4IPXk09LSNmzY8O2335ZMCFLbFHhy
oJdQcbxypAFOS0xMzK5duxYvXow1HGErk0aBJ598En/ZqVOnmlLE7LCMjAxm
qUvUDgssxcniPxStG4GLurE5v6fdMs4MI5w4sSkpKaxnK//Pjvv6KoqiKMrV
jgy55EBNmQAoPj6+b9++zs7OMlATODk5+fn54VfF1kl8HNsMRttEdcyI0Nmz
Z9etW7dmzRqolBQ7OqlTUl4MVm5nvSM4J5ajoqJ27ty5aNEiOCd93pyiFLRu
3Rq2OW3aNPN5wWKrNJWenr5kyRJ/f38RKtbhHD169FhbeXMHhihLuSvHblaG
hl10b2MMqOU4V+xSh3AyRM+QsgO/O4qiKIpylSPp54R3Q9wZ+/Tp4+LiwpAm
+9ChnZ6enpmZmfIWhzdDQqz0HAaC8ImbNm3iHOgcq6m2eSmk3xyvPDmJiYm7
du1atmwZ5JMZQBJe+5+2SS/in+Dzzz/39fUNtmVew6MonOVMHfqfUndlNitD
wy66N7NaFMObLIs0YMCAOXPmyFzqOrWloiiKckMh3dZMG8FCTk4Obo4cqymB
TZinm5tbbGysdLhfptsl9Ub6c9GYDRs2MLEFvnRRv7ryUnfVAsmEkHMCdJyZ
hIQEZqDjR4mqSdBYltmTXtI2+Vs+WWRkZMydO9fLy4t5MaFWzMkc1TZlM6o4
ThRsPNiazo8T9d57702dOlVS6nQYp6IoinLjwA5TpidzYkoPD4+bb76ZUU3W
1axRo4a3tzdLuBfZZkt37I2SezbnzeRsQevXr4dtRkVFUTUlZFfBVncVw8yp
EydOREdH//rrr1RNJpszqsm4sTxl/IVtcmOpTpCamjpv3rzBgwePGjVKOtA1
tmlCw2RU06yJBDPHGk9PT3apywBptU1FURTlBkEEMjIyEqrp7OwMw4RwwkA4
N+WgQYMSEhLYtcqhlTRDB7ZB9sndMpi2efPmVatWoVVQTegThVMTgv4CjtWk
cP70009ffvllbGwsQ5QMqVE7eZLF6i9lm/n5+QUFBdyewsm51AcOHEjd4gBO
tU0TeLicFo46kNShyZMnu7u7w9jT0tLENlU4FUVRlOsP0zQkW4QTU/bo0YNp
Qax0xLqavXv3xs2ReQ0cqylRr/I0g55jLhRbq8qzSWfOnNm4ceO2bdtgULBN
zoOj6ecl4alg1/mpU6eYIhQdHf3LL78sWbIEP8qwhGJb8QE525Io1Lp1azxc
wDb/P/beO7yqKn37dxRI6FUQBUVRxAKCgDA6joyDjKIMCiJSBYEUCFVKEr7v
JEISOqEKSIcQqvSOSJVek8BMxoSE9EAgkBD4vjPk5Hdf+37381uck+AhOUlO
YN1/nGvn5JR91l57rc961lNoWOYLaAIFncoxkRXAOXfuXHd3d+IWmYrhMGQw
gStnUBHTprSA+gJJWCpR6nPmzMFiSpxGHOsCraWlpaWlVbyinYrkwGOiSHp6
upeXV5kyZUCYDD9nWFD37t0Be8QMx54JTW05in8ghZmXNdB37NjxmyFdAP0B
YlVKXCNAZnh4OLAzISHh6NGjS5YsQbuBFXMNf2aGK64a8NikSRNc+okTJ0pq
d3FpsHojr1FycjLzcApQSU4k7iPTn9NRKojt1Pa9+TOK5lt+hrUTj/ThDAwM
9Pb2BnBOnTqVpS3Fw8Gx95eWlpaWllZxiTlYCHjECfyZkpLi7u7ODXSiJo5d
XV09PT3j4+NJp47Nd6SmFr9niiQD7t21a9eWLVvImbbZNYub75xLLNwZERHB
kvGxsbEnTpyYP38+DmRlYdv+Ev5Do2WzZs0qVKgA/lHJP9dAMNlST0tLW7p0
6aBBg8hUY8eOpY8iA2QKype/B34FeW/R06a/kSeKtl+0T0BAAIC8f//+M2fO
vHXrFpr09u3b2Tr9u5aWlpbWoyKxpdAfD3/GxMT07NkTeFm6dGmWQX/qqafw
J2ZDbqCrO92OlUCv+LBlZmZu2LBh48aNEhakStOmldgaly5d+qchEObRo0cB
gcy9z3xWeV07buAyyWqTJk2efPLJwMBAyc+TY6wIbMmHRtH/awjAuWTJEg8P
D7CTr6+vn7mr7vCd9BJNmyRM2VtnklI+iabjlrpFqWugaVNLS0tLq6RLopK5
x3r9+nU3N7eyZcsyGogR6GXKlOnVq1dSUlKOaQt1+E6fxARJWG62USVzx44d
QE1wJsCJ0S7FDXTOLhbuBHDSV3PlypXATmayIjrmSi/ivYn/3r17193d/W9/
+1tISIgarp4rbeIZpi/gtUtNTZ09e/bgwYPJUZL7Xe+kq58v+fDptylGYDyi
5WfOnJmSkqLSpgZOLS0tLa0SLRUkMjIyPD09XV1dwZnly5dnCncXF5eePXuC
93KMbVN1j9uBpyF7tWJGS09P37lz54YNG8CZ0dHRgKjw8HDWxNHMmZfQShER
EWiluLi4Y8eOATUjjWRHXB0wgQBgMq9uIHlT0eB4Y1pamlyRvPw27xpS8/Az
LRKAE/gE4GS2nwID5u+AX0HeW/S0KWmRJOu7n1l1yM8AzuDgYOF8TZtaWlpa
WiVL6uSlHgASEhMTadUsV66cGDbxZ+/evSWFO01kDgmYtdiIwMljEMvu3bu3
bt0aZYj1FiMNp0TtrqnKqjVYDz0hIeHgwYNLliyJiYnhHrdqOs5rmUD7pLxG
Dixmbfpcs0HimTt37vBfsquekpIyf/58rFxYYwhkZWXbLODeekFo83c/rSAf
Zefns5Q824ROrWROPDNx4kT8OWDAgGnTpmVmZhL+5UIU/L7T0tLS0tIqVFmU
oj+SbpHPx8XFDR48mIUpGRlUyhBmPdZAd/iZqDnbJRsPzyc9PX2rIduAIA2Z
qn777TfiJSAcDUUUZ17N0NBQHNsi/QMMZZb7S4WqwPlQtENfi6SkpDlz5nh5
efmZG8ckK38zKNtRpkKH02Zxfb6k5YRGjx49aNCg2bNnY+FAgC+8Wl1aWlpa
WloOFBlPrFUMGMEslpGR0bdvX5o0QZulS5cGZ+KxZ8+eiYmJOWZyRceeBh0I
VbDhn5mZmTt37ly/fr1VTJCmTVvR3ssy6MyrGR0dffToUebVlBh/+2lT8iCR
GCX9kVymh+pmV69enTt3LqhJteD5GfvI/kYe+ALxZZHTYKF+Pg2bELfXmY3T
zc1t2rRpN2/eZPSWY29DLS0tLS2tQpJgA2OCcJyVleXl5QW2fMoQgBOPYM7u
3buDYSx5h4cU5BzEVsYPl9w7mFi3b9/OCHRIsErbNm1FvGRAEFsmOTn5xIkT
QE3m1bSqvv1g2lSvgjh5CuHI59h5fSX0LDU1debMmQMHDgwKChozZsw4Q0zC
mWvJoXyrpNMmJW6cOAgMDMQzHh4ewcHBDwv8WlpaWlpaxSXZSQeKZGZm4s+k
pKQBAwaUK1cOhFmmTBmpgY4nY2Ji1ArajqVNW0dNCKjJwpRWNKULBuUqFu5k
g+AxLi7u0KFDixYtwpMPcLPMS7wW8saUlJSEhARcEe7hqonf7bm+BFfwKnoa
Pmr27NmgJn/DninpNzVtqqJrARrH32glpkUCouOZHj16oAFv3bol6VIdez9q
aWlpaWk5UBazviQZEnwCBiBqMoU7UJMp3EGhYnikFdThtk3x0qQpDPS7yRDD
z+mR+E9TmjNzFdqEDXX58mUmO8KTZDxeO0mV+btSQ4Tu3r3bs2fPli1bLl++
XCBT9uXtub6qwwYEcP3hhx+GDx/u4+Mj8UEFQMtioMHC/nzgpVpLnbvqeAbH
Y8eOdXNzCw4OTk1NVUO3CnofamlpaWlpFYJU2rx69SpQ08XFhfvmBM5SpUr1
7t2bmcBp5ip49fNcT0MMmznGHm5aWtru3bs3btz473//G7R58eJFxgdp2nyw
COSxsbEHDhxYu3YtnhHjJL0uyZD2Xxdaz/D41ltvoTMwuzs/0H5vCqIp6fSO
IamlTh9O4JOkNHeUSjpt2r6FWM7HgICA/v37g9jT09O1eVNLS0tLy6mkbn2q
29a3bt0aMmQII9DBmSwYxLyaUVFR5Ap5cQFdxXJNuUOkIckwAn3Xrl2MpyZE
6Q30XCVemmDyS4ZiYmJOnTq1dOnS8PBwsSjKpbf/2vFai/dmixYtypQpM2XK
FLUn2E84EvYlqxU8JiUlTZs2bcCAATTZ+RlR2Exvjkd/o9ilPbRWEPCzU46l
Tfu/VD1mE7HqELNIubm5zZo1KysrS70c2pNTS0tLS6sYJRujRDuCxH/+85+b
N29ixi9btmzp0qVBm4xDB2p269YNDJPt6ALoQptWwUGkEXDvjh07tm/fDoKS
fEeRuiRlHrp48SKLxYMtgZpxcXFnzpyZP38+LhzDgvJt7xJ0ISK2bNlSaFM+
syD2NKJscnIyKw2RMwmZJCvWG8o1D6ed4OfAlxUXbeb6jaNHj8ZjUFAQsNzT
03PGjBmpqam0G2fnUbxeS0tLS0uryKSiJssLxsfHDxo0yNWQmDTx6O7unpKS
Ih56jj0Hi1mJknu7gp2ZmZksTBlppI7UtPlgATXxCM6MNNonJibm8OHDixcv
xoGEn+f7MhU2bXKlg0++fv068HjgwIH+RlCMuqv+sBhWeC9zBtr0N0PU0T5+
hpEzICAAT/bt23fevHlXr15lez5UugAtLS0tLS2Hi1P8/xrCxHTt2jUWpixd
ujRp8w9/+ANo86uvvsK/xOro8HMQ2qRXIb8lPT1927ZtP/30EwgzKipKOJPS
tGklRqBHREQwnTsI88iRI6GhoZGGryYDgpzZtknTOvohKw3NmTPHw8NDNWZq
26btNxI4AZlgcrYPbcJoOgDnrVu3rLI65O/SaGlpaWlpFUS0apLxsrKyhg8f
zhro9NWEgJrMq5ljsATtn4Vk21SdzYCa27dvX79+Pajp8uXLjAMqbqBzajH8
PNJwao2NjT1+/Pjy5ctxjMtK5OC1c1razDGA02LWP01ISJg2bdrQoUOBl76+
vswwqWnT6hvZIP5maXX8ycTveLJPnz7Tp0/PzMzMh1etlpaWlpaWo0R4IISk
paUNGDCgfPnyTN4OgTNBnr179wbvST6iwoh1Vb00uU1/48aNffv2ATWjoqKA
msyrqQugP1jR0dHcQwdqnj59eunSpWg6mqwZ/Y3Ld/fuXaelTfEc5vLnzp07
SUlJ9OEMDAxk4nccaNpUv5GpkFhlnk+yfRhX5eHhMXPmTHpvagunlpaWllYR
SJwhpeAIn8Esn5CQ4O7uXrZsWe6eUzju168f0IWvBKjk3B/Dnr9zsDWzWMy8
nQTa9PT0/fv3b968Wbw0IyIiWHhR06YqNgVrU0aaue6vXLly5MgRoCYunCRd
F54vSBpGfo6ElbVq1QrrEdCmfEXBuwdTIeUY5Ekfj5SUlHnz5rm5uYGdvv/+
e0AUrXlkKiaBtx/8HPuyopftifkbO+l+RlNwM53A6W8kfseTuK/RgFi+8arp
YkNaWlpaWoUq7oCLi6ZASEZGhoeHB1DzySefJGfSttmrVy9QqGM3zS025YFy
zJ10kgxQ8+eff163bt1vhkibGjJtxVyjly5dilRqKsXFxR0+fHjVqlUXL14U
D1hb5e/a0fAol69FixagzUmTJkmpdPKhA01nXArFx8dPnz594MCBJC5GDEn1
Rn+zyE4Jok17Pt8WoW2V6xslCae/EWPl7e3t5eU1d+7c5ORkxgPan15VS0tL
S0vrYUXLBq1GjMXAn3fv3h0xYgRLUhIyS5UqBez8+uuvwTMSJuzwk1HhRzbo
b926tWvXrrVr1+KrBTUjNW3mJpo02Sw0/MoGOv51+/btvFAz3zTI7XiJ4Wre
vHm5cuWmTp0qsWMOL2FD2sRjUlLSnDlzBgwYQKdEP9NfkdK0qYqpSv/HEA2e
Pj4+ffv2xZWSJtU5kbS0tLS0CkliQszIyCA5XL9+fciQIWAGFxcXptZkWNBX
X30VEREhebwdOzGJTVXghxvoOKvdu3fTVzMuLk6NQNe0aSVxZBXmjI+PP3/+
/Pz589F6jD3HgsKxtGkxvXx58Pbbb6PDBAUFWYwCQ9lmGUrH0ia7Hz4/OTkZ
wOnp6UkfTm6sBwQE+OVWTr0gmGf/y/KtQqVNFrL0N0y+3FjHNRo/fvy33367
YMGCrKwsyYVVwP6gpaWlpaVlK4n0IUYmJia6u7u7urr+4Q9/oG2zVKlSOOjb
t29SUhLhgVDqQEcvi+lAaOVPmJmZuXXr1p9++ik6Opp1vYsb6JxaBG80FCE8
Jibm0KFDYAk8I6XPHb5MUP0zcb0+//zzBg0azJ49W8qjO5w2c0xbHAOI0tLS
aOEEPjH42s8Mk9G0KaKDATgcj1JanUD+zTffzJ079+rVq1Z2bwdeLy0tLS2t
x1zid4f5JTU1dfDgwWXLluW+OasFATW7dOkSFxcnnMlNNwfupFuUgCCxlV27
dm3Hjh0bNmwAQbEwpQ4/t0e0cAI1jx49um7dugsXLtA1F837sAXQ7ZGKKPgK
fOnu3buxOpDAE0kk7qhvpCOHRKnj87FEmj59+tChQxmFTTuetm2qkj10VrSk
Aycf8fzAgQPRgNevX9ch6lpaWlpahSEpbn779u1hw4axMCVNmjRvdu3aFQwj
KW5UunDgaViUQCGc0q1btwAt27dvp6OmlKfUtPkAkTMvXbqUkJBw4MCB0NBQ
PEOrpngmkNMK48JJeLuYvtV4Zwf2FouR35WrpDt37ty9excH8fHxs2bNGjRo
kL8RBcPNYk2b6huZeFMO+CRLzAM7PTw80IA6J5KWlpaWVgFF5KA3Hedo2bO+
cePGmDFjKlWqxDpBeARnurq69uzZE7ynxhQXfBriaVjMzO3qfisnu8zMzH37
9gE1wU5CmCUutaYU8bl48WJUVBQ5kInWWaxcHCzz/fnUJUM0/0YaO+lnz55d
tGgRvoUXTpq6MBBCch+pbClLEsnq6fC1iXhcSDcGcM6YMcPLy8vPcNoEU9FT
ESg1zhA32QuVBgv78+1HaFtJhigJpOJmOsgzICAAzeXp6Tl//nyMDLyIDg/v
0tLS0tJ6HETUZNp2bkESDJKSkjBHlypViqjJRO6lS5fu1asX82riXQ48DSvC
JP0KM9y+fXvbtm3r168HQanh5wVks6IXzhmciUc0L5ox0uBAJlqPNHwD8F+w
aEE+Xx4jTYKNjo5mBDp9NYsgj6JgSY4JgZJMgCeQo5SFKjyxI6WmpjItEsOu
yWOMxfYzcpsXhNYKmwYd+Pn2vOz/mGLK98DAQG9v7/79+//444/JyclMpO9Y
92wtLS0trcdBYm7CY1ZWFjEPB/369StXrpz4ajLfUdeuXVNSUvhix2bXzFFs
U2r0Ch5v3ry5a9euzZs3M6+mYFUJMmmqAk8C/4YNG7ZixYq4uDg+SWstybmA
lTfxXnw+voXmzfj4+EOHDq1cuTLSqIHu8E3zXKXaM+mVIZRrMfNtFgFtShcC
2wcHBzMPJ2s1ErfU42KnwcL+fDtpkwc+Pj40/9LO6e7uDuBMT08Xz9hCvXBa
WlpaWo+YZOeReTXxJ+gO80vp0qXLlCkDwqTHJpMdRUVFFepumsVGmZmZO3fu
XLt2bWxsLAtTRt6PmiWLNnG2+BXh4eHPPffc66+/vnv3bszgYMKIiAggIp0E
uJ+ev8+nJZOfAOAEzR4/fnz16tU4ZhiXuFA6/NqpIltKAVMazyHpNkVDmzwN
+nMmJyfPnj17wIABDFH3N7wTmXDSSWiwsD/fzpehWZgtSs39PmbMGDc3NwAn
A8r0TrqWlpaW1kNJdjmJIrdu3Ro1alTFihWfeuop2UAHdn799dcgJRLC/zXl
2NOwEgtTgsfWrVsHjgKkcZf5XzZyKA8WrnD+aWlpwcHBTCdVv379ffv24ZmL
hiRTfb5/FDkTiwIcxMTEnD17dvny5fjSu3fv8iqT+gqbFuQi0kVz6tSpw4YN
wy/lZaW1swigBV+RkZHBnEg4BodPnjwZZwLg9PHxIXFp2lTFbXTJg8Rnxo0b
x4Pu3bsvWbIEQ0Su5QAK9VJqaWlpaZVoqTubzKvJwpR/MOXi4tKnT5+kpKQc
w1gk2Z4dexpi7BL7282bN2nVBEQxtaZtWFCJo02c7e3btxs3bsz0+Hh85ZVX
tmzZgualSyeJOt+2TZAqK8UDzn/99ddly5axBjo3QNmwPHDs5bMSzaf8rqys
rEaNGuGXAmAkiWvRbMVKfnIupnA+CQkJs2fPHjRoEAmKyX+chAYL+/PteRlT
ktKjVSoxeXt7s5XGjh3br1+/efPmYRmoaVNLS0tL6wESM6ZE5RBFQEHfffcd
fTXJmaUNde7cGXM0Izv+93//N8ckQ4ecjMxTKm0SNQ8dOgQMizLE/WWJQy8p
tCleppGG1RG/Ij4+PiwsrEqVKqwyj+ZFO7/55pubNm1KTU2NNJ0E+EaGlj/g
B4q3J1PcSz30mJiYY8eOrVixAuxqlZ9K/nTI5ctLKt9CzZo1K1OmzMSJEy1m
Unfpe4V6Gvy9OaYBP8foZgD7uXPnYlUVFBTkZ9RSF2fFfABhCaJN+7+O6Un9
DcMvG4c+nAEBAT4+Ph4eHosWLcrIyJDupKPUtbS0tLRUMZMJna/UTDiZmZne
3t7ly5dnpiPGoQM7v/jii4iICIeDgcxQ6icLDjGv5vr16xkWxCB052dLW8k5
k5bxW9LS0qZNm0YvBdo2yZxNmzbdtm0bgJMvk1h7HjOM3fbzSZvcgufL8JiY
mHjixIlly5bhzzt37tjaoIoG8wQpcUFbtmwJ2pwyZYrt5S7U07AV6Rc0jqvg
5eXFVJMATj8z+SQ9OW1LDpUs5Zs2bdnVz9xe9zMDrDBQADiXLFmCQUNM5Y6t
DqClpaWlVaLFeYGee4zdwDNAoOHDh1eoUIEmTSCQq6srULNLly6AH/q8OdZL
U401sJgJP2n1whS2Z8+en3766V9m8vaSS5thYWEMDJdnrly50q5dO7SwpJbi
I56pVavWkSNHkpOTmY2TnElPTh7Yfr40COPccQCOOnfu3Ny5c/F6oKYsKDRt
UhIpf/nyZZzPkCFDAgMDx44dK+ZNFnDM1WBYguRY2iR+k8Bp4UQrffvtt4sX
L8YAwhuZQ4reUtfS0tLSylHKQd69e5cR6NeuXfvuu+8AAy4uLkQgWtu6du0q
NdALw8tOJR9WUcS0lZWVtX379rVr1wIGAGZ5wVVJkUTQ01YZGxu7bdu2OnXq
CGGKhfOpp57CwXPPPYcXpKSkCGPTbQC8Cp60/XzJmMRHoObJkyfnz5+P1lP3
sh1+7ey8uE5Im1LXEo+pqakzZ8709PQkbYKjmI2zpKOmv0Np099w15Qc+Hwm
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
3Nzmz5+PlZQT2uG1tLS0tPISJ2vgIlBExnCJ82UK98qVKzPwhB6bpUuXBtic
PXuW6bVlMqUh1LHnxk/OMaKZ0tPTgZohISGsgc49dKGp4ubBwhWuzqpVqz76
6CN3d/fQ0NDw8HA8A56Mj49PSEjA8fXr12fPni1rgaeffnrt2rX4L5ro4sWL
eIyLi4uIiFi0aBHWCFwd0FSIYyfM5S6SwHN0ABBy69ata9WqNXXqVNlPF+Ys
7jPNXTTJimG2SZMmuH3KlSuHX4H12qRJkwICAphtUtMmBdqkpwGPadvEgpeZ
kcDnnp6eGATUzXSnvfpaWlpaWhSnwpiYmE8++eS77767deuWJF28du0aBvlK
lSqVL1+eXoL0DKSvJmd5AqrEa+TvHPKaMtQNU6DmoUOHWC0I384y3zh+9ALP
cxXTOqWlpWVlZaWkpLASEB7RCCBP/AvAiTapX78+M1PhSnXv3j05ORn/olWT
eTXxGkkhJdvTzmzbVJc/UNOmTdEDJ0yYIKVLC9j3ClsWIy0Sf8L06dO5R8BI
rm7duuEZ7qQT4SQuxiGx6r8rB2KqAz+fqaLEmMl87wByPMPnvb293dzc5s2b
Rx9OtT9bdQMNolpaWlpOIu5IHjt2rEmTJq6urpMnTwbMYIjGSD5ixIiyZcty
91wigzp16gT4cew5WJSwYnVjVGJYbty4sX///nXr1olJM/KRjgmyR+RPPgI4
o6OjExMTR44cKdk1n3/+ebQYnsSLz549u3z58tOnT6M9HXvtClvqXjk6asuW
LcFpU6ZMUUHCyaGCt9iVK1fatm0r2as+/fTTkJCQwYMHEy/HjBkDoCJ2CmLZ
j3+/S4MFsT3m+735o81cv5Gb6QytCggIwCrYw8Nj0aJFN2/elJxItqkJnLxj
aGlpaT0+ou1l5cqVtWrVevLJJ2vUqDFt2jSg5vfff89EOjRp4pGoeenSJQkt
ceA5SPi5pGOSMuiZmZl79uwJDQ3lBrqEBWnapDcm2gQXBcwZHx+/b9++hg0b
8mLhsWvXrqDQU6dOofXOnDlz584d56m8Y6ceAdpkFoWlS5fiFqPluUKFCrjj
0tLSmIfTzyBMf2ObGI+gKcYNPSxkPhQfljjahMDkaJnvDdHC+eOPPzJwDGJR
XbXlnbxjaGlpaT0+YolJTN9ly5ZlUqPatWt//PHHVapUoa8m8+0AXT799NOL
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
GvIvQL7NvGjTzwwDp8V15MiR+Lpff/2VWdPvmSFdlvs9cGx7pvpfeVJ+vnr5
2BuF2SAg2ezZsxmuDrqmjyvPmU6kOCs3NzemnOX+tdo/1aVHrssQ2zOX3m5R
rKNWN5rtj1LtnPgzKSlp0aJFBw8exFmtXbsWtwZOVY2Aw4DTvn37tm3bYiQs
jJ6mpaX1yChbcX4DUP3lL3+R+ZEedOXKlcNAffXq1WwzCeE9ux0yc5XVECdI
IGZSTARr1qwh1DH8h9E6mM4AmcnJyRgDZTQu7HlZzu3OnTs4h3PnzgHnwsPD
QbyRZjnIYsmJRAJnricGnuMY7YPnf/zxR/xJA5STc4sqi2JjpFEIPw2TMtgS
nRArIEE4mjrxZL169YBwmMcx2aGLMiWX2qlkGpU5VN1DtH3lO++8wzrpecWJ
UP8102clJibu2LHju+++e/fdd6tXr65mNZeirtWqVevUqdPmzZtxhkXQY4tF
dKlF3wNSDho0CEAFrKpfv77YdVu0aMFqQfaoAAZOaxFlubmPvoSzCg4OPn36
tPgrWm1wOET4WKYdFmKEMHDNnz/f29t7xIgRjBXifrqvr6+/UXUIp+ru7r5u
3Tost7mronqKFqWyzZ13DCBYaHNRHx8f/9e//rVp06bHjx/HjYafs3z58iZN
mnz66adXrlyxPy2tlpbW4ynZuQOxYKqVtCScJmrUqIGBkUnhJESxgJgnS3Ur
ALAYbk5AzZCQECAcRjDa64B2jNbBMydOnABK0TpUNCYgorjEsxw4cODUqVP0
I+VZETuLRdIykYZtE6iJ9lmxYgXgnOhesgZ/FepkixYC1M2bN69NmzbPPfcc
vR/p46Hus7u4uLz33nujR49eu3btyZMnAZ/Xr1+n8SrHZtOTlkyVHmUHE5Mp
KJFpY9kt/2vW78MBziQ1NRVUv3fv3jlz5nTp0qVu3bp4vTCV+JoShl9//fVv
v/326NGj90w/ZyfPpZlvWcztWnTC8ePHA7979OgBbmeDVKxYsV+/fhMmTCh6
2mSwPE6JeYf69++PGwSwJHFh2Xb75drfFLLfrfr24BsBbOhaoF+iLw4A5wBO
Hx8f/Graft3c3NCHGVFeLMBpUfyarBwM0JNxG77yyisgzNdee61ly5Y4bdwU
lvtzRGhpaWnZigMj82pyA52zOVETgwnWsOICJJRYcNqUMU02hiSvJreDuUMt
7pp4BoyHubtChQoYk7n8LwLfNqnEAf3888+NGjX6+uuveWIMU6KZsehRU3bS
I41IeUxkwODVq1efPn2aSHOvpPntW8xCjdmmcpTsr3FxcevWrQMtNG7cGH1A
UjgyvlvqYILxXn311b///e/Dhg0DXSxdunTnzp3o3omJiczZpdoqxYDJAHBc
63fffRefACTg4gLdDM2LFRAa9ocffgC3fPPNN61atapWrZq4NDO3j5o6EjcO
7qbAwEDMzpyLZTp2noQAjpVgicWo/jlr1izGB7FNGjRoQLIqetrE9xLncE1x
+V4ytGzZMobkqIZuRzWF9C7hWH7FjRs30IUwgLRv3x4nw0glSf/+f0zhbLml
zqRYFkWOOsPfPX85bXHOlBsTK9mgoCAmwD937hwD0vnfEjTUaGlpFb0wmIBb
sFZlXk0xzpQvXx6jSkJCwr3ccm5YuRI9lGxNmhCGVvpq0obJqHMGBNFJEmM1
xmScFc6wYsWKmDg4XxT2ECecsGfPnhYtWuDbQRqjR48G3XEPndv9RU+bFCCc
Mfs4mUWLFgE4pRyeFK0r1PZxoMQoJEZIideWFcq1a9do3/7888+rV68u/h6q
XVEyh7O+Kuji7bff/uijj7p06eLu7j5ixAh07Pnz52NdA3zdsGHD5s2bN27c
+NNPP61YsQJcVKpUqTZt2gwfPrxv374dOnR47733QAi1a9dGr8MHSqpMRr6o
34jFWtOmTfHGTZs2xcTEqDmULIrv3CMJnPfMGDTeLFg2Vq5cmVenTJkyGF4m
TpwomX+KeCcdlEvW/eMf/+ji4oILV69evYULFzK1ZgH9gmwlvTdbSWuA8W3m
zJl169ZFF8JaCTyJP3Fu3t7eUtWIzqv4+WA5LGrQIW2zMDnqJB98/uptaFGC
lcQTVQ2kkiCjIlj7a2lplVzFxcW1atWK8ybmBQYHAeqwyk5PTxcfdUl4oo6l
+f5S+QRCUUZGBksrcnua9joWBgJEgeWuX7+OsRfTvVhLcIwxOS0trbCHOGak
2bJlC0ACUycLd6J91qxZk5qaSh4ulgycpFwGUoWFhTGvJjPmCW06Vb6j35V0
LXWmFpcAdW8dczewE40/b948AOFzzz1Xrlw5goQVc6qZlMiHeBmme7BQlSpV
qlatWs0U2LVGjRo0lpYxpJZczFX4NHwv3tukSZOhQ4ceOnQIqzOGOVtt0Ete
o2wz/uIRk9jS2fEAUWRyZunH6owV1YueNv3N2j3t2rXj+FbaUM2aNRcsWFAY
fptsgXtmjnT8ieFr9uzZ6CdPmkKP9fX1ZaVO+pQyYIqllEChOO3+/ftjKSTb
/UUJnLLrZDErrqpuqHIsyjYD3kvQ2lZLS6sIJEMEoKV169ZqaANGQsy5GOuA
mrJ7IsOIbA/ZP2Pars1Vz89sI5/22bNnV61aRTNmpBn/AtQkyGEGP3XqVMOG
DZ9Q8n9yyhg4cGBycrLV0FeQEc/qE/hj165dy2w2aq3nOnXq4CTj4+OJx//K
TQ5kS36gbJ0L5QI1z5w5s3z5cjyqc4TYA/PdFEUvaXmLUnBcRdAcY7M75/6o
bXTOpKSkFStWAGnatm3bqFGjZ5991tXVVTXUyyxvS4xSJ4svFidMK16VTwBE
gVRffPFFrNG6d+8+derUkydPZmVl5ShxwTkGfeUo/JxjQkiRAUMR6z9KZfnL
ly8zkwDrVL7zzjvTpk0DRElVHX8zflxKOuaDNh8MqwQ22gnx7RgomItJLiiE
ZwCBWB2ozCk90M7LZDXsWP2JZsHwNXbsWKxrVGM4DrBCCTLkb6bflN+Fk2cR
Tw8PD6mlXuz2QyvolXWTxVwV6ighLS0tSkCR40Z4ePjHH38sGWY4F9eqVev7
77/H9H3PCIrMMTO5FeRLVVmUnZd7RrGVAwcOAOeYOJ0FvqVGJMvigOj69u1L
n1JVnPoxILO2kfy6fJ+tRXElzTZzmGzYsOG5555TQVfS3eOs4uLiGKejlows
JNqkm+g/TeFPfDs4HPMRHhkTWvRmECcRoe769ethYWGhoaGYsvv16/fJJ5+8
8cYbzzzzTJUqVRixkqvxU+oW8RKrL8OTFStWrFatGvCyZcuWXbp0GTFiBBBl
z549sbGxNPLkPHyirUdPalAVmkg8DUBZ4D1hP+4a+5s5J/MCznzTpjhDskY5
sW3y5Mn169cXL1/62XKTombNmlgvpKWliaeiapO054db3W7qigOjx9WrV319
fenyYaVy5cpxtYLzJGqyKcjkLDw0cuRIT09PrMS5tSRIX7jXUktLS6tgylby
CoJVgJqyV8hJFkSHQS8xMfGeWUknR8mlmT+ps7DF9FvjmIzJ+vDhw2vWrCFH
kS2FNukMmZKSsnXrVsz1qqlKtTiBIgYPHoyX5ZilQPLtF5etVNyg0yO45eWX
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
0nJCibkGx2CVDz/8UDCJNFWtWjWMbKw5Ljvd+XZ6zDFtRzmKEUmmG5wG2A8T
0PLly1l/R8KCVNq8dOkSvROBi2Dgdu3a2WMfsOXAzz77LCwsLEcJw7c9W5ky
aCQEjffu3ZuBSKoNJNevoB31CXNuff/99zHbMj2R4GK+y1mKaZRZoQCcLKt0
4cIFtB7asCDXSMtWFiX7q0WJwpA0swVMy/CIKVtJ60pEx+0TGBgotwxuIgws
trZBi5kqHPf4hAkThg4dyrKSEydOFLgCRnI3Od+0SWMgPhnQWLt2bfvHDdzR
LIGKFeuIESOw9uSoyNQcUuA+26ybII7B+BfGN9yYGGOlNLz9gxWaCwNdUFBQ
rrWW6L2JR3A4aBPtPHz4cHd399DQUIw5/zVqqcvlKPrOoKWlpSVzAdAFo5ls
G3EwrFGjBgax5ORkmibUEoEO+WrVApBthHgfO3YsJCQE7BQTEyNejpGKxyZt
m8ROoOapU6fq1asnE8FDjeGYMv72t7/hM8Wt0fYkxWGAHmVubm6EcLYSgTMv
M4Xsygm34xMSEhKENvlz8kebkUYdJbIrORMkfObMmVWrVuGRhYk1/zhKYqKU
wnyyN2pRKl7p1haxucQbE4+4tV966SUBthYtWqSmpub1XhoDr1y5gvHH09Nz
7NixTMgp2SbzIkl7dtL5iA8BwXbr1k12RuwZMcSbnXf0sGHDYmNj1RKNqqlW
yJM/55dffmndurW4g9r5peKW89prrzFyKtcfpbq50s45atQojFebNm3iVVB9
iYu2L2hpaWn9v+oely5d+uyzz1jzkYxEX02MXfHx8VL3Vt3vLsiQZbvJiMfM
zEymcAc7RUVFqcmOVGuemh392rVrixcvZqnlvII6HyyM+Z9//vn58+cJEnmd
Kn4vvrdXr17lypWTGFX7pwzZT9++ffvVq1dp1eRPyHc5S2IqsByPaDFMeWfP
nqWvJgtTytZe/juHlinpBlLPGo3Mkt9WG6nFfabOIotSXRQCN3bu3Jn50nEj
VKhQARTEf9m+kTcjdeHChaCgoMGDB4OymFuS2X7sdObMC8x4MH36dODfQ40Y
dMaWzZSqVasCOIHNdABgIJ78LqkPi4PDhw+/8847HAcedl38hDEsP/PMMwDI
XIt7fq9I0iIxDydYHcOOBLJZuXZoaWlpFY0w/iQnJ3/88ccSW83BjX6GtGqq
+90qc+bvGy02URg0nB48eDAkJISpe8hRtgmCSJuRRjjMb7/9lpKSMnz4cGar
e6ih+wmDM/mTMXeAtMPDw3P9RZzy8F0dO3akDUTsGzL72Dlx4I2YMdPS0vhb
8BMKQptsmf+PvTePq7Ja+7g95z2JijigppgTDpk556xZlmZWauWU8zygKCqI
AtaRRxHn0kwrcwQcM3OoHBJnBBxA0DqP5QzOggNq5/PE3ry/d/8+9/Uu9gbc
7L0ZhPv6g8/NZnMP617rWt91rWvgHjpaDMC5atWq6OhoUJDUoabXln0dRJf/
T4Q2SVBfffVVQEDAkSNHjFq6ctlnz+s7zS/ClqFV88mTJwsWLHB1dZXMvR4e
Hvfv388wA7lRy3pK1x30YYyRuXPnAuq4hw6UYoCPnbZNwBhos0GDBtaDnzjG
/EOrIYWfWKQPGTLk8ePHBi03mqg4prfF42Ad3bRpU+4cZZczRXtgWY12A3tb
PhRLqBPFA03Jo9gU+BVthWXy999/z5pWOnDqoosueSIAlbZt24ou5S5PhQoV
oI0ZK0rNCU2lZibM0ChhvaiGTejnlJQUYFJoaCjYiQ6ZamSQCpw0b7JWzqVL
l3DzvXr1Yp1l0cnZUuA8wCO3bt06MjIyw7uNj49v06aN7IlLAlL538ymD8uI
+E8++eTu3bt4RuK0FDS3GTjpwopTofViY2MNWoJxznT2lEzSRRU12BxcAUTB
e8dULvYiGRp5faf5RcREiSbavn17xYoVZdB16tSJi7sMt0iMJhdHWdXyO+jq
oCYvLy9CphQDsoE2+e84T1BQECC2UqVK1msMVWlIBgxqgGHDhrG8GnfV5c4f
PXqEsUmmNSt+mq3r0ij60UcfZWjbJG3S5EurJosNMUUnFrmjR48GcAL7DenD
BvOia+iiiy7mYlDqi0kaGdWyZ1RymzwvPtgGrQo5js+dO/fhhx+yBrrsDru6
ukJTieak4VHYUsybNt+AMX385sOHD0+ePLl161ZipEQDZUibgmfM8wPWYliT
cF127QZqYj0gZUxMDG9Sbg8Y3KVLF8miKaipZoF+ZnipTC6428TERHAyQdH6
7O54cFpBVd7G8cWLFwGZmzZt4ga6lEgWo7H9Hea5FhmSskpKS7/Ja9QSE6Wl
r15tJkKb/MdmzZoVLVp03rx5Bi3aV6dN0QxGJZAKjYMu+tprr0l5hcqVK4O+
aPbMrACZQctcKmV38E10/kCt0hAgioV1iFjZpU1GowM1oehYJyi7GkP9lSvQ
EiVKADix9JP+wNZYt25d48aNM/t3K68o/9WhQwf0uswwW1KJ0gLMA5BncHDw
lClTxo0bB+BkwzJ8qTB3V110yT9i0FKXS2JejM2EhISvvvrK09MTS0WM36NH
j0rRW4MWtmwPieWCUM9AwCrdunWT6Eip0QY1fvXqVWp4caCyWS+ZWUFVXIc8
ffr00KFDQE2pgX4+oxTuqtBvE7SJmwSmYiLLrvbOQqt36tQpIiJCJjscgw+Z
D0qQ0raNMErLli3xCOBkKS5pJW2ylBK+T9svmuvs2bM4Dz787rvvTp069eTJ
E5WgCjn5UAxKQVWhTXXNKGQusT/GTCLg1H/H11q1agXaXLhwodrOhbnNBWC4
dS4LVQzwkSNHspYrrXNQL9xDF7WZxWmlJ/MFxcXFATUnTJhAXARHcdeYVClV
Ha0RfHPRokUTJ060eWtbtIHoT2dn58GDBzNTHB8Nms3d3d0GPx9V1NwXUCAL
FiywfBxL+JSgISk0z6ChH3/8kc6lki021zqJLrrokqFw4mY0H3d7sUJ85ZVX
3Nzc6tev36VLl7p169aoUWPx4sX4zs2bN7/88kso0gcPHmQY2pwfxGjyYydD
3rt3r2PHjhKMKUU0oJHwJ84XfBA7N81lQk9TXLn4IY4jIyPXr1/P7WCzOjuW
GKZaO0GbiYmJx44da9iwoT2a3EzQAh06dDhx4gTuLSYmhlBRJDsBQVnLq6++
ihnz2rVrtG2KG6o1tk38I1GTceiXLl1CI3z99df4HHO62N71bTKKasAxak6V
kvZQRGxQKohank2nzayFDUuvRQmWwQpo7ty5pUqVEiR744030PklAuiZLaa+
Jr5N1lIHcKLxQZtMvPmZJlbSJmEMtOnp6Wn/oFZ5Fav1Hj160O8Img1zhD0o
S1FhtXnz5vPmzbOSNgmcbBNWukRzAf737dvHtRXzherqQhdd8lZEy0F1hIeH
t2/fHvPLe++9d/ToUYxQwCcgc+XKlZUrV8bg/eqrr2j78vHxyesbz1Tkia5c
uYLHofqS/ORly5aFUrp//75ByxSnzrD26CKj4m9g0Bzp0arHjx8PCQkBdwGc
MgRLyw9lt53l0Q8cOFCvXj07lbmlNGrUaPny5S+++GIRC0fQ7OZkNpNatWoB
ZcHJ57UoIev9NmnSBHYCMi9evIif69ati42NTdXK3OioqYo0gmxSiFFdaEdM
wX9rJSkzi/TRaTNrMWgpJdkIHONr166tVq0aczhg4GCoRkdHp2mR2kYlVWlm
Ip2ZJlMa4jAEZs2aNW7cOO4XB5piYWRL3UrbJgS0OWbMGLs0hbZOZ+U1mnDx
8/3338eNlS9f3iFKQ1VBzZo1mzNnjpW0yaAhRqnTn5O11EeMGLFt2zbWUte3
QnTRJc+FMziW599//z3wAzqkb9++4DS1zDS+M3v27KpVqzZs2JDrdywh8+2w
pUoBpXTv3p2RNVItCIpx+vTp165dMyiJXIwOSiRo1OJ25Ve0KlBzw4YNBCcr
N5TJZlIK/Pr16wcPHnQsbbLQZJs2bVavXt2uXTsJAeBfn1k56JlSu3btU6dO
JSQkZJc2uYfOVkKLxcTEhIaGRkVF0VfTbNbItz0w98WY3s2Y3TspKQlvARMu
hvahQ4du3rzJOGK2JH5meB6dNrMWg1IjDN3yl19+ARphBJHB3Nzc0GMlXpsv
RQAyM1Ftm+LDiWMoAdCUt7c3yYo5kaynTf4XaNPDw8N+pSHPKOqif//+S5Ys
qV+/PvWJ9fk8Mzu/HFtPm5IHibZfqHe6HGDCYlqk9evX60FDuuiSTwS6MTw8
/OWXX4YOadGiBVScxGWnaTFEd+/erVOnDuNHMAEBA1hUIh8KbhuPIPV5qQlx
5yVKlIAuAgKJPpfNbk7TdqZ2UR20aBaOjIwkarIODjnqmSEzqqMjUO3q1asO
30lHy7z55psRERHQw0ePHn3rrbfMCgbZuS+Gu6W/pTys9X6bLHmJFQEO1q5d
C156/Pgx52s6SGSYT6bQCmdP4Rl6xaDF0HSAgZYtW1avXr1ixYpAAiy+li5d
yvgOWvUzO5tOm1mIlNRBP0xMTGzevDk0DFoJI8jFxWXKlCm3b98mYYpDuPFZ
dSJU2kzVChLhJ17luXPnwFQTJkwAZDL+mm6cVtIm0Auvz/6ddFmBMrsRnrdv
375QTehpO3fuRO8qks1EGZai/jumofnz51tJmwEBAdxGl411NBTTluKvo0aN
2rFjhzG9+02u9RZddCm0YrQQqLUbN24AD6BMypYtu2nTJjXVpOqn1LNnzyIm
eHN3d09KSspXUULqEyUnJ3ft2hX6UM3hg5+TJ0++c+eOmMikBo14V1pv27Rs
RpnxeUKgZlxc3MaNGwFd0MmMdjmf3icza9pkaDaI69KlS1FRUU2aNLFHk5sJ
KAK3JyXnTp8+3alTJxvKYmYmrVu3BvBfvnxZTJqZPa8Zi/5mEoYFrV69Ojo6
WoriGbRSRwUgyFSmPHX6M+tO2TqVTKbgE6ynsNSqUKECUHPVqlWxJvnxxx/x
Yfny5Tt06HDo0CFZFmXWk9napM0FCxaofiaFZ75WH5mfiD82fkLPDBgwQEYN
Dnr16nXz5s2/lZLi6vEzLyQKWWp+UfFCdcycORPAyaKWZgWGskBNxm7j9Xl5
edmJgkW0jXJiZ58+fbAwJBU/ffoUS8LsZliyFHVvhVFCGYWkZ7yTbtYaM7To
oaCgoKlTp44dO3bv3r1myaayO9B00UWXbAnd3iSUEqoM3NitWzcwJJTJxIkT
8atRC3IRhcn5vXv37txAGTRoEPcm8vpp/n+ReB+g3RtvvCHBoSwY5OrqysKU
Bi2nEyZley5n1MIxBFaNirEU6jcyMjIkJIQmTWsi0M0AjPFEEiWEn2+//bY8
jg1AyP/iW27btu3Dhw+ZZEBU7t27d/v166fW/pBCckWeVbnS8n7ArtevX2eA
OUN+MtxJZ6In+Rptm6DrkydPrl+//vjx43aGbuVbUVteljniWpmFX6WlSEAQ
Xazp4luyZElgxoMHD+i0Rm9AnB9rSQBnuXLlwsLCmJFbjR6SY7kB0Cb6DCCH
v4rTbE63T34QoxJLpb4vNAKa7t69e1CD1DPMEtaxY0fwJ5vOsbeBc2J0gKnG
jx8/e/ZspjTnDjLdFANN+X8sadPf3x+fz5kzZ/r06cWLF7fer1JGtOqGhJ/O
JgG83bp1i52BQVL4eebMmXbt2uEq9myOCLpD3VlJm1nwNkFUttSx9ofeMyuE
VEg6sy665L6otgsOupUrVzIjcdWqVbds2SKmP0P6xB1QsA0aNKBC+Oabb56Z
0yPXhLMtDZWgsq5du0pWYW76YG6FsmWyIy7G+V82X9GoJNxTbRH8HKjJFO6Y
IAQ1s0ub/BpIjLZNSO/evUUVy9NZOXHIlxn/hTMzBYFKy3iK27dvDxgwgLOS
2cZ6FoYRIVJ1hho8ePCdO3cka2hmDy4BQXRSlfKUYKGoqCgmO3JcT8lHYrZO
MSjCBUtqdnK9Ciii6d599128ZSwcQD4YFMKu7PyPHj0KDg4uUaJEtWrVjh49
ys+5cpRdDDWYvWnTpugPmPcl65R8IUfbJz+I8L+6y8NmBGr6+PhgDSujoFGj
RqdPn07NgfLcRi0WCUoA+OTl5RUUFBRoCr4ONMUN0Y0TKi5D2yaJa+HChRUq
VLCeAOl9VESjTWhU2hnw6+TJk5mjWLwFJAwNi8R33nmHaY1tWxRTnJycevbs
mWF2dytpk4ZN+nAygIgWTgAnR4Tk1S8MPVkXXfJE6NwlMRdXrlzp3r17EdPy
vHPnzgkJCWlaTqQ0JWkkBEtXaFcoEBcXl/Dw8Pwz40gcLnDlww8/hKZSd4Sh
+hgWJDtT8mg2X9GoRAMZtIwlbCVM3BEREd9///3Zs2cvXrwoyY6yRZsUJg5i
iM2tW7egLc2c8K1U5pLNHhDywQcf4MZY2c2YfveWFht0gJEjR5YqVUoKiMhJ
nlkWRK06NHfu3KSkpPNatvbMQu/poil+qnQ5WLdu3YkTJ5jsKP+ndbVNhFvE
Ks51kNgVOTytPBtP8vjxY0ysIEnwIRpQ+FB18MArjomJad68OfihU6dODx8+
FPdCWV3yuvxfQBTONm/ePKNpjz5NsernYOvkJzEoBRrYpGznsmXLYkBxUNSp
U2fz5s0Y+/wXx3Za2TTBTyhh4BN4D29k2rRpQpVZOHMyTHvFihW1a9fOLvXJ
KpKOqZBRo0bdvHkzTetyZjZ53CQWiZhHilixSs3iomXKlMmscqWVtMnPaf6d
Ycpyjw+hQnH/u3fvlk0ofSddF11yTjiV0OiB461bt5YvXx5TD0hmypQp4soo
rnGyffbFF19w0dqwYUNMWPmHAYh5ycnJ9AegymIoOrDH29s7sxroNusZdRtd
NXKi0YCaISEhgpqZGS2fKYQ00iaQDLT59ddfAwKLZH+LSvbC3nrrrQsXLmS2
Ny32sdu3bwM4Jf2mlcneZWLi/Pvzzz/fu3cPDyvFgCwfnNvr/BMLdJ4+fXrN
mjUgJbE8ZMvE9xyJBDWr2+iG9JW8rOyf/D59SKpVqwY4bNeuHTBS1hEGrcon
YQkYD1zBWMacjmWRFGYyalk6mX6W32zQoAHeJmZqIf/CM0erL8KoVH9YtmwZ
UJPmPjTOiy++uHz5ctqHDdl0/7byNpgzhOsR6BaAJd7g/Pnz//3vf9NwN8NU
pDJD2yaB85tvvmnZsmW2lEaR9OtHrGJ8fHwSExMZHGpmk5fVCu4QSgbXwr9g
TiGQZ0tfQSpXrgyWtse2GWhyLZBa6qpAue3atYszoEF34NRFlxwTWaEbTdE0
zMNGz0aMQSm7IEDFTzABffzxx1RBI0aMuHHjRv4Zm7iTa9euYYYVv0QCUunS
paFs79y5oy7A1QObq0uIapKWZBMdO3Zs3bp14KjLly+DsjAvZNeeqULpfzRh
EiScnNaJZ9oYLaVkyZKdO3emaVcygatzomCz1EkJCAhwcXGRMnzPvIT6HTc3
tytXruClCExmmPqJf8LchAfE92NjY8PCwiIjI1O1EqI0t+afnuZA4SijwSop
KSk6Ovro0aMPHjwQYiFjWHMqMU0HBQWRf2bOnCnwgwYUe6n4e6xatYprzJ49
e6akpEiYvwrA7B7ozwsWLMDtySAqbDvpqsMq2mrx4sUVKlSQYQjsBGoCy8Uc
nS2fW2tEbXOj5sMJiBo/fvwMU04kBg1Z5nuncY9x2XiJffv2zVaGIhn4OIAu
Bf7dvXtXXLDYdcX322AKumSyd4Mp0fEnn3zC2mTZuiJ/Nm3alEnaM6sR/0za
pFUz0ORpwHZgWzFL0vDhw0NDQ/E21c27wtClddElN0W8jzC4oLVq1arFkV6n
Th164wiGiUmEm9SsnFisWDEsObO1zZfTAlb56KOPwJlq0shy5cr5+fklJCSI
VVMCJcSIZ7PRTOZlsb89fPjw1KlTTHZkVq7RNtoUe6BkngThd+rUSVxSi1ht
5CxRokTv3r3ptioPrtImH4SenLL9iuZCA1aqVOmfmhTJcl9MaBPf6dKly6NH
j2i9BHIzSijDRmArXbp06cyZM1IDXd32NRTQknNs5Fu3bu3evXvcuHHu7u71
69ePiooyaHH31o8v4cOGDRuyFNSPP/74t1Kem29TTJf40969ezHei5hKPoFy
1YWYQYsK/FurcUm0EOAR7ZGj7ZNPxKAkyb9///6yZcuqVasmZv8yZcqAXkhc
UsjSaMrQ7kCDvNgHZMkgFs5JkyYRrjLcSadtU/bZQVms42Al+DGLOw6gQHAe
oKaY39O0usAGze9C7k1yymFoA+qwzrXetikJ5D/++OOFCxdalobPlm1TskXN
UGp9Sn6ksWPHYpioM0Ih6dK66JJrIuMLB4cPH+aOM8Z4z549ZU5R94+oQ374
4Qeo2SImsxWYip9bnjkXpiGZE3ktYFifPn1YA52oCaGvJqhP8EnV/0Yl1NR6
MSiOrNIyqVos8LFjx7Zv386SixIacz77vpoqg51Pv/MOoIXypP5/Zslj+auT
k1Pfvn2Bc0aLDPZioc3Q8IsvJycnQ1czgkyFSbOrmPl24g4xU4Cj+BTM+8TH
kQJJ586dYxz6eZMdGJ+sW7cuIiICeCl76AZtb9eg7HbJe1dpWZjKwV3NVlFn
LrXBJVoHx+gzoOsBAwaA+jAG69atO2vWLEzo6iuw8nL8MnCdM3v58uUxrtUR
atSy5kqT4kVg8cgQYxCU8Kp0abFWiSup3FVBtW1KFzIbDnxYNMWaNWtq1qzJ
ro5X5uLiMm3aNJYkMyjbyjnRMmZKj8cYPmBdLy8vLP8ZnE6mguqTGo4MHaKh
b9GiRS1atCiSyeaIpNOUoL9/mQSP6e/vL44ZckvSVdRuJk1HKMXQBg9baqqs
dVfZsmXxUPPnz6dB0jbalLpCM7RUSJKQk3/18fHx9PTctWuXbKNYuZWgiy66
WClGLfMbfq5cuVIGfnBwsFHxwzEowS84mDt3Lla4QI42bdowTyOtJQzuE4+m
bM2S9tw/bww49M4770hmD8kOBBVHqya94FK1KAmbr8gHTFOmbJm4/zbVQN+4
cSOa5Y/0ki3CfKZcv379+PHjeAvPVNcylaBZunbteuPGDZsfHC2MV1+mTBm2
sJofSd06l/bHz+rVq586dYpuq4ypp532vCnuid4FjD3HXzEf4cPly5fHxMQ8
ffpUXi7tRWnKFCaOjqlaip4nT54wqUJqPost5f3QSKsyM81f4Eys1zp37lyp
UqWiRYu+9NJLmP5ADo8ePbL5crgQcB2LLLwId3f3EydOWLaGGPPxMzExEQOZ
ewGYhVUraIZIb9C2OeQF5Z/WdpRI75Kf6sIHa0ksu8RLBzoHSgZLqrwCb6Op
Thl0DhYpoCas7wCW9OEkVuHAz8+PlMVj0Ga/fv3Mdrf5OHwus6GNX0uVKhUU
FAQloNaVe+aNGZVccFhUDh06VN2U5yZUFuqrXr168+bN4w64JUZaSZuW32Hq
UfInWRRtMm7cOLxZ3qrkBszpd6eLLoVE1JW7FJiAKoiKiuKHLAEsWzacH8W9
c8CAASQBltKAvmWAs8BATutesb5evXpVrYEu62LoEKhHg1LLw07Dl1GrK52m
kKdBK5d88uTJkJAQSReZcwJIu3//fq9evbJOZycVJzGt4MvCyTaIGLtWrVpV
rlw51eIhqCnlRYpoWQcxC9+9e/e8UhFJLLTx8fHES35+6dKl2NjY1atXg45k
wULNL+le2eBJSUn4FxDpmTNnWFP1b63YCr6Mlr9z504+mSZUH0ixRzHKA4/8
1VdfNWrUCFjo5ubWokULQALWAnZWR+JQpd0bb6F+/fpoJcuzqfSI9nz77be5
Ohs0aBBGsWqdE0lVAgb5ierRbXdT5S8xaqnM+IyMysF7wSogLCyMpcBpACxZ
suSECROYniuvylrJ6h6dCuyE+wGeMeHPzJkzuV8cEBAg/pz+/v5YNuK4du3a
quowc8kW7MRj4pEBqNT2YpO3RmTlwn4CbQCdAHBlkKnYTs1EUnqCTpcsWZJZ
OXh7aJM5kSRKHS2GZhk1atTPP//M160WuMzR16eLLoVBZCrBgOrbty9Huqur
K+ZrajDZU6PSAEyePXuWpbSdnJwwYA1avgvAg4eHx+nTpw1aGEIuTEPU8H/8
8QfzapJwOM8CNaFJEhMTxevMgTtcwtJiKYVqOnbsWGhoKPDp4sWLOYqa501F
dvBoP/74I/NQZbaZzg+dnZ2Z8dLO1Tq7AWT58uWYp9Qcemo6Pn6C4+rVq+/e
vZslhFRfzf/VKr/TzskWA2quX7+eEeiCjuxIEjEKLtq0aRNmhBo1alSrVq1y
5codOnQA/UqI9J49e954443Dhw/bs6BwrPBZ0rTWw2INY2TBggX16tXjJN65
c2dgJzhT+pI9Exz/d8iQIYwBadKkSYa0maZsyD5+/Pj9998nbaI98TqM6RM1
iB6QsDIVIQokbUp0D4P0iZpY36Hn04kIbVW0aFE08rhx47hAyK6HrQNFvElx
JxhQUMuqD2eglticUUL8BIiFTtilSxd646jRf+oCFj/xmFAyX3/9NU0KYuC1
8t7EbUn+8ebNm9OmTWPU4QsmyYw2sQoD4hKYaYd0FG0GahlKZ2jurJDg4GBf
X9/Ro0fv2rWLoV4GxW8nJ1+gLroUfJH5AgcTJ07kSMdUDr0qAYb/p0mqFlPA
zMCYKDG5y8S0c+dOKIfw8PDcHJi4NKClT58+AKoi2t4u1FTx4sWh0K5evSrW
Cfm+ALad11U9lKCaIiIiWJiS1cAzrJXjQKFJECAHzFbnCDNhrhLgGb6ZqoUF
2fbIBiUY9sGDB+vWrXvllVck27MKmTzAJDJs2LBLly7xVlXDJgmT2ZCAzcTR
kJAQtCFTPgpnGrSiA5CYmJiRI0dWqVKlbdu2Cxcu3LFjx5YtWzBT1KlTB8CJ
u0JvxC01bdr02rVr9rxcxwpxJc2EnUeOHPHx8WnevHmxYsVefPHF3r17r1mz
hh7FsrizPwwKLUaKwFvAtbAMzHBIyrY+vv/hhx/yVTZs2PDkyZPG9G69wpO/
/PJLWFjYuXPnzFw6C95cLIZ0CXgBk4NGoBtluGFkoYffvn37b60Qm/gn5LLI
fXIVgDcOjkJPUyPT6a6JT0BZIKuAgID58+dPnz69UqVKMoRVrxuhTXRUfFMS
IzAjlvWSmt7znwcAznnz5nEbPbOddHzeo0ePZcuWMbOTY2mThAn2JnPS/IsD
Vhry8PDYtm0bwxKNiuTQ69NFl8IgRs3PH8MK0z13QjF9AyfEGMglM7+GAQjN
Q7PJyy+/fO/ePZ4En0N7vPvuuxcuXJBNqFxQvLgBTNm4HzU0G4txkLOaV5MR
1gKZ9tCm8DmxzWBK4R4XFxcaGopZGHBFB0WWNc85QTtjTklMTMRbA+RnlpUI
nwM1maLKoAUj2/bgQh3sEikpKYA97sSpG+gi6B5YgOAO2SCqgDZp2MSDYEUA
7Pz222+PHz/OlCliz+Rbwz3jeP/+/W+//TYgrVevXmfOnBHPMXQAABuY6tix
Y5ib0AeGDh36t6PLBdojpHQg3Lhx42rWrIm+WqpUqY8++ghojfdCTxV5OxLL
bPP9c2e8Xbt2fB0tW7YEz2e4ky6jG4L7oYELL1S8aIyK4yK+g7eDV1C5cuXP
P/9c9tOlS9jdTvlLBCANWt5I6D16LFPDoCsOGTIkISFBUiVQq+RJdAktA1TR
TBSG/ubv7w81SM4kXDFSBuT2qUkAWkuXLv3ggw+ELWXfXBaM6KsLFix49OiR
bDFIQgNrbkxd3RuUiH6jKZoSTers7JyZ7qpVqxbuEISvEqOjaFNyIqlF1UHg
oE2G848ZM2bv3r0qJxe8Tq6LLrkpnOOopmJiYkqXLs1hfv/+fZluDEqwAL7D
LElQSh06dMA/UtFB67Zo0QJDVS3K4NjhabSQW7dutW/fXjx8uByGepw6dSru
P1VLEqJuiBiymW/Z7Ipp6atmQKCHY2NjgXwsZQ6UAnM6PCbIUiRx5e3bt7ES
p/+kmbouXrz46NGjJQmJ2Axtbn9pOvGABZm88sorfAVcg9BYgRlk0qRJQEHa
Ns9ru+dSLQitxGxIQEe0HovdyMJHoIvLnB9//LFu3bq4yocffvjw4UODFrPG
L6MHvvXWW6zIjJ9gIaE19cWZvUGHdFGjFmSnnl/OjDvEkgdz1nvvvYdZFfeG
dRwAgPWbOGuLuVgN9LbHWoh/BMS2atWKiy+MygxpU6ZR3sDHH39M2gQPq7Sp
KgFI06ZNQSBz585N1Sof/V+BKJVu2U+MWpYJ9De0p6enJ8MPmaUcSga4IvVe
pQVInnly/xzmDGXi+8LgCgoKYi31f2sCfqOFE3A1ffp0/GnevHk1atQwK9zA
oVSlSpWVK1dK1Iy0DJdIVt6Yqi0pYrt4/Pgxzo+rWO7LuLi4QHcBRwNMAnLO
jC3tEVo16b3J4xmmDFFoJT8/v7Fjx+7atYvvVFX7Of02ddGlQIpBC8GAXL9+
vUePHhj4rq6uahlxmdbBCVgIu7m5UTlAG3BOx//GxcVVrlw5LCxMLDMOj1Q1
Ki6XuCvMob1792ayuyLaBm758uV9fX25a0wjg53J7oxKrISZwqRV8/jx46Gh
oUxLTqBiVp/spjnKrkgOz8TERNxDgwYNOF9IqSC8REw0SUlJjnsDGQje8v79
+1u2bEnzsvj8v/baa+hC6FFqBDognLRJa+eVK1eYV/Po0aNoSZnfDVqOR/IY
QBTshEfDE+EkZgsHTvfoeHx2/ATfqiHV4j8g3oZE2WwtOrJ4fLXEvFyL/RMd
AwMKfRJTJxpkwoQJGYaHO1Zwfiz98EY4Itq0aUM/zMy+nGYyQGEocZlQtWrV
iIgIaWF1ksXX8CIw4hYuXKiCuv3Qnudi1Oy3qnsAOyHWkkOHDpXkD4DtcuXK
AX4YSJInbGmNsBNilAGi0PEE1YCXUkKdYTJffPHFmDFjwM9m4UKVKlUiav6f
QytvGhQnGW6RfPfdd8wlJQoEjYz1Y3BwsHhsCi0/05KZBVhaI0BNtMn//M//
ANR9fHywkN+5cyf3XFIVT2ZddNEluyK2Ptah3rp1K1aaUDXLli2TvSFO09HR
0d26dcOsBH1VunRpfAdLP9nBgb56++23GVFrtDvLUGYi21sgil69ejGqsYiW
fLhkyZJTpkwBaooLU1r6bIc2iLphJOZBo5Zs/OTJk0zhzpqMEvySC7RJIcsl
Jydv3rwZSCMGChx7e3sD9nKBbdDOwMX27dvT7FPEVGlu27Zt3EPHHZ47d07S
HPEnPmcm0tWrVwOVHz9+LO1sZksXl0KcHFOGuO6nmTqDQUuLBOJlsEPFihX5
HbGLpmq1WfmhGulgj5edsDEuwStKt8eDg8cwXZYpUwZs9uabb+JXcCazFOY0
nxhM+RmkLmHr1q3RJ7N4ijSNNgkbQpvqIqvA06b6+oyavZd+tnh9LEnGdRw6
GDjkwYMH4iSZ1/eeqbD/x8fHg9a8vLwYhM5t4v8xCQ16gKt58+a99957HLws
Lunm5vb1119T8zv25RqUmFOuKDEkd+zYQfdRtnONGjWmTZsG2pTSP5I+NEdp
k99EgwQEBLB6EY5HjBjBsno0xurAqYsutonssXIivnfvHka0q6trnTp1oGm5
uscqHovcJk2aDB48+OLFi5jLAADQDO3ateN8vX79+mrVqoFUDemTojh2GhLb
EW7ygw8+KF68uDhqss4FlvAM7OV63Khsm9p8Udl3Nnuov015NYGacXFx5Mzz
maRhzyGhnZDXwjFIBo/PBgFqTp48GU2RE8BvJmLpjYmJoT0NiIXJC1fnfUqb
4CbRUCRk9CJ8uGrVqtjYWO4pA93TNIMM9+kYHBQWFkazUt26dUGtNMLzpRiV
PDyYGghXnTt3Tk0vBiUOTpxCVTO1bQ8uVJyqBJJfuXIFkziQrFy5cpi7MUCA
09w3F5eVnOYT3I9Km7gZNHhmXxbalFRaQpupSnBHYaDNVKUIDl/W9u3bGzVq
xGbhWgYM9uWXXzKFO63x+fbB+e64M4WxCXzy9PScPXs2DiTJOWNk/Pz85syZ
AxZt3LgxYa98+fJfffUViFoMDg68MbU7GbRsuviJ9TImETrkTJ06dcGCBYFa
wLikDM1p2mQ4kuSMInD6+/uPGTNm3759xvTuLvn21euiS/4UMwtGqikOCKoG
tIl5p23btljzYqKvX7/+okWLkpOTOdxOnz7dvXt36F78CfPayy+/DD3GsA6D
Ermc6tDUKESRmzdvduvWTfaLuRgH4WDxzrAgNYeMeFXZc1EVyNNM2hJPCtQE
SIB/WPvmvLa1zWjrzCozOlB4fpAMd6hxgDsZMmQImgKoiRchDrSOav8MRRw4
0ThYBbRo0QKT2q1bt9AyAsPntbJB/BBIhrsNDQ2Njo4Wx1qZ68WcYjDlgq5X
rx4DVzFL4vwGRcS6iINmzZrRALV06VKDkhkSp8LlsA4aNmxY7dq1a9asic6D
uRX3A2awh/2MWtpVHAD14+PjfXx8XnrpJbBxhQoVAL3btm2jBUyWYHLbDn0D
5oIrJiQkAAtJm/TbzOIp0kzN3rNnT44mzPjo22ZrqwJPm2JwY5dgxHT16tXV
zWX0HxCRKATRM3l97xkL12tcmnEoTZ8+HV0UnV9KCxE7MbLwE8+Ln9D5NWrU
WLNmDfcCcsIp16g4Lah9DNf6+eefX3vttQEDBmAUC2fmJm3KN2lTBWcyYSmB
c+fOnSwhYf9aVRddCrOICuVoAhgAL4cOHYppevHixQAGBqUatMhZTP3MfDhu
3LgdO3bITqVRCyGRudiBd3jhwoUePXqoDor46erqOmXKlKtXr8pyXiCTLGFP
lKiglFjJAHJRUVEhISFoE5CMlFyUUuYsl5OjqAnh9jQTe+IYB2icY8eOBQcH
AzbE7zGnLWlq3p7Hjx/jNrAS4V2xHRgZxGpKuOFr164BzNavX88IdPHAl4ya
svDBr6AawDMmevDbDz/8IHEKcl1++e7du6VKlaJZVXaBadX59ddf33nnHRBX
nz59MNWOHTsWHIizAQsnTJiAm7S5fWQNAshH96tVqxYwDGw8cuTILVu2oCl4
qxJKQ5x27IjI7MZA+23atKHZHxyO7pHZl6Ux6bCNf3F3d8cqoLDRpuirv015
g4cPH44eJQ7heOTWrVsfPXo0TXMdYe+SElf5UIyK5Z/ciAHo5+eHVXmgkg2J
ETHETij8wYMH46dYd1PTF/l11I2JD4zqDIkhgzllxYoVQUFB3OXnpj/9NnNn
Jx1XBHvTr3WGliWJefLxOYY2tJBu3tRFF9vEoKXsUCHNqDjJU6PKjKlaaf7W
8m8LclB1/J9W88uxgxFc17t3b2dnZzX5MH4laqYqGQtV2hS7mW1iTB8r8fDh
Q9DU1q1bz5w5g4synw/xT8Jhcoc2xVOUfMsNa5DPpUuXQHQq/DvwFViKRJED
HRMTE0G8uDpuRuqh4xPQDlNCAc5xgEUKqDglJUV18ZUOZtDSNN2+fRuIyIz9
bdu2jY2NFYul2g/xpDt37uS6A1SJKVXM2qAm/OOIESNYcp2pAnGTX3/9NbjU
ycmpW7duuCXbHlyGwK5du9zc3HD1EiVKjBkzBr1C+r9BSRAkDJwLMxRm7ddf
f51jpGnTppnl20yzoE08Re3atRnKVNhoEz0EfenAgQOdOnVCr5M0Fy4uLoMG
DWJ9Xr5QqaeTO2/TNpGRwsFCdMQyGRw1ceJEceCk66YAJw5Am/ia1I11uBox
KsGAMongV6wZQ0NDeT+y128pOUqbbBC2g8Atf9LlAKy+e/dumREKQM/XRZdc
E6NSJ91s+lAnGvnQ7Nc0xQ/H7F/sH4YqhGAC7dmzp1rVl55UPj4+krecAcKG
9BlpsrsTROWsfiKQgJNHRkZu2bIFqMkcR6p/phznWogQce68solP+uWuOjMF
ybOLpdfKNpHvixi1qoVmv6aaiplyfxzcyzRQNGaCM4HEoJ3zpgShksKdMCzG
TLVTSabWgwcPvvLKK3jRwMKBAwfev39fvi8TKF+Nt7c3yQpUAEYlr+Jnr169
0Gdu3bolt0p5/PgxppIiploAQ4YMkUWT9CJr+on0Lpz/u+++e/vtt3G2ihUr
vvnmm/Pnz2fJbDMziNw5iSXn5ik8/rvvvksn3saNG4OULK+lNjsaBN9nfu9G
jRoB7PlaZQVKVsFB69atSZsGLVenowZ7boqgDhfafCPQMF988UW9evXUiopQ
MlOnTsUCypi55PXTZCqWahkaLCYmxt/ff/LkyXPnzmVpS/KVwBUDiEDdBE5Z
vIuDpfRknlb6eRZ3YtZiYqOQ4Yxhi0Hk6+vL2uW0bWZBmDbQpvWinkdugD6c
uMPx48fv2bNH1sVqYqj83Bl00UWXLET0GObuDh06SIEzpiAuWbIkMCMhIUE1
i9mzDDdaxOHKut6gJehes2YN3RFVG2OusWXWwnAhyS1/6dIl6HBJT63qeYMi
lnQtraH+C3cPzeYXHiclJdGdQPJqoolAnkK/vDF8YeXKladOnUpNH7ljpqUl
eVFoaCh3M11cXDD7yBXlBf2tFVJ/55136L47b9485iPCn3744Yfq1atjjsAN
SMy4zHEnTpzAX/FfZcqUIVypZ7amtxg0lxK2z/Xr13/55ZcuXbq4ubkBV9zd
3TFpYlXy4MEDmmr/VjI8SMtLC9jWYzMUUuK4ceOYneDVV18FYFhewqisCkHy
gGSa8vAIFy9elKEkUMEvM98m2lmeRd6LAx8hp0UehwTF0rfvvfdeiRIlmAaK
2Wtr1KiBTkjE4voor2/cLuHzPnr0CA+LzjlhwgSJUgfaMTNSQEAAjv38/KBa
sTCkJ3wWpG0mlheVMWKpUSm4HwwTrF9wRQIe7m3OnDnZhcOsxZ6zzTC5tjIt
0qxZs6ZNm+bp6fnjjz/SspGq1ZDSaVMXXZ5f4SgGLfTv35+WTDFsAhKgnRIT
E1XffqN9AUFmc6sav/zkyROg5vr164FMFy5cELoTyUvK1ETyL503eXIS/0BB
Dx8+FJukPU2kwrzM1JiPgJq0aso94Jium/TbBPeyBvrx48dJg6lKvLOZik7V
ilNDsXNZUalSJeh2ubQKQrgHXLFu3broEvjajh07jJohDrMn4MHJyen1118H
bkmOTdIRmgVYxR71+eefy21Y7+Ir4C15lnDa5ORkUO7gwYOBsuixwJWpU6eG
h4ffvXtXUr4YtfAlleJseyNZvCbMkkxoU7t2bRB+hpeQGf/GjRtt27blyBo7
diyDm1TjlUHz4mvUqJGzs/OiRYvEMJgTj5DTwvbnA2IlGxYW1rhxY/pssMvh
Gbt160b7XnaN3vlWjIqzU3x8PAjKy8uLTomsZUnHRe5iM6Tom2++gd6DAjFz
hldx0aDtmGRB42Z6Q8gzISHhp59+whV9fX1x0aCgIEE+3EA+oU22Cf1IoVUI
nB4eHlhdsiOpBU1y7W3qoosujhKCweXLl/v164d5U2KCMCEWK1YMqIk/qWm6
DUoyTNuuKOpCVapGUw10YBJgCUwFcFLpLl/RJvfQCXisP85cl6BBMKGa0zJN
2QiW+SKzNlFNoDJTAL8xTbMSEIPiz2sOq2oWd5pYcVeY0KUwpSwNLE0icq2k
pKTRo0eTBgGTOJVqFZH4BQjO/OKLL+KbLVu2lC1gfIcRRvi8fv36+/fvl3/n
g9y5c2fAgAFM4zlx4sRULfGm9fYreQR1YcIbe/To0fbt2z09PevUqYPz4/5H
jRoFYMZDpSrRuKqDsQPnKU7oq1atoqUOjXPkyJEMz2/ULK54Tc2aNeOuAaZX
NR8pN/3TNH8S0GbRokVBBVkvGfK5GDWHjejoaNB1xYoVqV6gZ8CcLi4ugB8M
6r+1bJD88vP1jJYiCzEOQKxBAFHo/GQ8hgsFaqk4Wc/R39//3//+95YtW6BD
UlJS+KLVjSTB1zTNB9hM1B1z+TJ+Yl0WGRmJZQvIDVcRzKOhlWiXH2hTAoUI
5AxWwvHkyZOHDx++b98+tZDE895DdNGlcArG7927d7t161ayZElm1JRtdCzJ
wTBm/kIy99m54SWqg7/iElFRUcyreeXKlfMme9359KgpgUJ5K7wT2b+WzJ+0
c2K+uH37NveU09JvlGdIm8b0IlyKM4AzcTZulzM0/ryJdRmsxF+ZlIllK0NC
QpjCXQJ8/vrrrwyVMxkGChyXGDhwIGnzjTfeePjwYaoSGaSuMjAxcTHSu3dv
KbdKguratWuVKlUwl2FqE3MKc8IwBInueTgDN7uzRX3SMoKOJBPO6TjARU+f
Po0ZqmbNmmCYqlWrdurUafPmzapRiGdwLMnwQdD+zPYPONy1a1dmr5iXDg8P
Z/nRcuXKrVy5Uu6HNykpX/BeJkyY0L17d8ms+9xZNdNMD8Xd840bN7766qss
eCrh59WrVw8NDUX3Yz8xKnlHs1iUPRdiVHxgiNBYnYGdJk2aRPOm1G1kGDhd
KEGDU6dOxcG2bdsYAac6wBif5X9ixplGk9c0OHP58uXkTCFM0h0upEaF5wfa
pEdroFZ6iW6laC7cJ0tb6rZNXXR5ruXGjRsff/wxIVOyuJcqVQqLcYZgcIDT
XCYaz85JwaAF1KeZOPPRo0egqdWrV4OjaNVkOk2VM9Ww9LwVM1urmlYd9xwf
Hw/8u3jx4s2bN0FlUncvMyWpNik3zYF8jDrHecDeTNKuJjsSzuSl8SccrF27
9vDhw8KZNP3Ru97yooJ8Dx48mDx5MjGgf//+Zk6eYhW8fv064KeIqSL8rFmz
jJovBC2oeMakpCQCtrofigPcW4MGDdi1MPepce5WThmG9I6X8qvsO3OvHAfo
yZibGjZs6OrqCgJs3779mjVr0Iys3mV0dFpaYYAOHTpw1MyfPx+3keGX+cjo
4eXLl2fhIbxKNaJKzva3Vkvl3r17eIPcQHwmbORDQU/G+hGdCstYKhYKSLtH
jx5YIEjvMpoy63Jl9MxAmOdC1GXjf00SExMDxMJYowWP7CeERhsj/RXBnIBD
LEZOnjx59+5daAMprCMbB5ZXZKUtfBN9BrC6d+/ehQsX+vj44Gy8hOS0ZDom
HgcFBeUT2uQ2OsCS4UISwUT4xM9x48bt3r2by8znaBTookvhFJnU0rQNysuX
L/fu3ZthQdxAx3Hp0qWxDGeyI9UHT04iezrZuqhq1KIS5q8pKSmnTp3asGED
OIq+mlJ1Md/SJrfRz5tu8rwWsa7yJ5iToPjnn38mJCTcuXMnOTkZEwGtPSKc
ZDFHgEtv37595coV2kjpnymnFVOqWqyTKdwZih4WFgaWo5mINlXaATKzPxu1
AvT42oIFCxglPWrUKNUSaNCynuLn/v37a9euje5RqVKlXbt2yS6h2HBStYSB
qkEV39m5cyd7V8uWLZlFVvb4rOxCmSGWGaeJfQyt/c0337zxxhsVKlRwcnJq
1qzZ4sWL8S7QwuzP8u/qmXkGK7u0+i8GU5hV0aJF0YY9e/ZEZ87wJmmSxQSK
W0KDjB8/nj3BqLmkij35b1M+VWkl4WS+iGzdYc6JtF6GBxB0S/SrGjVqcCFD
L030n/r16y9ZsgTDITV9DIu8iOeLqDMTdXUg+hPaAOzn7e3NNOZiY5RYbNo5
+aGvr++0adMWLVq0fv36gwcPYoxDIWP5j2Ud1MgTTXCMVQk+hybHd7Zv347e
Pn369ClTpuBaRDg6iM4wxX3z5CRbya5pPSLmnJBUycByb7R54nFAxXgcDw+P
n3/+Wc17VgC6ii66FEhRaROjFTNCv379SpYsKdtbmBFcXFyAmhcvXpSZThzX
bbuoOgepdjNapTDnRkdHb9myBXxFcitIQnQE6mAioJslcBpte8kkTBQPwYug
5ycDjjJ0T+WpiNzEchwwr+a6desiIiIw71j5jsQ8yDeybdu2qlWrcotcnf1l
rgQGDxkyhNDYoEEDzHoCWmauYmmaEU8Iqk2bNixEiFcMXuLMm6YUKnWUyD4s
JyM09dq1a/v371+uXLlixYrhNjB3HzhwQGyPgnZq9lHhZysvSry/fv1669at
ieKY9wW/pTF5S3jjXbt2BXdVrFiRVmj+ldfNUMRKnLVdK5dFlipmDqUSFwZA
YjVwdeu8bNmyffv2BS3QPSO7i47nXfii6fLh5eUVHBxMmiJZCWvN0GKIAk0Z
Kf38/HxNAuiaP3/+smXLVq9eHRISsmnTps2bN+MnVjpYW33xxRc4If6X2/Es
mplZRiObrZHWc6MDz4+nwOOgQQCcLBuBLsSVV9YLal100SVvxahlGUpOTgZd
MOWdWgMd60fMF5wOODVzQrH5imaGC9EPBJJTp04xLIg5hXIfCHNOVMMsg4lo
tDynCH/9TROmMGKVc8uz4ct042RbgV7w4cqVKyMjI588eWI9ipgZMHGeLl26
4NUDme7evSsG7adPn/L7Q4cOdXZ2/te//oV+8u677wqwCa8atG0+JrEhdeBr
S5cuxX+5urrOmTPnwYMHRq0me5p9ZacyEymLICR848aN8PDwXr16gXzwCPXq
1cPEfebMGVlJsTfSS0TsUdbPX3xe/Pu3337LJlqxYgWL7v2t5bAVuyVmSTQF
BtqYMWOY1MWoOccK5cq4Y2MKkqUqPsAOb7fsiqAvfScMWiZ2POmRI0f69OmD
xQUDz9lnIDVq1AARJSQkyMMalSSief1AuSFiqQZwAiMnTJiAQRFoCgkXC6dl
0ku19qW/vz/gEz9BX/4WAsgEakr6oEAtc3tO02DOnV+ykgaYBLQ5e/ZsNN3w
4cP379/P9qSfeV6/W1100cVcZFsHqNmxY0cWvKZJEwcuLi7jx4+/efMmZ0k1
e5s905zZFptADhXv2rVr4+LiyFcFlTZlt108BETk1/PaBj2xM8Ozyfe5QY+v
hYSEANdpIra+up/YHsUktWnTpqpVq5YrV+67776j3cBgylCNdcewYcNatGjR
tm1but5hChNOENo0e8X05NywYUOVKlVwznnz5j1+/Bgf0rZpVBIT2dajMnso
dfuSl2M3TklJQU8bN25c9erVwYQVK1bs168fKPTevXtkJPEBkDgd66/IFgDW
jh07lvk/Y2NjafrDVCgNcuHChXbt2gF6O3XqhFaV9N2pSvy+gKWlXdSQn2KF
1FFMNqbfNRaqeN1UKRJpWKZMmUGDBqHTspElZaL0gfzwRLkgfMvkc/RGkKGP
jw9gDBxFnpSqQypxMWCcITMztITwgVq1R9kHF3No1qUnHUuDOX1+sjcIk43D
UwUHB7OW+p49e2SGyut3q4suupgLtT0mvoEDBxYtWlQi0IGdrq6uEydOvHz5
suzcpSkumnYOaoNSdpO/Mq9maGgoA2pUH8iCJKrHqSSENxO6gErgT2anYqwQ
t9oZgQ6cO378OK2aqVrojTWvQ+BQQBHw89VXX1WuXLlp06YAziNHjvz666/L
ly9//fXXO3fuHBUVxZzk6C2RkZFGxblCOobUQ2Ef+/nnnxs2bFijRo2lS5eq
e9NGrfi1w+cIcQMWCpJ+y1vFHWKW9/b2btmyZcmSJbG26tWrFzBb/JNlb93K
nXQxS/JfcB4vLy+MI8D55s2br127RqQHcx46dAjXwkW7deuGDq8a98wChaSt
0CWwjkhMTJRgOvkvx7abDSKsiPtB9zt27BjYqVatWly30gcYWqVs2bLdu3f/
/vvvWcteGtloUfQ2rx8oN8Roym0rBQjwfsGEU6ZMmTVrFlAqKChIaqmTMMla
gVqipECl5o7KdfyE4e2kVnyZn2SWSPM5ok05ZgswhghthXbD0mbnzp2yK2Ep
ef3CddGlUAsUO4hl8ODBxYoVU+0Pzs7OkyZNAsOIXUgsKgYtO6KdtCkWG0aR
xMTErF+/Pj4+HuhLBsuatZ5TEXOlFPoxK8Qpj/zMRE+s1Y4DYAx+rl279ujR
oykpKeIFx5gja16HLCK4J47/4uZvWFgYcxnVrFmzTp067dq1g2K/ffv2gQMH
ihcvjn4CfiA5qCAnfcZo2ijHr7gxEFe9evVWr14tMCbR6Gq6dZt7lKVI7xJL
oFxO9RLEw4Li5s+f/8Ybb4CLKlSoMGzYMKZ85Ndo6rTyojRR0gMZB3fv3l2y
ZEmTJk3QgAMGDKCtacyYMbVr13Z3d586dSrerDSaULfssQqM4YQYpK1atUID
CpXlE9RMU2zjcXFxwcHBDRo0YEkIQU3olkaNGqEp0GnZM9k+qmMAoQuqIK+f
JpdE3IP50tFzsPYBO02YMIH76dxSD0xfyVGYTSyZOCagqlw3QymIKZyWGek9
L7RJYd2lGZqZl0DOFEmjRo3CqtZy40ynTV10yXNJSkrq0aMH2JLGB8l3NG7c
uMTERNlJNLM8pNod/aeabgBIALDNmzdj0r98+fJ50xZzgaRNs4B6bpGLDydz
GYlV85lB90znjhY7d+4cQP3YsWNoScEV8VS08nXIaxWvRZIYXkF4ePiuXbtA
mLhDsCW6xLx589hb3n77bdnqFWKUN8veguVM48aNmzZtipOoBaBT00eFODzR
jepEmqaV5JbdZ9WbFD/RdGjqFStWvPnmm23btj1z5oxRc6G03kScplj5xN6L
M8TGxm7cuNHb2xsnb926NWh25cqVIPDk5GTV1qo2izrWCHJA1qJFi86dO1e+
ln9KOuI+0SF9fX3xlkuWLCkZetlJXnrppSlTppw4cYIuGUL7RsUBI01bgTo8
WCzfiqwvZAShq6CVQIZeXl540YQrs31wsV6qdktJkql+WT1ggqOCQZtyQvFr
JWyjKfz9/SdOnLh//36dNnXRJW/FbBbDZNerVy9MYSRMTg0gTyyuueunTsdG
bSc9W4NXLie2L0ERWdFjZgcsMUDbzNBXwERNiGS9nNf23xmcThdNHDB6Ha23
YcOGI0eOiBHPjPqs7BvyZbMDVcRI+Prrr7PDQMNbWhKk5+AV4/batWvXokUL
HEgqJHa/0aNHz549my6m2dr3z9YTWT5Ohs9LwT08fPjw/v376kZ/dqeqDFsy
1ZSw6IFJmHDVcirM8Fdh8pYtW2KoLliwwPIt50SLqa9S9u5VcysBCW118uTJ
yZMnV6pUSULOxapZoUKFkSNHMmbNrJ9YNm9227kAiDH9moKr+/j4eFDTpEmT
5syZA4wEKIKmZmi2TbplqnvKaiSRGliU4Ye5Q4O5I/JQZGw6GGBNh97466+/
0gGb6kXte3n9znXRpVAIlRujXy9dutSzZ08JEaWvZtmyZTFUL168KDuPRpOJ
xp4rmk0uqUphGtxJdHT0ihUrZE+5gBkzHShSA53WThbKRLuFhoZGRERIMIul
OKjv/H8iJrVSpUphYQK62Lt3r+UleF285ZiYmI4dO3bu3DkhIUGscMQnQF2z
Zs2WL1+eqgSwO/BWC4CoPInGadWqFWhz4cKFlrTmwCuq2/RiBBbzo1GJA4IC
2bp1a//+/RlWL5CJA2iVGjVqDB06FN2DO+ay+nDUrRYkkVblGhzjC8MckAng
ZNFGVrGkDdNOQgu0QhwAgo64DStvTFLTB5qMvfjp6+uLNc62bduY+F22M3Ta
1EWXXBMxlVy4cKFfv34lSpQQkyatmqyBzglCAjdkL9JRN8Dh//Tp0xMnTmza
tCkuLg4X1VEzC/lfrY4SLZz45MqVKzggakpYUE7TJlU33ho7DIgCAJwhbYJG
/vzzz27dug0aNCgxMVGy3HAVg1e/fft2d3d3/Hta+ohmB97t8y65T5sGLR5Q
Had0/ZVfsUKMjY1dtmxZ165dsThlpJhEF6JXuLm5Ya7/4Ycf7t27R8IU/0z9
/WYo8qJVvD958iT3hWfPni3BQWZGyxzCPJtP7tjbsPLGzP4K4AwODp42bZqH
hwfTIkniC502ddEl14RTxv379wcOHKhue7Gm86hRo65evao67TvK7qS654nh
6/Tp0+vXr4+JicFCXufMrEVQ89y5c/gVLXb27Fmg5vHjx9VyPLkwm4MbodjJ
Fd27d09ISLBU4OCTlJQUoGbJkiU7d+6MzoalzZAhQ0Ce+Nm7d+9evXo1atSo
QoUKLJGjmtRy+v6fI8l92lQvLfAjxIhXf+zYMS8vr2bNmpUuXVr1zORPV1fX
wYMH79mz5/bt26lKQi1xpNFtmxmKujZM1UpE0Yfzs88+8/b2Jk3NmjULwGmn
ebPg0SbYG4RJZwMmhsIxo9THjh174MAB6Yc6beqiS66J0VQF++OPPwZq0jxF
u0SJEiUwMK9fv65ODarFyR4MMGpemjJ5gUagSNetW8cI9POmfWHVTVEXM6Ft
87xpP515NTds2HDw4EG1WCQALxdoDRfq2LEjd0vnzZvHvSqz7yQnJ3/wwQfs
Wv8yCXoak3vzgH2vRYsWUu87/6SOzD+SJ7RJu7SaAxMaA4vBL7744vXXXy9f
vjxUB71u6ISDd4pPqlSp4uHhERUV9ejRI2b1kcGuBkDp7zcLkWW4rBwxuOLi
4j799FMAp7+/v9QNtwcICx5tskySmlxUgBxNN2bMmJ9++klKJ+g9UBddckcu
XbrUr18/ThOc9HHg6urq5eXFsCCOR4mUNCgBszZf1Kgk1mMEekxMzOrVq0GY
LLMIfGLKI5U2dWunmRA4L168CEQHah49epQqNM1kOsYsT+uT4zpLBoLXd/jw
YZa6Bnhs3Lgxw9CeJUuW1KtXr3r16jVN4u7ujp+1atXCT/yvu0nwq6enJzqD
GoKt275UyX3aVBebSUlJp06d2rRpU+/evQGTkqGd6YwgAM5y5cq1b9/ez88P
I9qo5S+Stynu2eK3qc/1WYtsJ7HFmCcKevLf//43gJPxQTNnzgRE5Sjm2Xxy
x96GlTdmlrhevgb+ZPX5sWPH7tq1q1AVDtBFl1wWmao4fVy9enXQoEEsTEl/
fswg+HXixImg0FStTJ7qUy1GTuuvqFpEjVrmdiEKTEZnzpzZvn07kAkXZTXw
81rqSN22SZGsRzwAYTIz0uXLlxkWdPDgQVoyJXWMMQeibGT1wQrjixYtgvbu
0KEDkxiUKVNmyJAhgJ+lS5fifqQkEH7iJvft2wcNv3fv3j179vDgl19++dkk
OPjpp5927tyJaVTtKjnxCM+1qIMX4NG6dWsnJyc0uHxutBCzASufm53Z7Jvq
GbBswXtZs2bNmDFjmjVrxqyq4nLDbO04dnNzA4WuWLECfUM0huoqY3ldfaK3
RqTp1M2g6OjogIAAHx+fOXPmMG37DJPhjkwl6Y+eI3Eg4lr+OzmTn+PA19d3
3LhxBw4cUNduef2eddGlQImavi8pKYlhQeJqxT3N0aNHEzXVPVmb5wXLiU/d
l8eZo6KiNm/eHBsbq0egZyHAS5ZQv3DhAj028StQE0wO6jt+/DiQIBf2JcXG
8vXXX1etWhV4+cILLwB4XFxcSpUqBQ5hqfHSpUtDmaOD5ab7aGEQGUccxW3a
tAH4zZ0715i+zKglcKr/JdRnVNywLb+Jg7i4OCwo+vTp07x58/Lly4s3pqQz
ouNN/fr1p06dilUDVq9qnvy8bq0CKwZTAoeTJ0+CKidPngzg/Oyzzxirjk9w
wK3kfGu0tOdrtv2jmmWUzq4AdU9Pz927d0u4ot5pddHFgSIFO+7fv9+jRw81
2RGrBY0cOfLGjRuECrWIiZ20KcdyZk6Op0+fXrVqVUxMDLfOddTMTNAyjNMn
ajKKCp+EhIQcPXpU1gU5TZtyIXQSTHY0rmJtkpCQcP36dfxkOibcGKg4VSsQ
wy6XozdWSEQMXMTCJk2agPABhGoOMdU+maqJZeZVcZuUg//+979Ys9y6dSs8
PNzf3/+NN96oUqUK1hGqlhCTZrFixSpVqvT++++HhYXhvTNfqJmJNa9bq8CK
lGnAIt3Pzw/AGRQUFGgqNvQ/iui0KcJsUUBN+rgCOPFz2rRpAM59+/alpKTQ
y123cOqii6NENtD79u0rkwhNmmXKlBk/frwUblYjgu1Z9JmZWeTDv/7669Sp
U2vWrPntt99wP2aoqW+gm8m5c+cAdSwzBDKnhXPjxo1HjhyRun65sDYnmQhA
CsDwkzRlQ1a8fMVukKM3VnhENcU0atTIyclp5syZai1OOTajPnk1qVpyeKMp
/AcLh7Nnz+7fv3/JkiUDBgxwd3fn2pP5iySAi4qiZMmS+MJ77703b948dEWJ
TDe7hL41maNi1OK2cHzmzJkpU6Z4e3sLVnHLWK1oqdPmDNNmOuta0tkVXwOi
AzhHjx6N5RWHlW7b1EUXRwmmBqDd0KFDnZ2dJfwcPzGJADVBNep+HL8v2202
X9So1ARMU1Bz06ZN8fHxly9flsqMFN1d01Ik8BzNAuzEr2i9iIgIrsrZwiyQ
4bC+kpGkKsW7BV3StFUMD0RvG/RgkBwQJsNJMzV1jx49GjRosGLFCnWFKN4y
QvuqPZOv7/r161FRUWvXrp01a9aQIUPatm3r5uZG51sxYPIAH+LnCy+8ULNm
zU8++WT27Nnbtm27c+eObE9IN+BVVDfvvG6qAiuMvRLlDF0KfPLx8WGIOqsL
0Yin0yaFO+loH6ZFYivRFOzn5zdu3DgAp7jFZmgh0UUXXbIlSUlJ/fv3Zwp3
mi8wm9BX88qVK2LJZCVodZ6yZ9AZFY9NjOgnT55APYaGhsbGxuKiEg0kZKXT
pqUAL8+ePXvx4kWgJn7dsGHD4cOHHz9+LHtqaFVinuM6SwYiZivVA5CAoW6k
qhu18kmO3ljhEdVuGRcXhxXHtWvXJD2RupNO4Su4d+9edHT0unXrMBd7eHi8
8847jRs3rlSpEmGS2xw8ENSEODk5vfTSS926dVu8ePHBgwcxWpneSn2tRiX9
puzaO7zkqC6qMEuYtPOjR49OnDgBiJo4ceLcuXPpusnNYp02KdxGhzBcSCLW
58yZg+OpU6eOGjXq0KFDGdZfy+u3rYsuz4GYjRrACQtTckLBRMPMeMOHD79+
/bqYRwQkxBhiPW2a7dyZ3QbOk5KScuHChbVr15KdgJrx8fHnlexGZtXAC7lI
OzAUnZvpISEhe/fu5YpAzFm5M8Vz01ztVGbWAPma9CJaXHXadIiojS+mS1Zi
+uuvv7DiuH//fnJy8p07dzCy0Ek+//zzoUOHdujQ4dVXXwVburi4FCtWjBpA
SobJprmkyixdunTdunUHDx68Y8cOaAackDQrqXh4AzRxGxXXbtWUWpinaaMS
12+wiMqXxrEZbAxa8CYtA1TdWE34+fn5+PjMnj0bwCk76TOUFECFljb5eUBA
AH9lFD9+xQHgMygoyN/f39PT89dff1X9n3UTvS66WCNGZfELdXTlyhVMH+pm
GcTV1XXChAkSgc4ZxB6HK25GpCmplihUiZgTT506FRYWpoefZyFSjJLJoFgv
Hp9fvnz5zJkzmzZtYl5Ny6mqkE/xhUGE9wymUrMRERFASqw+li5dinlz/Pjx
vXv3btWq1YsvvgiwfOGFF9TiPvS9VEUqmJcqVapGjRrt2rXr378/WAUd7OHD
h2maf2BeP/TzJ6laJmEIlgAGJeGbvD5+DWsx2RSwbbWorj6wFPX19Z00aRJe
Igupz5o1Cx0jUEtybglmVoptnJktjLT53uy5f2Inw/m9vb0nTpy4f/9+ZohF
z5f0xbrooksWYlASnoAnhwwZIsmOuGXm7OyM1RyQRrWMSSV0my/KA6OSTYVn
hl49efLkunXr4uLidNrMQpiz/ezZs8AJTB/nNQsnmis0NPTIkSOA9sxQU6fN
gi0cTXSZ8PLyqlq1KqlSBUspU14kE6E3Jv6xadOmnTt39vDw+OKLL3755Rf0
NxZAN2a0I69LtkT1R8IBxizD+r42yZYtW+Lj4/kn2aGwzT1eXdFDYmNjWdoy
ODiYCX9Im7R2Whmobj2tPde0yfYhhDO0Cqw+cuRIWji5FsiFRB+66PK8C6cM
6J+kpKSBAwcyJ7NMRpieRo8effnyZeYjkmW1bP045OpUgzx/TEzMpk2bgJrM
3qPTZhbCxqGRE8CJFsPx2rVrIyIinjx5ovpM6rRZqESsZDgeO3asVPORrfAM
zZj8BIRZuXLl1q1bDxs2bMmSJTt37oyMjES/evDggdkOOEXCf/L6oZ8/UZ0c
8BMrx0mTJrVq1apatWr16tWrU6eOu7s7fgUBAkHNAjOzK+r7YsIxvNZp06YB
OOfMmTPDFBoTqOynO5DWnnfaxOdsHOZHAnDOnj3bz8/P09MzPDyc1mbdM0QX
XZ4pdOx5/Phxr169nJycZD4CZ4I8Bw0adOXKFTWA1KDUL7b5ohnyD04LyFy9
ejXzakIEq3QvTUtBU6C5cECPVrwmAGdYWNjhw4fFfS4Xkh3pkg9FYnAgIAqM
ZbFhYowzlVmxYsVKlChRpkyZ6tWrN2nS5OOPPw4ICMBS5cCBA+hOt2/fBl6K
My1HqNhL5Vc1q2deP/TzJ2i3p0+fMnYPIxdsWaNGDR8fH6bMvXbtGoBwwoQJ
ZcuWfe2113766Sc2OHS1DdcSNYszMIYLr/L06dPMw0kLXnBwMEOwHUtrzztt
kjAZNITGYYZ8AOfUqVM9PDz2799Pc7G+ltdFl2cKQGXo0KH01aRJE/NR6dKl
x48fD6Vn1KKJBV2MdocPq87VEisN1bdy5UpoWqbuyTD8XKdNEbYGC1NyM33z
5s2HDh3C/MUVARSgnoi4cIpR8wZET1i4cKGLiwsGdc2aNdu1a/fRRx8NHDjQ
29t72bJlP/7449mzZ1nJ1KClERCYFGQ1S/mi8icvp9s2bRNuFUH1ffnll8D+
l19+GW9EGl/WjNCKL774orOz88aNG20mGbN3x4O//voLesPf39/Ly0vCsQNN
3psOpLXnnTbRPmgQmjfp14p1GX5Fi+FPo0eP3r17t9kYcWw/0UWXgiFAzSFD
hkCV0fpBVy76al68eFF2Y6Wyj2yc2UOb6qjEqbBaB2SuX78+NjY2ISEB+PTH
H3/ots2shS6aoE2i5oYNG7DKZmHKNM1sglemh28UQiGr0NkPo5jZ3TFF3rp1
S8o8iUHSoOQ7lYzuKnaqoJKWfk9WzqCb0G0Q6tU9e/bUqVMHivfbb79VN3pE
PSYnJ0+dOrVYsWIVK1aEnrTNkiynlVfM1Ls4iIyMBDhNnjw5UNkydiCtPe+0
yQ109QZmaKk4g4KC8GowVx44cMDMzyQH+osuujxPou6GG0w10AcMGCBhQYw8
BW16eHgwLIjaSV24WVo2nnlF0Zxm9hDOUJgT4+Pjd+7ceerUqQsmYRofM7Iq
5LRJAocwIIgp3JnLHb+GhYWFh4cDNQ3p86jrDFA4Rd01gLRp06Zo0aLz5883
KgmRzKDFkifTrEvIk5a/aVPUnWRhMrPvpZlsjHl1b1evXu3atSstz3fv3rWk
Td78sWPHmjRpAs08YsQIRv+pqG+NKjZbNRiUbFR//fUXzg9q8vX1nT179qef
fkrEki11rFMYjv1M9nu+aNP6GzP7RJichYcA6hMnTqQPp1HLK2uJnTqF6lKo
JFWpRgetNXDgQKbTlBTuTk5Ow4YNA/IZtMzbBpNXuc3DRKVTVc+Lrjt9+jR9
NfMa6PK1EC/RSng1DAvChxdNsnHjRqysacnMt5O+Lrkpqu0RA61Vq1YY2gsX
LlTnu0Iy9xm1XWluzdDkq9r3BA9y/95wA7t27XJxcQFGDho0SGrLmt0/bu/h
w4dQy//85z9r1679888/m6GyPRlCjCZPTmiP6Oho0Kafn19QUNBnn30G7GSx
IWCVv7+/9YhoM+Y5ECPtuQ1rRMqpM3kUTuXt7T1+/Ph9+/ZJKQ11RSBNXRhG
nC66iDA52PXr14GaavgAaLNUqVIeHh5YblMPywLNIekdVNqEwv+vSYCaq1at
io+P1wPPnynnzp1j+U4cMGD/zJkz69evj4iIUN3UHdJJdHmuRadNEaNptzoh
ISEkJAScdvPmTXzI6CejFjKTV2s0XL1v377MBvDDDz9k6Ptq1NLNzZkzx9nZ
GVoaVKNmnBCzgG33YNRCqiG///47zXRATab9oe1u5syZLB2u06Z6t6RxtAz4
HMzJLfVff/0VMyyTWem0qUthFsmriZUy1tSS9oQ10MeMGQOG4e6b7LgZ7Y4J
stx6o2UVqAlYAjJduXJFp82shTvpjAn63//9X2Ln5s2bDxw4wCgPmTUc11l0
eV5Fp00RtsNPP/1Uo0aN8uXLDxo0aNOmTVCAEk2flnc76Xfu3Clbtix0L1Tx
2bNnM3wjpE3cJwY77h8au127dviyIb3zrT3CzXRe5ejRo9OnT/f29g7UvBOB
mgyN0WlTvVVy+L81CTSl4vTx8Rk7diza0KCENlhuqeuiS2EQDIGkpKQhQ4YU
L178H//4B22bzIgycuRIbqCrWd3sp03VpCm/4hJxcXFhYWEAzosXLxKl8hro
8rVI+Pl50wY6mguzz+HDhx89eiR1oPSSFrpQdNoUYQvcvHnzu+++69ChA9Du
xRdf7NixI36ln2Ra3tHm9u3bWUGjatWqGNcZOiwZtVxzhw4deumll/Bl3P/O
nTvTFJdUe5iTO01cqHI/Kzo6+tNPPwU4kaYYDgME1WlThIbfGSYHTm6ps5UA
nFOnTgVwhoeHm5XuLSTDTRddRP773/9+8sknamFKumviQ6KmUXFzMvOxtO2K
xvSBRUx2dO7cuZUrV546dery5cvkTJ02sxZGSF26dImouWHDhj179gAvJRWq
1LZzbIfR5XkUnTZFqHPotwNtA8hs27Zt2bJly5Ur1759+0WLFmFw4U8Z+kzm
tEyYMIFRmY0bN8a9MQ2m5f1T/Z48ebJatWr4fvHixdesWUNHU6FNh1gDCJxY
wAI4AwICJk+ezFrqQUFBVkYJ2YN5jiVJm2/DGiFhomUkLRLNm2go/NXPzw/A
efDgQS4f1MA0e3uMLrrkS1GXVOzqiYmJQ4cOZfU67p5D0XED/erVq2qsInWX
eARZP0wyW8TJcEtJSQHWrl279rfffuMG+tmzZwttpHnWwmaRvJrnTVZNHGza
tOnXX39lXmhpcEbdOrgP6fJ8ijrq0StImwsWLJBFn9EihCFbomaZUM/JP6WZ
PBKhbaKioo4cOXLo0KHjx48/ePBAvoa/njlz5saNG7kw//JyPOYiGgPn+++/
79WrF02F7u7us2bNghZ6+PBh1thmD59naOPq2rUrV/3g3oSEhAzPL7iClWad
OnX4fbDNvXv3HGU3M2q117mfzgXs6dOnfX19AZwgKJAnd9IDTc6KMyySAmUX
Gq3nupyETdtpk/UrmZs0UGsTRlShL6HFpk2bhlkVwCk+aZZl3Wx+X7rokt/E
qGU7+T+TQJsNHz5c8mqyaJ2Li8vo0aOBfJIhRCqh23ZR8V2Xe6DwtKxeAViC
bs9rlMvvwgRHEoEOyMSKAG8KrYcZXGZGs7leF10oUkwK45oZkObOncsOI6k1
be4zao0hcYDktUAsd+7cWbFixccffwyca9myZevWrYFJPj4+WCvRCL99+/Ym
TZqsWbPGIeGHNgiu++TJk23bto0YMeLll19G47z66qsghP3797NSj0HJyGFQ
UmrYQ5uqCZGXeP3116mHu3TpAjinxrb8R8r169dxq6TNvn37opHNAMbONlGv
ReCMjIz09/efMmUK8AkHTPhDgx7LqRdI2rTtazM0Ag80uXQCRNFuYHWss1h+
iz8zzIykiy7Puxi1TXDI3bt3oVcZFqTWQB82bBimAClyZ7Q70sRsHBm0NCMc
aCdPngwLCztx4oRuzMxaAJmxsbGse85PyJzr1q07fPhwSkqKhJHqukuXDEWM
VOgbQDsA1aJFizgMJSOrPd1G3AUNWuEq/oyJiRk4cGC5cuXefPPNtWvXYrDj
k507d3bo0MHT0/P+/fsguvr169euXXvfvn1yM7ksouigGA8cOAAqqFq1avHi
xevWrYvV9969e+mjIqmGJVGS/bpRaPPp06ctWrSgQv7ggw9o6bWSNrt3737z
5k1pf0cNf5U2IVgXREdHf/bZZxMnTsRSJVCz5oGmGD2k06b6Hfq4MkqdlS6x
wvLy8oqIiOD0SmcnXWPrUvDEqPnhQHOOHDmyWLFi/zAJkx05OTkNGDDg8uXL
1Khq/nY7DQ7qaOINsGIFeOm77747ffr01atXz6dP2F6Y07ZnKDRp8vjcuXN/
/vnnH3/8sWrVql9//ZWNaVnqxXEdR5eCIGptINCms7Pz/PnzVYOknc7YVBTs
jWINO3PmTMOGDUuUKNGjR4+4uDjeA7AKFBoZGenu7h4QENC5c2egb8eOHbkX
nCe0adAqbRE7wcBY3Pn5+dWsWRN6skqVKj179mTuRD4d3T7tH2iqggXoNmjQ
gGt/0qOAqOW/4AA4KrT51ltvyc67OD7ZLypt0hzHF+djkqCgIBWu7IlSL3i0
GWiKSQ/UdtUJnIGmVKVYZB06dEi3D+hSgIWKFEqsT58+LH1OTQVVX6pUqVGj
RnFjS7XtS3SznUYP2Yvn+GIEOlAT4HTp0iVLztRp00zi4+PRICwbxECqzZs3
Y42MhYOYWfRlsi5ZCK1zHM7t27d3dXWdO3euVKgkQdncc9QQZhnjv/zyS+3a
taFnPvjgA3Ra2awXdFmyZAk0D/TPCy+8MGHCBHVbOffFqPmdqr5DQLjg4OAW
LVqUKVMGOrN169YhISHQk2hMO8FYrJqiZqEJa9WqRZ380Ucf3b59O8OxLB9C
kwtt4g7RwmlKDJFDlIC6emWgOhe2//nPf7y9vSdNmjR9+nQmfqcnZ4ab6TZj
3nNNm/yQaZFmKEHrQHSAOmZbACetOrrS1qXgidFUFm3YsGElS5aE5uQiGnNB
iRIlxowZA4yhmkL/l1AgY/psRbaJSps4+aNHj06dOhUWFhYTE8OtYbCTTptZ
y4ULF86ePYuGunLlCvNqHjlyBC0p+3piU3Jcf9GlQIlkzcXPrVu3fvPNNxiA
QlZm/tU2nFxgksdYH7311ltQLy+99FJ4eLjsQTPTNf08Dx8+7Obmhu+AOUFx
5Jm86sNy82qDUPth3C1evBgEWL58eWdn506dOuHX2NhYe/hcVa28ItaS1atX
F9q8detWhidXabNu3brcnGrUqBFgVSVYh0C7atuUlQIdJKKiosBOAKdZs2ZJ
LLZOm+p36MsqtMmNdSZ+nzZtmpeXF3S4Tpu6FEi5f/8+llRgS4af07aJn8OH
DwfMqGpW5g7VK97m6xqUqpRPnjwBLG3YsCE6OvratWu///47/Q+ZolynzcyE
eTVpB964caO6qUfUpJucA3uLLgVJhEDEcVrqNgrw2D/MZXP57t2748eP/9e/
/gUNQ6OlCDmThlbMtmBRqCAwJ5ZRYupx4INbKWJxFaVHPFYdNaEkt2zZ8v77
70OFgjlbt249Z84cDEybr6jSJj45c+ZMtWrVVNrMcEQLmeALr7zyCmmzYcOG
UA6qlcAhKUNV2uSrwU+qmqdPn0ZERPj7+zNKXRKb67Qp35EQIan4yXAhNhdA
nVvqOm3q8ryL9GFiJJTDoEGDSpYsWUQTpnDv06cPkE8IU9xI0tJvo1h5RZks
jIqzumr0ICzFx8efVzJq6jvpqvDB0Tjnzp1jE+EF/fbbb5jsMKFs3rx5586d
3MgTsX9FoEvBFrPdCqOSp0j+ZA/pseCj7GLs2bOnVKlSUDLFixenelFdwbk4
wq9r167lJgtgiZineoMYNf8QfB8rZWFRfs2x7WOm6MzuQT7Epa9evbpjx47e
vXu7uLhAnb766qvALQxMGZJWLvqMisGQ4zcuLo60CYDs0aPHjRs3MoxCkhsD
bdatW5fKHA148eJFeaG8GQc2i9ptDFrW1idPnmC9gGWFr68vq6gDqAICAmjQ
w0+wqJWhQ9bTppXiQNq0/4ryBQI5HVyDg4PRc7y8vCIjI81mXl10eb6Ekwi0
epppz2XEiBFU7NRmRYsWhaocPXo0YEa1PPD7tomqmWX40I7BKQOQuWrVKu4I
U/KW6/Kn0K/g9OnTOP7zzz/JnEBNpnA/cOAAFg66XtIlW2LUKnbRNiUgpzpS
2tOphEkIIV26dKGe6dq1671791K11K9GLQMnLvf48WNPT09qJCgi9QyyPkVX
B919++237dq1wyJL7javOr/AMO4BkDBkyJCXX34ZRO3s7Dxy5MiDBw9eu3bN
yiS3RqVMBgXj3d3dXWyboM0s/jFN20nn95s1awbaJL6mae2co2LU7BhQUD4+
PpMmTQo0ZTUHRBE7p0+fHmgKWreNBu0BP2vOb+dFbT5/oKllwOSMG0LTAdf3
7t2LUcMgLN1uoMvzKKTHxMREoCZUIrfOmewI6pF5Nc2MHo7ym1I3iTiIgE9r
1qyJiYkhOOmomYWANhl1LincIRs3bty/f39KSoo41tr/mnQpJCLDXMa42BuN
pgAQO/1+1ZPv2bOndOnS0DYvvPDCsmXLQIxio1NtZaDQpk2bciN406ZNgrtY
nP7nP/+JiIjYtWvX0qVL+/TpU7ZsWXzt+++/N2gx9YJVuSxSQIHPC2COiooC
MzRq1AjPW6lSJS8vLzyXNacSahXIt8xolOHrEPMpFLv4bbZv3x6gK8ZSY84H
W6leB8ePH/f19QU4ATWnTZtGeyYDZDJDOAeC33NEmxTZW0dDocXQdFiqHD58
mJ4b9jgD66JLngh3xu/cuTN06NAyZcr8QxPm1Rw8eDBRU52G7HcvN6aXNG0J
HBsbu2HDhhMnTkilRZU2C/O+uaWwKc6dOwfU/NMk+BVTbXh4OFBT9dV3XGfR
pYCLQJrqks0tV4fs4okOwVzp4eHB8otubm4HDx5MVSqRqXuyQMoSJUqAlEqV
KoWuLrfx4MEDECZAtHr16s2bN//www+LFi2Ks23ZsoVhRGkaPDusdawWg5aU
WwzFycnJO3bs6NixI+ubv/nmm6C+bJ1QWh4P3rBhQ9Lm+++/D9rMzG+Tn1++
fFlos3PnzsyApPqdOuqpMxPpP3jphw4d8vf3nzRp0qxZs2ZoZXTw0+Zy6gWS
NpmYFD/peMAM+aylPn78eEC7/e7TuuiS+2I0OWKNGTPGycmJsee0bQI1P/nk
E8CewaI6huyn23xFOYOs3HEPwKdVq1adPHkSqIkphvgkZFXIvTQthVUpGTmF
CQWfbN26ddeuXapdhZvpju0wuhRsUVeUO3fuXLNmTXx8vMxudu5r8MzomTdu
3OjQoQORCQx23uSoIwEmKm2GhYXxa23atMGiWD7H144ePbp//37mrABkFi9e
HBqMO+my1Zgn/T9Vq8VG16CNGzcCC6tWrQpsBhsDJOLi4vC59SeUZ6GFuW3b
ttx+QtNdv349NaPMmWIRRduyciW+37NnT6k9lOq4DEhZ37m8C76XiIiIadOm
eXt7B2oR2SDPgIAAnTZFwJkBJmGguupmgKbz9PSMjo5WnSvMTDe66JI/5fbt
2/369ZPAc+bVLF269MiRI5n7ThQdPfaNmmeXPR1bHR1QyI8fPxZfTVz0N5Nk
FhyUh4CXr4RNceHCBUy1+IlJmaVMZCoBauZEoIQuBVhk9QfBqGQtoeDgYLXK
pD2TGrkIvXT37t0vv/wyDX2+vr60xptZNdNMrNKjRw+SErCECRZUuyWdS/Hz
l19+AW3im99//72AFoOSHNlA1gndTTEwV65c2bhxY+hVV1fX5s2bL168+N69
e7gl2/SnLASkTnqrVq2gMDPcaZJGgGqlnyfaEIz36NEjsbvmApzQpKlG7kOg
5ydNmoT3TnKbOXMmscoGWrMHNW2mwZw+f6Bm76VrK6+IJpo/fz4+nzp16ogR
I7DOUtMi6bSpS/4UUURY544dO5ZhodxqwU8nJ6dhw4YBZqQwpegl1e6R3SvK
vxi1EAAaSQBF586d++GHH06fPi07wmZYpdPmeQ0veQAUB5DjgJlIN23aBNS8
f/++IIHspDu88+hSgEVokx3ptddee+GFF+bOnSsaw37bJheYWFqWLVsWGAZE
/Pzzz2UBa7bD++DBA0Apvubs7Lxx40ZJx0TCpA7hjZE2uZOepqxnHdk6ip85
f1XPL1cEXEVGRn755Zdt27YtUaJEuXLlPvjgg2XLll27dk1wmvSe3auL+h06
dCidnerWrQuFkBlt8nJRUVHVqlUj2OOu1FThOe20SZE+w0vzFR88eHCqSYCa
rNsYqHkqzjAlBcoT2rTzbI66ouREClQKqbOV0FyzZs1Cu3l6eqKbqTOyTpu6
5CuRzonxnpycPHr0aKCmcCaTHQ0aNAj4J5xpp++fummufsKZAhITE7Nhwwag
5h/pJU/JLj/K77//fvbsWR6TNoma69evh+p++PChQQuO0DWPLjYL938Jfi1a
tABtzpkzh8BgOZazK/x3XOLrr78GbULtvPTSS+BDg5aEUxZKVA6HDx92dXWF
anJ3dz927Fiahi5mrjiQn3/+mbZN0mYOGe5kfMl9qneCR4A2Axg0b968ZMmS
uPOePXuuWbOGm0QOvI3Fixf/PyZxc3ODBshwsBu1pFX79u2rXLky2rBMmTJb
t2514G3YLGiNlJSUI0eOAJ+mTJkSqOR7ZwZ4biJbYwO0EuqsFMdCowP/UYAT
/wLaxLGvr+/EiRMBnLRUOyqZlS66OEqkrBh6Zr9+/WjVlMKUzKt54cIFUaTG
9AXabBDVOqraLvgJN9CBmrho3rJc/he0FfASzEkU//PPPzHRrFu3DqjJitJm
qKkrH12yKzLq8RPrl1atWkEtYHajF42Qnj3npwr67rvvSJv169ePiIhI1bKj
i+mPUbdLlixhiFCnTp3Om3w7jekDFXOZNo1K3lGm0RCdhpUg1um1a9fGDQPR
R40atXv37sTERD6XY3cZoAFwCahrXCsuLi7DZErSjCEhIeXKlWNTk9jzXMQL
4vjx45MnTwZwzp49W2KFxNRpDTRaCXUFgDY/1YSWT6ZF8vDwwDtlB2NSF13t
65JPhEBy69atYcOGMSAUC2RusmAxPnLkSG73EF2EWByiuo1avmWqGkwlv/32
GyYdaOmEhATdmPlMYZ0g5juSDfTw8HDWW2GCRN2wqYs98rdWwZw/sZABMon1
zKik3LTt/LKpsXLlygoVKkD5NG3aFBpAFrZCklQRQ4YMAe7+85//9PLyYgFW
nkddDucmbfLSMq3jfsCTaKL+/fszi3vNmjWhRbF8pqn2vyZxOG1iyDdp0gTA
ieddvXp1ZidnEwUEBDg5OTHByP379x14G/YIGpDmOLTVhAkTpk2bhkVNoGn7
WM30rtMmRa03BCYHc+LXefPm4eViXXP06NEnT56YlTzI6zesS2EXqD6oR09P
TyyKJdkRFJGzs/Pw4cMxrZjtxqpa3eaLGi2C0J8+fRofHx8WFkZfTXKULlkI
yJw/WS3oypUrRE1MwcwuYmYdcmCf0aXwiAxS9iUG7wiC8k9c1Nh8fmoDwGGt
WrUY54LhLyZN9Qaio6ObNWuG74BLv/zySzKw2XlyfyedMT5oE4zBkJCQXr16
4faKFSv22muvffbZZ1FRUZj3+RRiBXX4beAVfPvtt7QSDBo0KMOYI7YP8LJv
376g+nLlyoHwHbuhb7PI62ZLHjhwwN/f39vbm5neQZsMkLEGGq2EuuedNlk/
faZJcEwLJ47xc8qUKWPHjkXHk03DnFtq6aKL9ZKcnIylUOnSpaVa0L9MgmXv
edNGVZpJo6roYudOeppmDeACHOcEasbExEBRnzx5Ehr7vMlqpwPnM4XBQZcv
Xwafh4aGHjp06OHDh5z9IawxkU9mE12eUzFoAR2CfNQGBE41Q5HNlyCDYeC/
++670D9NmjQ5ceKEXCVNQ5EbN26MHDkSAAntVK9evX379qVpWzNi/Mwrv82r
V68uX768W7dubm5uTk5OrVu3XrBgQUREBIOvzZyFZP3uwNvAaX///ffGjRsX
LVq0SpUqWHJmSJtoz4MHD6L1/vnPf7733nuJiYn5RD8Q2tNM2Mxj+nBOnjwZ
BAXyZKFwa6DRSqgrALTJBpHQIf4MCgoKDg6eOnWql5cXoF1yFeq0qUuey4gR
I5ydnYsoAoX/0UcfXbr0/7Z33sFVnXf6X2yKG2A7bZPML5lNm9md3c0k2ZIy
60x2kiy2cWzHjhPHuymTBBDqvQCWDLq4JH9kZzNx4kITSKgClkAgMB3ThToR
kq6KqRJqqEJs8XvmPHPfOZaEfLlF917p+fxx5nCR7j33vUf3fM77fouTpeHo
mfbZSO/PXrMwh31IEV4LsoRLDK44rBjJEMRA21xQw3BNViLNycnZsWMHl07M
Z8TQTX3JCC8xCcvUThN3zS390+MntycBQS1mzZoFWSosLByVkNjX1xcdHf3R
j36UcT4PPfSQqSppXM4+kz9pttnR0fG///u/X/va19i3CL63Zs0afH2ZIrfm
a5NRnX6KbOE9++9///u5c+diDF999dWxP4NXxFcEbARGimEsLS0NHgkZcUVV
sUTV+1aSy4EDBxjD+dJLLxkNk23af3HUfobV3RI7q1atYpOmd955x34XFujP
WUwXzGoFvwPb29t//vOfz5w5015aE9/Pv/nNb6Ax5irAZVn7M9zWeWum1+zr
76ZoCQ4G38x//vOf2W+Rnb6hT9O8tNEoMBSm3CjnM+21jwoKCvbs2cNamvbg
BH29CJ9gzqKRMZgHvXlyBhhDhLq7uxcuXIhvJHwFXb58GY/wpglfCE899dS3
v/3tBQsWMHUR98hjD2bUye9z2xyxJQR1dXVVVFSkpKR88pOfhN397d/+LY4c
f4n9/f3jjo+//yT5dY1Xf/755++5556/+7u/w+2naf35vquBEY7wwQcfhJHa
K6b643g8YNQoUc7Ly8sjIiIgTg6HY5nFypUruWqcbqWru69nHkudv/Hhga1Y
sQKeyYyqV155Bba5ePHiw4cP0+FNRnCgP2ox9RmxZU1euHBh6dKl9957r72o
Jr6cf/nLX1ZXV5sMwZuu8HuPX9RuqvbYKt69njlzZv369YzVNGWOVEhzXKqq
qhobG3HlZQ90jFhTUxNjNVnsSJIpQg5TJPOmtaQOu3jkkUc+9alPQTg3bNjw
5ptvZmZmfvWrX33uuefwXYFvpzvvvPO+++777W9/O1aTRvwct8nnh9EdOHAg
KSnpi1/8ItT385///LPPPpufn89+kYHyN/PSsPS4uDjY71e+8pU//OEP+DIf
tMC3x+uvv46B/exnPwtVYw8mL+sJ+JURVzzwsWPH0tLSoqOj6VHMVadZma1f
pc5Xv+hbxn1Frq2npqbiPgjDBTOPjY2NjIw8ePAgzhBccE0qVqA/XjH1oW3i
xjw8PBxf2lyWYlFN7P/3f/83fMbcCL9va1Ls/Uuba4FZ9mJdzVOnTpkG6LLN
cbE3Caqpqam3VBNbqCYufFBN3rTKNkXIwW8DU+sbl0Kc2L/73e++973vfeEL
X4DLPf300//3f/8Hl3vnnXfwCL6pHnjgAXxpjD3J/W2bfJJ9+/Z9/etfnzVr
Fg4GClRaWoo7d1NYY2SyCqSPwkzt4jD6+voglhjAz3zmMw899NAvLb7xjW9g
3DCYBQUFV69eHbFFREz+0bqDmZIdHh4+dOgQ9D4xMRG3HjBP6hZU6rb0bzrY
Jmc1M6zGQ+yrjlFKTk4OCwvDnw9PD/uVItAfspiymK8XfPlANSGZnNjk4tRT
Tz0FnzE/Myrw3uMXHbuKxB281po1a44fP+50Osf1K9mmgaNx9uxZdgvC0EHL
c3JyysrKWOzIrJfpa0SEHPYlDy6d46zG2X769OnKysrz589zjgv2yEqbX/zi
F/v7+wMyt4kjOXny5LPPPhsXF3fmzBlomzl4I3vj1rr0N8YeeeMJQ2ttbcWh
vvHGG0uXLo2Njc3Kyjp69CirfVLszTrX5B+tO4y4OiNzFezw4cMYc7wRh8Ox
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
     "], {{0, 566.}, {890., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{72., 72.}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{360.80000000000007`, Automatic},
   ImageSizeRaw->{890., 566.},
   PlotRange->{{0, 890.}, {0, 566.}}]], "Input",ExpressionUUID->
  "426db006-80fc-4030-861b-9abcee4d52b3"],
 "\n\nBased on the compass-gait model above [1].\n\n[1] Rosa, N, B. Katamish, \
M. Raff, M., and C. D. Remy, \[OpenCurlyDoubleQuote]An Approach for \
Generating Families of Energetically Optimal Gaits from Passive Dynamic \
Walking Gaits\[CloseCurlyDoubleQuote], Submitted for review.\n\n[2] Rosa, N, \
and K. Lynch, \"A Topological Approach to Gait Generation for Biped Robots\", \
IEEE Transactions on Robotics, 38 (2), 2021.\n\n[3] Goswami, A., B. Thuilot, \
and B. Espiau, \[OpenCurlyDoubleQuote]A Study of the Passive Gait of a \
Compass-Like Biped Robot: Symmetry and Chaos\[CloseCurlyDoubleQuote], \
International Journal of Robotics Research, 17 (12), 1998."
}], "Text",ExpressionUUID->"4af46ac4-71e7-45af-92b2-523d2af31188"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load Libraries", \
"Section",ExpressionUUID->"a39eed02-6642-46e9-a0c7-67a9cbbc6e76"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"core", " ", "RBD"}], " ", "&"}], " ", "NCM", " ", "library"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", "\"\<../../\>\""}],
        "}"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<<", " ", "\"\<SIMple`\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<<", " ", "\"\<SIMple`Additions`\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", "\"\<../\>\""}], 
       "}"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<<", " ", "\"\<CompassGaitWithOptimalActuation`\>\""}], 
    ";"}]}]}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"c872a008-fd1c-4d60-83c1-89c173718e29"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set-up Environment", \
"Section",ExpressionUUID->"b9b4bff4-e265-4c5c-8b7c-f0aeb8061e3a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"DirectoryQ", "[", 
       RowBox[{"BLPath", "[", 
        RowBox[{"\"\<Here\>\"", ",", " ", "\"\<csv\>\""}], "]"}], "]"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CreateDirectory", "[", 
       RowBox[{"BLPath", "[", 
        RowBox[{"\"\<Here\>\"", ",", " ", "\"\<csv\>\""}], "]"}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vi", " ", "=", " ", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vdes", " ", "=", " ", "0.7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vmin", " ", "=", " ", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", 
        RowBox[{"\"\<c\>\"", ",", " ", "1", ",", " ", "vi"}], 
        "\[RightDoubleBracket]"}], "-", "vdes"}], "]"}], "&"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]i", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]des", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]min", " ", "=", " ", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", 
        RowBox[{"\"\<c\>\"", ",", " ", "1", ",", " ", "\[Sigma]i"}], 
        "\[RightDoubleBracket]"}], "-", "\[Sigma]des"}], "]"}], "&"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CompassGait", "[", 
   RowBox[{
    RowBox[{"\"\<e\>\"", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"Fourier", ",", " ", "2"}], "}"}]}], ",", " ", 
    RowBox[{"\"\<d\>\"", " ", "->", " ", "2"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DistributeSIMple", "[", 
   RowBox[{
   "4", ",", " ", "\"\<CompassGaitWithOptimalActuation`\>\"", ",", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"CompassGait", "[", 
        RowBox[{
         RowBox[{"\"\<e\>\"", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{"Fourier", ",", " ", "2"}], "}"}]}], ",", " ", 
         RowBox[{"\"\<d\>\"", " ", "->", " ", "2"}]}], "]"}], ";"}], ")"}], 
     "&"}]}], "]"}], ";"}]}], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"ace3afdc-0863-4416-a031-6766eb28c302"],

Cell[BoxData["\<\"The MaTeX configuration was corrupted so it had to be \
re-set. If you can reproduce this problem, please go to \
https://github.com/szhorvat/MaTeX and create a bug report.\"\>"], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"bc4f2d1b-8095-4970-8933-f393e2c6bb12"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Curve Tracing Functions", \
"Section",ExpressionUUID->"36bee633-a455-434b-9397-541a45ae6c15"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"coarsecurve", "[", "seeds_", "]"}], " ", ":=", " ", 
    RowBox[{"RunInParallel", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "c", ",", " ", "h0", ",", " ", "f", ",", " ", "m", ",", " ", "d", 
          ",", " ", "file"}], "}"}], " ", "=", " ", "s"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<c: \>\"", ",", " ", "c"}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"file", " ", "=!=", " ", "None"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"file", " ", "=", " ", 
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", 
              "\"\<csv\>\"", ",", " ", "file"}], "}"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"file", " ", "=", " ", 
           RowBox[{
            RowBox[{"StringTemplate", "[", "\"\<``_``.csv\>\"", "]"}], "[", 
            RowBox[{"file", ",", " ", 
             RowBox[{"ParameterName", "[", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"FileExistsQ", "[", "file", "]"}], ",", " ", 
            RowBox[{
             RowBox[{"DeleteFile", "[", "file", "]"}], ";"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<writing to: \>\"", ",", " ", 
            RowBox[{"FileNameJoin", "@", 
             RowBox[{
              RowBox[{"FileNameSplit", "[", "file", "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"-", "2"}], ";;"}], "\[RightDoubleBracket]"}]}]}], 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"o", " ", "=", " ", 
        RowBox[{"\"\<corrector\>\"", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<max\>\"", " ", "\[Rule]", " ", "10"}], ",", " ", 
           RowBox[{"Print", " ", "\[Rule]", " ", "False"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"o", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<d\>\"", " ", "\[Rule]", " ", "0.3"}], ",", " ", 
          RowBox[{"\"\<k\>\"", " ", "\[Rule]", " ", "1.0"}], ",", " ", 
          RowBox[{"\"\<a\>\"", " ", "\[Rule]", " ", 
           RowBox[{"180", " ", "Degree"}]}], ",", " ", 
          RowBox[{"\"\<max\>\"", " ", "\[Rule]", " ", "10"}], ",", " ", 
          RowBox[{"Print", " ", "\[Rule]", " ", "False"}], ",", " ", "o"}], 
         "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"time", ",", " ", "M"}], "}"}], " ", "=", " ", 
        RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
         RowBox[{"TraceCurve", "[", 
          RowBox[{
           RowBox[{"CompassGaitPad", "@", "c"}], ",", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<f\>\"", " ", "->", " ", "f"}], ",", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<h\>\"", " ", "->", " ", "h0"}], ",", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<m\>\"", " ", "->", " ", "m"}], ",", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<mon\>\"", " ", "->", " ", "None"}], ",", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"Write", " ", "->", " ", "file"}], ",", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"BLGenerateGaits", " ", "->", " ", 
            RowBox[{"Man", " ", "->", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<n\>\"", " ", "->", " ", "d"}], ",", " ", 
               RowBox[{"Method", " ", "->", " ", "cmac"}], ",", " ", 
               RowBox[{"\"\<cm\>\"", " ", "->", " ", "o"}]}], "}"}]}]}]}], 
          "\[IndentingNewLine]", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"M", "[", 
         RowBox[{
          RowBox[{"{", "0", "}"}], ",", " ", "\"\<abtime\>\""}], "]"}], " ", 
        "=", " ", "time"}], ";", "\[IndentingNewLine]", "M"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"s", ",", " ", "seeds"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Method", "->", "\"\<FinestGrained\>\""}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"finecurve", "[", "seeds_", "]"}], " ", ":=", " ", 
   RowBox[{"RunInParallel", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "i", ",", " ", "h", ",", " ", "c", ",", " ", "h0", ",", " ", "f", ",",
          " ", "m", ",", " ", "d", ",", " ", "file"}], "}"}], " ", "=", " ", 
       "s"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<c: \>\"", ",", " ", "c"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"file", " ", "=!=", " ", "None"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"file", " ", "=", " ", 
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", "\"\<csv\>\"",
              ",", " ", "file"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"file", " ", "=", " ", 
          RowBox[{
           RowBox[{"StringTemplate", "[", "\"\<``_``.csv\>\"", "]"}], "[", 
           RowBox[{"file", ",", " ", 
            RowBox[{"ParameterName", "[", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FileExistsQ", "[", "file", "]"}], ",", " ", 
           RowBox[{
            RowBox[{"DeleteFile", "[", "file", "]"}], ";"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<writing to: \>\"", ",", " ", 
           RowBox[{"FileNameJoin", "@", 
            RowBox[{
             RowBox[{"FileNameSplit", "[", "file", "]"}], 
             "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"-", "2"}], ";;"}], "\[RightDoubleBracket]"}]}]}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"o", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<h\>\"", " ", "->", " ", "h"}], ",", " ", 
         RowBox[{"\"\<corrector\>\"", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Print", " ", "->", " ", "False"}], ",", " ", 
            RowBox[{"\"\<max\>\"", " ", "->", " ", "30"}]}], "}"}]}], ",", 
         " ", 
         RowBox[{"\"\<i\>\"", " ", "->", " ", 
          RowBox[{"{", "i", "}"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time", ",", " ", "M"}], "}"}], " ", "=", " ", 
       RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
        RowBox[{"TraceCurve", "[", 
         RowBox[{
          RowBox[{"CompassGaitPad", "@", "c"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<f\>\"", " ", "->", " ", "f"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<h\>\"", " ", "->", " ", "h0"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<m\>\"", " ", "->", " ", "m"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<mon\>\"", " ", "->", " ", "None"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"Write", " ", "->", " ", "file"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "uncomment", " ", "if", " ", "passive", " ", "gaits", " ", "are", 
            " ", "all", " ", "equilibria", " ", "on", " ", "your", " ", 
            "system"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Tolerance", " ", "->", " ", 
             RowBox[{"10.0", "^", 
              RowBox[{"-", "6"}]}]}], ","}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"BLGenerateGaits", " ", "->", " ", 
           RowBox[{"Man", " ", "->", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<n\>\"", " ", "->", " ", "d"}], ",", " ", 
              RowBox[{"Method", " ", "->", " ", "cmnat"}], ",", " ", 
              RowBox[{"\"\<cm\>\"", " ", "->", " ", "o"}]}], "}"}]}]}]}], 
         "\[IndentingNewLine]", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"M", "[", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", " ", "\"\<abtime\>\""}], "]"}], " ", 
       "=", " ", "time"}], ";", "\[IndentingNewLine]", "M"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"s", ",", " ", "seeds"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Method", "->", "\"\<FinestGrained\>\""}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"8b174feb-754c-4fc0-8f01-09d13fece87f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate Passive Gaits", \
"Section",ExpressionUUID->"6c768519-2660-41de-9638-23ca0cbc12e2"],

Cell[TextData[{
 "If you want to compute everything from scratch, then uncomment the code \
below to generate two sets of passive gaits.  Since we assume in [1] that \
these gaits are known, we simply load the corresponding CSV file stored with \
this script.\n\nWhile not mentioned in [1], we can compute the set of passive \
gaits in our framework by simply not having operating point constraints.  The \
approach is similar to [2] in that it requires finding singular points on an \
equilibrium branch of gaits.  We\[CloseCurlyQuote]ve pre-computed the \
critical step duration values as a list ",
 StyleBox["Tcrit",
  FontSlant->"Italic"],
 " of the singular points for the CGW.\n\nBecause of the need to compute the \
optimality conditions, this approach is slower than the implementation in \
[2].\n\nNote: We compute tangent directions at a singular point assuming that \
the null space is equal to the tangent space.  For certain test systems, we \
need to decrease the tolerance in MMA\[CloseCurlyQuote]s computation of a \
basis set for the null space at an equilibrium gait in order to get the \
expected two tangent vectors.  The corresponding option can be found \
commented out in ",
 StyleBox["coarsecurve",
  FontSlant->"Italic"],
 ", along with a suggested value for the tolerance.  On your system, the \
computed solution set might also differ in sign from the paper.  In which \
case, switch ",
 StyleBox["Positive",
  FontSlant->"Italic"],
 " to ",
 StyleBox["Negative",
  FontSlant->"Italic"],
 " in the vector ",
 StyleBox["d",
  FontSlant->"Italic"],
 " below.  The rest of the code will only work as expected if the velocities \
are positive and the slopes are negative."
}], "Text",ExpressionUUID->"3088ac53-f995-4c9f-b7ff-2b77574ea743"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"c", " ", "=", " ", "Tcrit"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h0", " ", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", " ", "=", " ", "\"\<g\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", " ", "=", " ", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Positive", ",", " ", "Positive"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<g1_passive\>\"", ",", " ", "\"\<g2_passive\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seedp", " ", "=", " ", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "#1", ",", " ", "h0", ",", " ", "f", ",", " ", "m", ",", " ", "##2"}], 
       "}"}], "&"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"c", ",", " ", "d", ",", " ", "file"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Mp", " ", "=", " ", 
    RowBox[{"coarsecurve", "[", "seedp", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mp1", " ", "=", " ", 
   RowBox[{"Mp", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mp2", " ", "=", " ", 
   RowBox[{"Mp", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
  ";"}]}], "Input",ExpressionUUID->"7e4dd475-8f3c-4cd8-8289-1268d7609a0a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"c: \"\>", "\[InvisibleSpace]", "1.95492278659545`"}],
  SequenceForm["c: ", 1.95492278659545],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"02f70b40-c0a9-4a2f-a57e-67b4d207ba8d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"c: \"\>", "\[InvisibleSpace]", "2.144387135506262`"}],
  SequenceForm["c: ", 2.144387135506262],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"336eb934-1f58-4124-a166-129500fa06af"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"writing to: \"\>", 
   "\[InvisibleSpace]", "\<\"csv\\\\g1_passive_Z_F_2_Z.csv\"\>"}],
  SequenceForm["writing to: ", "csv\\g1_passive_Z_F_2_Z.csv"],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"ed3ad3ce-5ce5-4474-bdd4-1886468a64f3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"writing to: \"\>", 
   "\[InvisibleSpace]", "\<\"csv\\\\g2_passive_Z_F_2_Z.csv\"\>"}],
  SequenceForm["writing to: ", "csv\\g2_passive_Z_F_2_Z.csv"],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"0ae99967-2d21-4868-8a78-3515441a7c6d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ContinuationMethods`Private`corrector", "::", "step"}], 
   "MessageName"], " ", ":", 
  "  ", "\<\"The norm of the step size for \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.2617593365022529`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"1.6570895625875328`\\\"}], \\\",\\\", \
\\\"0.8355614695200123`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"2.6999086754615638`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.0903041177960195`\\\"}], \\\",\\\", \\\"0.2031687608495225`\\\", \
\\\",\\\", \\\"3.9432916907115`*^-18\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"5.383242935642384`*^-17\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"2.084694589333265`*^-17\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"4.207338063248023`*^-17\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]\\) is \\!\\(\\*RowBox[{\\\"2.330175877173242`\\\"}]\\) (> \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\)); the search is likely to diverge.\"\>"}]], \
"Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"b9335eea-5126-4966-9b81-88ebe5e47503"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ContinuationMethods`Private`corrector", "::", "step"}], 
   "MessageName"], " ", ":", 
  "  ", "\<\"The norm of the step size for \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.263299647114216`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"1.658651254264947`\\\"}], \\\",\\\", \
\\\"0.8458461612062668`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"2.712202116091078`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.092625274246689`\\\"}], \\\",\\\", \\\"0.1979109440792013`\\\", \\\",\\\
\", \\\"7.189003873319445`*^-18\\\", \\\",\\\", \
\\\"3.8891806363070475`*^-17\\\", \\\",\\\", \\\"1.84465746157853`*^-17\\\", \
\\\",\\\", \\\"3.412894732641487`*^-17\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) \
is \\!\\(\\*RowBox[{\\\"11.65959744471822`\\\"}]\\) (> \\!\\(\\*RowBox[{\\\"2\
\\\"}]\\)); the search is likely to diverge.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"1f27716e-dc53-4560-826d-fa976552bf2b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ContinuationMethods`Private`corrector", "::", "step"}], 
   "MessageName"], " ", ":", 
  "  ", "\<\"The norm of the step size for \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.454758269853644`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"2.4368473224419573`\\\"}], \\\",\\\", \
\\\"4.10037693876661`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"6.040027970683374`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"2.6731819310746223`\\\"}], \\\",\\\", \\\"0.5209403720261433`\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"2.4811332111420717`*^-17\\\"}], \\\",\\\", \
\\\"4.429759442655051`*^-17\\\", \\\",\\\", \\\"1.930266926632131`*^-17\\\", \
\\\",\\\", \\\"7.836493605066155`*^-18\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) \
is \\!\\(\\*RowBox[{\\\"8.165047401394236`\\\"}]\\) (> \\!\\(\\*RowBox[{\\\"2\
\\\"}]\\)); the search is likely to diverge.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"f08a59ba-08ab-4c00-9613-679ce90bf03c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ContinuationMethods`Private`corrector", "::", "step"}], 
   "MessageName"], " ", ":", 
  "  ", "\<\"The norm of the step size for \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.2619267606087224`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"1.65732756491372`\\\"}], \\\",\\\", \
\\\"0.8368580172099017`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"2.7017511199826663`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.0905905430655822`\\\"}], \\\",\\\", \\\"0.20065516999154545`\\\", \\\",\
\\\", \\\"3.5945019366595524`*^-18\\\", \\\",\\\", \
\\\"7.868731607636198`*^-18\\\", \\\",\\\", \\\"3.3280337976472014`*^-18\\\", \
\\\",\\\", \\\"8.446349434197612`*^-18\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) \
is \\!\\(\\*RowBox[{\\\"35.47672597665624`\\\"}]\\) (> \\!\\(\\*RowBox[{\\\"2\
\\\"}]\\)); the search is likely to diverge.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"0e06cf9c-f574-4a06-adf2-5e859909c09c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \
\\!\\(\\*StyleBox[RowBox[{\\\"ContinuationMethods`Private`corrector\\\", \
\\\"::\\\", \\\"step\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"6758c53c-a8f0-4f23-9ff7-880c7ace1dd2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ContinuationMethods`Private`corrector", "::", "step"}], 
   "MessageName"], " ", ":", 
  "  ", "\<\"The norm of the step size for \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.4383674013275383`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"2.449492248939991`\\\"}], \\\",\\\", \
\\\"4.183477377025864`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"6.173204290626249`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"2.663113525797534`\\\"}], \\\",\\\", \\\"0.5027683351334556`\\\", \\\",\\\
\", RowBox[{\\\"-\\\", \\\"8.791631118365892`*^-18\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"3.280799448526536`*^-17\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.526915599851861`*^-17\\\"}], \\\",\\\", \
\\\"6.033054100543894`*^-17\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) is \
\\!\\(\\*RowBox[{\\\"37.110941926469216`\\\"}]\\) (> \\!\\(\\*RowBox[{\\\"2\\\
\"}]\\)); the search is likely to diverge.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"77a571fb-198a-482e-8369-fc05e8c06111"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FirstOrderOptimalityCondition", "::", "bif"}], "MessageName"], 
  " ", ":", 
  "  ", "\<\"A bifurcation point at \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.26283113859637175`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"1.6582339255013228`\\\"}], \\\",\\\", \
\\\"0.8428692472554414`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"2.7088802406271957`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.091948101347033`\\\"}], \\\",\\\", \\\"0.19799575727086385`\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"7.155220716825484`*^-19\\\"}], \\\",\\\", \
\\\"5.123479427262525`*^-17\\\", \\\",\\\", \\\"2.737433547956055`*^-17\\\", \
\\\",\\\", \\\"3.8876539402092026`*^-17\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) \
has (potentially) been detected: \\!\\(\\*TagBox[RowBox[{\\\"(\\\", \\\"\
\[NoBreak]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"\[NoBreak]\\\", \\\")\\\"}], Function[BoxForm`e$, \
MatrixForm[BoxForm`e$]]]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"a999aa67-d930-4324-887d-e00b6aa1f8fe"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FirstOrderOptimalityCondition", "::", "bif"}], "MessageName"], 
  " ", ":", 
  "  ", "\<\"A bifurcation point at \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.26019788941056937`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"1.657232717226238`\\\"}], \\\",\\\", \
\\\"0.8530891219676607`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"2.718437368659621`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.0888142480236882`\\\"}], \\\",\\\", \\\"0.19807280321607865`\\\", \\\",\
\\\", \\\"4.058803950193797`*^-27\\\", \\\",\\\", \\\"1.593984996172626`*^-11\
\\\", \\\",\\\", \\\"8.337992874474124`*^-12\\\", \\\",\\\", \
\\\"1.1785982391891138`*^-11\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) has (potentially) \
been detected: \\!\\(\\*TagBox[RowBox[{\\\"(\\\", \\\"\[NoBreak]\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"\
\[NoBreak]\\\", \\\")\\\"}], Function[BoxForm`e$, \
MatrixForm[BoxForm`e$]]]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"26ba1c02-54b4-43de-9c73-b8afb412dde1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ContinuationMethods`Private`corrector", "::", "step"}], 
   "MessageName"], " ", ":", 
  "  ", "\<\"The norm of the step size for \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.4241076455625503`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"2.457455727971552`\\\"}], \\\",\\\", \
\\\"4.247584373025901`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"6.277371450802277`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"2.6528355095483263`\\\"}], \\\",\\\", \\\"0.48685279069719106`\\\", \\\",\
\\\", RowBox[{\\\"-\\\", \\\"4.935580329964639`*^-18\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"2.0224473569811197`*^-17\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"8.205698926844007`*^-18\\\"}], \\\",\\\", \
\\\"1.6529794963045993`*^-17\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) is \
\\!\\(\\*RowBox[{\\\"69.93290304228611`\\\"}]\\) (> \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\)); the search is likely to diverge.\"\>"}]], \
"Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"2652026f-5c8c-4431-9261-d6bc2cf2bab2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \
\\!\\(\\*StyleBox[RowBox[{\\\"ContinuationMethods`Private`corrector\\\", \
\\\"::\\\", \\\"step\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"40e740ad-68f6-44c8-88f5-2e29598311a7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FirstOrderOptimalityCondition", "::", "bif"}], "MessageName"], 
  " ", ":", 
  "  ", "\<\"A bifurcation point at \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.2629114099923946`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"1.6583571395879702`\\\"}], \\\",\\\", \
\\\"0.8434790348728861`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"2.7098274474376214`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.0920899797863795`\\\"}], \\\",\\\", \\\"0.19671549266304938`\\\", \\\",\
\\\", RowBox[{\\\"-\\\", \\\"3.6044090533241945`*^-24\\\"}], \\\",\\\", \
\\\"2.88156260272558`*^-14\\\", \\\",\\\", \\\"1.53754060298029`*^-14\\\", \\\
\",\\\", \\\"2.0794019332195658`*^-14\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) \
has (potentially) been detected: \\!\\(\\*TagBox[RowBox[{\\\"(\\\", \\\"\
\[NoBreak]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"\[NoBreak]\\\", \\\")\\\"}], Function[BoxForm`e$, \
MatrixForm[BoxForm`e$]]]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"ee28564f-642d-4861-b7e1-65bebcd181f7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \
\\!\\(\\*StyleBox[RowBox[{\\\"FirstOrderOptimalityCondition\\\", \\\"::\\\", \
\\\"bif\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"fc612fee-0920-408e-bc28-7b93632595ad"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FirstOrderOptimalityCondition", "::", "bif"}], "MessageName"], 
  " ", ":", 
  "  ", "\<\"A bifurcation point at \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.3605385608130656`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"2.466821103902166`\\\"}], \\\",\\\", \
\\\"4.448869650817786`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"6.621147980407309`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"2.5939491127641485`\\\"}], \\\",\\\", \\\"0.40683344480849876`\\\", \\\",\
\\\", RowBox[{\\\"-\\\", \\\"1.0442660879368323`*^-46\\\"}], \\\",\\\", \
\\\"4.404031886366087`*^-27\\\", \\\",\\\", \\\"1.978419512220502`*^-27\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"1.1740314184134442`*^-27\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]\\) has (potentially) been detected: \\!\\(\\*TagBox[RowBox[{\\\"(\
\\\", \\\"\[NoBreak]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"\[NoBreak]\\\", \\\")\\\"}], Function[BoxForm`e$, \
MatrixForm[BoxForm`e$]]]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"12f34e73-a958-481b-bbd3-132ba66b7bcb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FirstOrderOptimalityCondition", "::", "bif"}], "MessageName"], 
  " ", ":", 
  "  ", "\<\"A bifurcation point at \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.3319078871218062`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"2.462494240407255`\\\"}], \\\",\\\", \
\\\"4.529706993059058`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"6.758756085207933`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"2.5631550073254337`\\\"}], \\\",\\\", \\\"0.35473755001771634`\\\", \\\",\
\\\", RowBox[{\\\"-\\\", \\\"5.642794748741515`*^-18\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"7.757350496720883`*^-18\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"4.868399004996617`*^-18\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"1.8606573526010517`*^-18\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]\\) has (potentially) been detected: \\!\\(\\*TagBox[RowBox[{\\\"(\
\\\", \\\"\[NoBreak]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"\[NoBreak]\\\", \\\")\\\"}], Function[BoxForm`e$, \
MatrixForm[BoxForm`e$]]]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"5a6509cd-6b03-4d15-8fe3-b656ec0521df"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FirstOrderOptimalityCondition", "::", "bif"}], "MessageName"], 
  " ", ":", 
  "  ", "\<\"A bifurcation point at \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.318206065452716`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"2.459936248493586`\\\"}], \\\",\\\", \
\\\"4.532413548773759`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"6.775348230631214`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"2.5481741896995085`\\\"}], \\\",\\\", \\\"0.32651575503220154`\\\", \\\",\
\\\", RowBox[{\\\"-\\\", \\\"3.241284900645847`*^-38\\\"}], \\\",\\\", \
\\\"1.682329844834195`*^-20\\\", \\\",\\\", \\\"9.387308170145924`*^-21\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"4.363043832404076`*^-21\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]\\) has (potentially) been detected: \\!\\(\\*TagBox[RowBox[{\\\"(\
\\\", \\\"\[NoBreak]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"\[NoBreak]\\\", \\\")\\\"}], Function[BoxForm`e$, \
MatrixForm[BoxForm`e$]]]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"9634a8c5-7147-4ef3-985e-40034b5672e3"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \
\\!\\(\\*StyleBox[RowBox[{\\\"FirstOrderOptimalityCondition\\\", \\\"::\\\", \
\\\"bif\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"316a6e42-7360-43e2-a8e2-a64304092ec0"],

Cell[BoxData["\<\"tmon --- tree depth: 51 |M|: 52 |Q|: 1 t: 2587.00\
\[ThinSpace]s t/|M|: 49.75\[ThinSpace]s/pt\"\>"], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"2fb24873-9ca1-4e30-ab29-13ff7e888d7e"],

Cell[BoxData["\<\"tmon --- tree depth: 51 |M|: 52 |Q|: 1 t: 2917.00\
\[ThinSpace]s t/|M|: 56.11\[ThinSpace]s/pt\"\>"], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"d04fa9cb-40cc-4495-a259-c24ae16e57ba"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PlotGaitParameters", "[", 
  RowBox[{"Mp", ",", " ", 
   RowBox[{"\"\<i\>\"", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Sigma]\>\"", ",", " ", "\"\<v\>\"", ",", " ", "\"\<\[Tau]\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[27]:=",ExpressionUUID->"ed18e890-bc6f-430b-85f6-fe60e7425169"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get Target Passive Gait", \
"Section",ExpressionUUID->"e9557d58-207f-4924-bbd0-f88f03a464fb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", " ", "=", " ", "vi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", " ", "=", " ", 
   RowBox[{"<|", "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", " ", "=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"ConvertCSV", "[", 
      RowBox[{"\"\<g1_passive_Z_F_2_Z\>\"", ",", " ", "\"\<csv\>\""}], "]"}], 
     ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", 
        RowBox[{"\"\<c\>\"", ",", " ", "1", ",", " ", "\[Sigma]i"}], 
        "\[RightDoubleBracket]"}], ">", " ", 
       RowBox[{
        RowBox[{"-", "90"}], "Degree"}]}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", " ", "=", " ", 
   RowBox[{
    RowBox[{"SortGaits", "[", 
     RowBox[{"c", ",", " ", "vmin"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", " ", "\"\<c\>\"", ",", " ", "1"}], 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h0", " ", "=", " ", 
   RowBox[{
    RowBox[{"c", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "-", 
    "vdes"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", " ", "=", " ", "\"\<g\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", " ", "=", " ", "Negative"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", " ", "=", " ", "None"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seed0", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "i", ",", " ", "h", ",", " ", "c", ",", " ", "h0", ",", " ", "f", ",", 
      " ", "m", ",", " ", "d", ",", " ", "file"}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M0", " ", "=", " ", 
   RowBox[{"Join", "@@", 
    RowBox[{"finecurve", "[", "seed0", "]"}]}]}], ";"}]}], "Input",
 CellLabel->"In[28]:=",ExpressionUUID->"f02168d8-2570-4df8-b05e-ce1fac134405"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"c: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.08368146572918878`", ",", 
     RowBox[{"-", "0.8979931975578603`"}], ",", "0.6859831732508437`", ",", 
     RowBox[{"-", "1.6818198198675038`"}], ",", 
     RowBox[{"-", "0.3653151330497414`"}], ",", "0.6464041966677595`", ",", 
     RowBox[{"-", "6.381884443066632`*^-36"}], ",", "2.015799104936672`*^-24",
      ",", "2.6408061164609984`*^-25", ",", 
     RowBox[{"-", "1.9955085987945158`*^-23"}], ",", "0.`", ",", 
     "1.3430043155397233`"}], "}"}]}],
  SequenceForm[
  "c: ", {0.08368146572918878, -0.8979931975578603, 
   0.6859831732508437, -1.6818198198675038`, -0.3653151330497414, 
   0.6464041966677595, -6.381884443066632*^-36, 2.015799104936672*^-24, 
   2.6408061164609984`*^-25, -1.9955085987945158`*^-23, 0., 
   1.3430043155397233`}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"a0941442-01d2-4d98-83b6-44d8b618fb64"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"89f06533-563d-4b59-845f-9b59595f5c5b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"1e33b9f4-b808-4b5d-9482-df7a359127f7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"e7674b17-ad63-4e2d-b0c3-9996ab6729c1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"OptionValue\\\", \
\\\"::\\\", \\\"nodef\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"e2e6b785-6448-448e-a6c0-a85027e1fa6d"],

Cell[BoxData["\<\"tmon --- tree depth: 1 |M|: 2 |Q|: 1 t: 27.13\[ThinSpace]s \
t/|M|: 13.56\[ThinSpace]s/pt\"\>"], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"6b9a20b8-d93b-40b0-afc6-1bf4c4a07361"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Velocity Slice", \
"Section",ExpressionUUID->"46d35230-0f75-45c7-9f41-4a6b50bb12d4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cv", " ", "=", " ", 
   RowBox[{
    RowBox[{"SortGaits", "[", 
     RowBox[{"M0", ",", " ", "vmin"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", " ", "\"\<c\>\"", ",", " ", "1"}], 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h0", " ", "=", " ", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", " ", "=", " ", "\"\<v\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", " ", "=", " ", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", " ", "=", " ", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"#", " ", "==", " ", "\"\<p\>\""}], ",", " ", "Positive", ",", 
      " ", "Negative"}], "]"}], "&"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", " ", "=", " ", 
   RowBox[{
    RowBox[{"\"\<g1_v_0.7_\>\"", " ", "<>", " ", "#"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seeds", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cv", ",", " ", "h0", ",", " ", "f", ",", " ", "m", ",", " ", 
       RowBox[{"d", "[", "\"\<p\>\"", "]"}], ",", " ", 
       RowBox[{"file", "[", "\"\<p\>\"", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"cv", ",", " ", "h0", ",", " ", "f", ",", " ", "m", ",", " ", 
       RowBox[{"d", "[", "\"\<n\>\"", "]"}], ",", " ", 
       RowBox[{"file", "[", "\"\<n\>\"", "]"}]}], "}"}]}], "}"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mv", " ", "=", " ", 
   RowBox[{"Join", "@@", 
    RowBox[{"coarsecurve", "[", "seeds", "]"}]}]}], ";"}]}], "Input",
 CellLabel->"In[39]:=",ExpressionUUID->"66a9b7ff-962e-40c8-965a-4b166fd31750"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"c: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.03105251575495737`", ",", 
     RowBox[{"-", "0.9324001746726582`"}], ",", "0.8171914888102924`", ",", 
     RowBox[{"-", "1.8923553472243022`"}], ",", 
     RowBox[{"-", "0.43514757158137174`"}], ",", "0.7`", ",", 
     RowBox[{"-", "1.2948878259047715`*^-33"}], ",", 
     "5.455029601375074`*^-18", ",", 
     RowBox[{"-", "1.6619901193997144`*^-19"}], ",", 
     RowBox[{"-", "2.6302739484573732`*^-18"}], ",", "0.`", ",", 
     "1.2842718516941118`"}], "}"}]}],
  SequenceForm[
  "c: ", {0.03105251575495737, -0.9324001746726582, 
   0.8171914888102924, -1.8923553472243022`, -0.43514757158137174`, 
   0.7, -1.2948878259047715`*^-33, 
   5.455029601375074*^-18, -1.6619901193997144`*^-19, \
-2.6302739484573732`*^-18, 0., 1.2842718516941118`}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"39d2a071-08d9-4c4d-bd48-73d835633fa7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"c: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.03105251575495737`", ",", 
     RowBox[{"-", "0.9324001746726582`"}], ",", "0.8171914888102924`", ",", 
     RowBox[{"-", "1.8923553472243022`"}], ",", 
     RowBox[{"-", "0.43514757158137174`"}], ",", "0.7`", ",", 
     RowBox[{"-", "1.2948878259047715`*^-33"}], ",", 
     "5.455029601375074`*^-18", ",", 
     RowBox[{"-", "1.6619901193997144`*^-19"}], ",", 
     RowBox[{"-", "2.6302739484573732`*^-18"}], ",", "0.`", ",", 
     "1.2842718516941118`"}], "}"}]}],
  SequenceForm[
  "c: ", {0.03105251575495737, -0.9324001746726582, 
   0.8171914888102924, -1.8923553472243022`, -0.43514757158137174`, 
   0.7, -1.2948878259047715`*^-33, 
   5.455029601375074*^-18, -1.6619901193997144`*^-19, \
-2.6302739484573732`*^-18, 0., 1.2842718516941118`}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"6926ee5e-e098-4380-90b2-1bc65bd878b1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"writing to: \"\>", 
   "\[InvisibleSpace]", "\<\"csv\\\\g1_v_0.7_p_Z_F_2_Z.csv\"\>"}],
  SequenceForm["writing to: ", "csv\\g1_v_0.7_p_Z_F_2_Z.csv"],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"bbb7d8c1-28e2-4100-b0f0-7fa1f185fded"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"writing to: \"\>", 
   "\[InvisibleSpace]", "\<\"csv\\\\g1_v_0.7_n_Z_F_2_Z.csv\"\>"}],
  SequenceForm["writing to: ", "csv\\g1_v_0.7_n_Z_F_2_Z.csv"],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"e096f944-62e6-4033-9d33-5d75c9f5b327"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ContinuationMethods`Private`corrector", "::", "step"}], 
   "MessageName"], " ", ":", 
  "  ", "\<\"The norm of the step size for \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.4502606688076773`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"1.9085928316126535`\\\"}], \\\",\\\", \
\\\"2.8394375392431677`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"4.424809359055995`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"2.404557084614004`\\\"}], \\\",\\\", \\\"0.7`\\\", \\\",\\\", \
\\\"0.0028521576444144768`\\\", \\\",\\\", \\\"0.06766960695535537`\\\", \
\\\",\\\", \\\"0.010451569887725507`\\\", \\\",\\\", \\\"0.02695113463637055`\
\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) is \
\\!\\(\\*RowBox[{\\\"46.2989267913923`\\\"}]\\) (> \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\)); the search is likely to diverge.\"\>"}]], \
"Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"83bf9d8c-8083-4bd2-9834-f886676aadb3"],

Cell[BoxData["\<\"tmon --- tree depth: 25 |M|: 26 |Q|: 1 t: 1171.00\
\[ThinSpace]s t/|M|: 45.03\[ThinSpace]s/pt\"\>"], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"93542c06-5f5f-4237-ae65-e1c83079d871"],

Cell[BoxData["\<\"tmon --- tree depth: 25 |M|: 26 |Q|: 1 t: 1206.00\
\[ThinSpace]s t/|M|: 46.40\[ThinSpace]s/pt\"\>"], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"8dd3610e-d2cd-43b7-993e-9e9ba5ed3e24"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotGaitParameters", "[", 
  RowBox[{"Mv", ",", " ", 
   RowBox[{"\"\<i\>\"", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Sigma]\>\"", ",", " ", "\"\<\[Tau]\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[47]:=",ExpressionUUID->"b9c92c86-e5ec-4f88-b04f-53e2af5704e9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBIA2IQXRkouHXHnvQDbjoziveHfLXvPm3+vrA7/UCrlK7b
fLuv9jOa5W7FRqYfmJu0/Yi00lf7qMnbfOvU0g+0d/r23vz1xf7Ekc2Svz6l
HfDwzvymcfiLfX5YsKT5/rQD0+zUjOTLvtifXWYqcqI77cCdxJgpfDJf7FOK
s3rOh6UdCJ+5e2Uuzxd7pa1hxYz/Ug/McvL78bPsu329brX3pcmpBxRqxWbM
ivxrX/QhpnMZW+oBjiun7n50ZnTI3bFadXZiygGvS7MKGtKZHK50Mv2zLE4+
wLjFVXj/FSYHxeJn9SopiQd+KrmfYV7B5LD5ZVvwiq/xBx5zvXoZ7snk8Mu7
a/rfFdEHJl/IcDTpZ3SQ/rc48XNAxIFwc63gsocMDke1Ps/qygo9sG5tUY2u
CYPDo9u1VWy7gw4svXfSbs/vf/Z9ulmqqfIBB7a+P3aDM+uvvT57v6o3s/eB
W9HJ9zfO+W3/pP7OD+te1wM8Z0XvTcj4ad/5SEd0fqrDgRZPTkWfp9/s9xSf
F2JisTnwdZXhyS1tX+2/C3clcb6yPGA/IaW65N4X+wmpcvHz31kcKDZUXpLQ
88X+xYoEHYV/5gcKn071m2f9xf55kuDdHGuzA1tzG+5fnPvZnl9hXv0MeeMD
dbXRZ33zP9l3PXMs5Zmtc+Cg87anMz0/2P+vXSiz+rDSgTdm8Ta7Xr+yj/cr
KcrcKHrg+bnohov9T+yVPlSopPqzH1CYFyVpv/yu/UzN+0fXHfu93+uSzWzl
qdft93RIq7q6f9vv+CU9Tu3tdfuH1QtM3z34tP/QoukZc6Ju20/cGx2lsvPN
fvdHv1/+YX1gH12WHpRZfnd/nNmCJX8qH9mn2rRYWeocsucMlNvte+aJfdBf
WcGc1W/sBbe9uX3/9TP791++Pdbu+mPf5RJff/7GC/v0J3el2gLYHPyEv5za
PuOVvaLXMc5ZhvwONgLTrocYvbE3OWzHuTNDxCGrtTX16+q39nM5etW8+yQd
1pTrffjP9d4+SOTQ9xMM8g6/Le75f9T8YJ/hs+fovWglh2eODMdEj36wf/DC
05M/VNXhVOub2PCIj/YS2Rn9k9M0HEJaK2NvPPlo3xuUcc2tU9vhYgfj367s
T/ZtdTr/5m/ScygzMjYOePvJfjS/jOaX0fxCfH4BAOXVMTk=
      "], {{{}, {}, 
        TagBox[
         TooltipBox[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.011000000000000001`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51}]}, "\"(-24.93,1.28)\"", LabelStyle -> "TextStyling"], 
         Annotation[#, "(-24.93,1.28)", "Tooltip"]& ]}, {
        TagBox[
         TooltipBox[{
           Directive[
            AbsoluteThickness[1.6], 
            GrayLevel[0], 
            PointSize[Small]], 
           
           PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
            17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
            33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
            49, 50, 51}]}, "\"(-24.93,1.28)\"", LabelStyle -> "TextStyling"], 
         Annotation[#, "(-24.93,1.28)", "Tooltip"]& ], {}}}], {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"\[Tau] (step duration)\"", StripOnInput -> False], 
         TraditionalForm], None}, {
        FormBox[
         StyleBox["\"\[Sigma] (walking slope)\"", StripOnInput -> False], 
         TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> Automatic, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-189.8975472772834, 15.348876898700166`}, {
       0, 2.353880072178527}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Prolog -> {
       PointSize[Large], 
       GrayLevel[0], 
       PointBox[{{-24.93211931697948, 1.2842718516941118`}}]}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"(-24.93,1.28)\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[47]=",ExpressionUUID->"81659cfe-44fb-4d52-ba4b-a20769dabcae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get Target Actuated Gait", \
"Section",ExpressionUUID->"3a68ca95-849b-40d5-8439-5309ec5525cd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", " ", "=", " ", "\[Sigma]i"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", " ", "=", " ", 
   RowBox[{"<|", "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", " ", "=", " ", 
   RowBox[{
    RowBox[{"SortGaits", "[", 
     RowBox[{"Mv", ",", " ", "\[Sigma]min"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", " ", "\"\<c\>\"", ",", " ", "1"}], 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h0", " ", "=", " ", 
   RowBox[{
    RowBox[{"c", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "-", 
    "\[Sigma]des"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", " ", "=", " ", "\"\<v\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", " ", "=", " ", "Negative"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", " ", "=", " ", "None"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seed1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "i", ",", " ", "h", ",", " ", "c", ",", " ", "h0", ",", " ", "f", ",", 
      " ", "m", ",", " ", "d", ",", " ", "file"}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M1", " ", "=", " ", 
   RowBox[{"Join", "@@", 
    RowBox[{"finecurve", "[", "seed1", "]"}]}]}], ";"}]}], "Input",
 CellLabel->"In[48]:=",ExpressionUUID->"dbafb4fe-bae9-4676-a062-e5bece351eed"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"c: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.2319657306872975`", ",", 
     RowBox[{"-", "0.45897561307922596`"}], ",", "4.2422644472121975`", ",", 
     RowBox[{"-", "4.73344194329033`"}], ",", "0.0024779241476848707`", ",", 
     "0.7`", ",", "0.19812647847741272`", ",", 
     RowBox[{"-", "0.8552302625878946`"}], ",", 
     RowBox[{"-", "0.08286218402326308`"}], ",", "0.486930409445375`", ",", 
     "0.`", ",", "0.6499394087464064`"}], "}"}]}],
  SequenceForm[
  "c: ", {0.2319657306872975, -0.45897561307922596`, 
   4.2422644472121975`, -4.73344194329033, 0.0024779241476848707`, 0.7, 
   0.19812647847741272`, -0.8552302625878946, -0.08286218402326308, 
   0.486930409445375, 0., 0.6499394087464064}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"630c7910-6a1e-403f-815a-fba4cd1e42e4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"e848e353-544e-42e6-9c94-df885747f4ee"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"e7f48705-38cb-4221-9165-85934657e033"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"80525007-d103-4e4a-bd40-cf31b3af515e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"OptionValue\\\", \
\\\"::\\\", \\\"nodef\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"b907fec1-ff13-4af3-81a4-b33af7a9be26"],

Cell[BoxData["\<\"tmon --- tree depth: 1 |M|: 2 |Q|: 1 t: 46.26\[ThinSpace]s \
t/|M|: 23.13\[ThinSpace]s/pt\"\>"], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"26240021-a33b-478d-b41c-6cb0171e0890"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Slope Slice", \
"Section",ExpressionUUID->"876cc04b-19b3-4233-918e-2e1ff41bff71"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"c\[Sigma]", " ", "=", " ", 
   RowBox[{
    RowBox[{"SortGaits", "[", 
     RowBox[{"M1", ",", " ", "\[Sigma]min"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", " ", "\"\<c\>\"", ",", " ", "1"}], 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h0", " ", "=", " ", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", " ", "=", " ", "\"\<\[Sigma]\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", " ", "=", " ", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", " ", "=", " ", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"#", " ", "==", " ", "\"\<p\>\""}], ",", " ", "Positive", ",", 
      " ", "Negative"}], "]"}], "&"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", " ", "=", " ", 
   RowBox[{
    RowBox[{"\"\<g1_\[Sigma]_0_\>\"", " ", "<>", " ", "#"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seeds", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "c\[Sigma]", ",", " ", "h0", ",", " ", "f", ",", " ", "m", ",", " ", 
       RowBox[{"d", "[", "\"\<p\>\"", "]"}], ",", " ", 
       RowBox[{"file", "[", "\"\<p\>\"", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "c\[Sigma]", ",", " ", "h0", ",", " ", "f", ",", " ", "m", ",", " ", 
       RowBox[{"d", "[", "\"\<n\>\"", "]"}], ",", " ", 
       RowBox[{"file", "[", "\"\<n\>\"", "]"}]}], "}"}]}], "}"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M\[Sigma]", " ", "=", " ", 
   RowBox[{"Join", "@@", 
    RowBox[{"coarsecurve", "[", "seeds", "]"}]}]}], ";"}]}], "Input",
 CellLabel->"In[58]:=",ExpressionUUID->"73e1fb48-105a-40da-a94d-f04644cf180a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"c: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.2241004718292953`", ",", 
     RowBox[{"-", "0.4482009436585906`"}], ",", "4.155036555355064`", ",", 
     RowBox[{"-", "4.648146895143267`"}], ",", "0.`", ",", "0.7`", ",", 
     "0.19048727777068006`", ",", 
     RowBox[{"-", "0.8609772551063415`"}], ",", 
     RowBox[{"-", "0.07966046943210067`"}], ",", "0.47225922824868327`", ",", 
     "0.`", ",", "0.6349412047575536`"}], "}"}]}],
  SequenceForm[
  "c: ", {0.2241004718292953, -0.4482009436585906, 
   4.155036555355064, -4.648146895143267, 0., 0.7, 
   0.19048727777068006`, -0.8609772551063415, -0.07966046943210067, 
   0.47225922824868327`, 0., 0.6349412047575536}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"0f8ad7c3-3fbe-473b-8b05-bbe2fe78b8e8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"c: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.2241004718292953`", ",", 
     RowBox[{"-", "0.4482009436585906`"}], ",", "4.155036555355064`", ",", 
     RowBox[{"-", "4.648146895143267`"}], ",", "0.`", ",", "0.7`", ",", 
     "0.19048727777068006`", ",", 
     RowBox[{"-", "0.8609772551063415`"}], ",", 
     RowBox[{"-", "0.07966046943210067`"}], ",", "0.47225922824868327`", ",", 
     "0.`", ",", "0.6349412047575536`"}], "}"}]}],
  SequenceForm[
  "c: ", {0.2241004718292953, -0.4482009436585906, 
   4.155036555355064, -4.648146895143267, 0., 0.7, 
   0.19048727777068006`, -0.8609772551063415, -0.07966046943210067, 
   0.47225922824868327`, 0., 0.6349412047575536}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"ea212c9e-837e-4c4d-bc1c-443aed4fb714"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"writing to: \"\>", 
   "\[InvisibleSpace]", "\<\"csv\\\\g1_\[Sigma]_0_p_Z_F_2_Z.csv\"\>"}],
  SequenceForm["writing to: ", "csv\\g1_\[Sigma]_0_p_Z_F_2_Z.csv"],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"6af8c3f2-f141-441a-8e1f-68063f325b7e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"writing to: \"\>", 
   "\[InvisibleSpace]", "\<\"csv\\\\g1_\[Sigma]_0_n_Z_F_2_Z.csv\"\>"}],
  SequenceForm["writing to: ", "csv\\g1_\[Sigma]_0_n_Z_F_2_Z.csv"],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"db53feef-7c49-4366-9e5d-3c717552a8c5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ContinuationMethods`Private`corrector", "::", "step"}], 
   "MessageName"], " ", ":", 
  "  ", "\<\"The norm of the step size for \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0.20199177784517167`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.4039835556903437`\\\"}], \\\",\\\", \\\"3.080992583357301`\\\", \\\",\\\
\", RowBox[{\\\"-\\\", \\\"3.3548747263292844`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"4.119375394535687`*^-17\\\"}], \\\",\\\", \
\\\"0.43110162639048166`\\\", \\\",\\\", \\\"0.07868153097389613`\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"0.38782253365385044`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.0906623568308594`\\\"}], \\\",\\\", \
\\\"0.29438195744768325`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) is \
\\!\\(\\*RowBox[{\\\"9.629632064258573`\\\"}]\\) (> \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\)); the search is likely to diverge.\"\>"}]], \
"Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"eede04de-2904-415a-9939-5998ccae109d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ContinuationMethods`Private`corrector", "::", "step"}], 
   "MessageName"], " ", ":", 
  "  ", "\<\"The norm of the step size for \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0.20019565799330924`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.40039131598661903`\\\"}], \\\",\\\", \\\"2.9749592974193155`\\\", \\\",\
\\\", RowBox[{\\\"-\\\", \\\"3.2167529497065375`\\\"}], \\\",\\\", \
\\\"2.5216377267881617`*^-18\\\", \\\",\\\", \\\"0.3928633653928474`\\\", \
\\\",\\\", \\\"0.07108280370737415`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.33306317738992`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.09942353601810346`\\\"}], \\\",\\\", \\\"0.2751419337421112`\\\", \\\",\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) is \
\\!\\(\\*RowBox[{\\\"4.4911988069201785`\\\"}]\\) (> \\!\\(\\*RowBox[{\\\"2\\\
\"}]\\)); the search is likely to diverge.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"2ac28b40-8e6d-42d6-b926-b8f4e0c341fa"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ContinuationMethods`Private`corrector", "::", "step"}], 
   "MessageName"], " ", ":", 
  "  ", "\<\"The norm of the step size for \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0.20016648252951633`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.4003329650590327`\\\"}], \\\",\\\", \\\"2.8943945032508154`\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"3.1083369108593804`\\\"}], \\\",\\\", \
\\\"5.074028758877601`*^-19\\\", \\\",\\\", \\\"0.3589592975868855`\\\", \
\\\",\\\", \\\"0.06550028264696915`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.28456594061033047`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.1094445297321879`\\\"}], \\\",\\\", \\\"0.25754669768663047`\\\", \\\",\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) is \
\\!\\(\\*RowBox[{\\\"5.656191014696198`\\\"}]\\) (> \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\)); the search is likely to diverge.\"\>"}]], \
"Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"eb2fef9e-1e2a-4a98-b7c1-9559b2b95903"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \
\\!\\(\\*StyleBox[RowBox[{\\\"ContinuationMethods`Private`corrector\\\", \
\\\"::\\\", \\\"step\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"5ea4a0e3-9876-4c64-9769-bea608404b77"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ContinuationMethods`Private`corrector", "::", "cvmit"}], 
   "MessageName"], " ", ":", 
  "  ", "\<\"Failed to converge within \\!\\(\\*RowBox[{\\\"10\\\"}]\\) \
iterations; starting from \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0.20596842983274719`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.4119368596654945`\\\"}], \\\",\\\", \\\"2.7848838111587804`\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"2.959247581774381`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"7.466092991842987`*^-19\\\"}], \\\",\\\", \
\\\"0.304812175504524`\\\", \\\",\\\", \\\"0.05896717336634237`\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"0.20551252514680607`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.12997530356107317`\\\"}], \\\",\\\", \
\\\"0.22431020484328987`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) the final error was \
\\!\\(\\*RowBox[{\\\"0.00009942235419807667`\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"3a1d4972-d94d-4da4-9bdb-ea9b20362f4b"],

Cell[BoxData["\<\"tmon --- tree depth: 25 |M|: 26 |Q|: 1 t: 1372.00\
\[ThinSpace]s t/|M|: 52.78\[ThinSpace]s/pt\"\>"], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"cec23a49-5f32-47d9-b984-240b182171ea"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ContinuationMethods`Private`corrector", "::", "cvmit"}], 
   "MessageName"], " ", ":", 
  "  ", "\<\"Failed to converge within \\!\\(\\*RowBox[{\\\"10\\\"}]\\) \
iterations; starting from \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0.17223619739649215`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.3444723947929849`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.04872919382705`\\\"}], \\\",\\\", \\\"0.6842538227624241`\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"1.1675389561252285`*^-18\\\"}], \\\",\\\", \
\\\"0.15602519984598376`\\\", \\\",\\\", \\\"0.004955131356675564`\\\", \\\",\
\\\", RowBox[{\\\"-\\\", \\\"0.035948440334701307`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"0.048227697105611235`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.040175650804868825`\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) the final error was \
\\!\\(\\*RowBox[{\\\"0.002713387724782075`\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"63a0ada1-9e8f-4df9-b333-b199f90a48da"],

Cell[BoxData["\<\"tmon --- tree depth: 25 |M|: 26 |Q|: 1 t: 1966.00\
\[ThinSpace]s t/|M|: 75.60\[ThinSpace]s/pt\"\>"], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"f4096998-db07-45c0-8500-7e95ca9217f7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotGaitParameters", "[", 
  RowBox[{"M\[Sigma]", ",", " ", 
   RowBox[{"\"\<i\>\"", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<v\>\"", ",", " ", "\"\<\[Tau]\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[66]:=",ExpressionUUID->"634d0913-3ba9-41af-b145-aca3c4b5424e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJzt0/9TEgYABXDK2DBrU7xRR5zh1DNX6crKvj+6jllZ8/RK55V1mbnILMO6
MvUim0pqDa2Um3OuhlPRrbKaVivWEeVlKEKZYIbKFyGVAAERg2r7C/YH+O7e
vR/ez5/AlCPx+6cTCIS0j/13w/zIxvZeMVQVkvqq6mmMmDhqKqPgEQ7QKPxz
1GmMuraLhsB5T7DIk0sp9HKDcvwzm+h2G9pXjWZI703g+x1Dd/JoT5G9TVAW
WjMOpTthwazUdhSkWLe3FDhgm/NSNHjhGehey0IM6xzQZnqfzqiS4r7X4d0l
dQ4Y/bX+uZwO5PzmFIQ2jWMjt3jf2IpOfOfXaKf7TGBESPHNVHcitvixu4nq
Aj+XxzRuk6EnQ1MvjHZhZuGV5LKcLoi3M69zbzmx+Mrvr2hyOSo71V9bSxwo
XDNwLfhXBdTp7vRbKXaQ9L6eR/QXYPd+yxKUjkF33ofWZO8G4epwpKrDAr5/
6D23nxJf0CmfvNtsxpettY1FJ3shu+9Sh9hGEVw3XNWX/xrE1cruHtYwmPJk
e4V0AByJ1MPaaIAsiMcTSjWIuzoZ7EzSI+75X/LJcB2WkFPU5JU6XPPeWy4a
0MGzY793wA0tRtc+uxS7Wg+/sNMx3ZlapP0XPUiBwqjMOC0WrwoqTy7Xo4bp
PnV2qRbrzTUhZuPHX3BnOsmhAb/1l/i7lUMY0hnF4fkaVO+eMNRoDDiaZmQR
bw7ip4M/Umrr3yCi40n0huYB7Ik4wFLcHIHk88u3lzf0ozj7hz2MfhPeblHG
cHapsS4xjLO11IxvzgUQiRf7kBT/YLC/3gIB25we7uzFz0EPrtPFVizlzJrx
B1cF8oYbHpFyDFR2DJ8PJbjHyDsXjNjwqSNiM2FuDxSRzQ1Ulx32IuI+9uyX
mLNy7ZIzXuNo4bXHU2ndSE0bEiaRnIh6yIpoZbyAiavxCEkTSGiItZaefI4T
4+cvc2a4EL3l0CXmQwWyNY+ZhkkXipylbMNcBTalVmRZTJNgH7XdleTJQVK1
NDf1vYMquq7loKkLWXvzqxe2uSGwzS+oZHVh6xrn35w/PdgUGfnPCpMM3J3l
WSLee4i/oksScmRQlA1b86IIDG1A/6JgXxl8Gi1HagUEhiXx8IWniZ2Y8jLl
ZcrL//fyAa04Tq8=
      "], {{{}, {}, 
        TagBox[
         TooltipBox[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.011000000000000001`], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51}]}, "\"(0.70,0.63)\"", LabelStyle -> "TextStyling"], 
         Annotation[#, "(0.70,0.63)", "Tooltip"]& ]}, {
        TagBox[
         TooltipBox[{
           Directive[
            AbsoluteThickness[1.6], 
            GrayLevel[0], 
            PointSize[Small]], 
           
           PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
            17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
            33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
            49, 50, 51}]}, "\"(0.70,0.63)\"", LabelStyle -> "TextStyling"], 
         Annotation[#, "(0.70,0.63)", "Tooltip"]& ], {}}}], {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.11503581358657185`, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         StyleBox["\"\[Tau] (step duration)\"", StripOnInput -> False], 
         TraditionalForm], None}, {
        FormBox[
         StyleBox["\"v (avg. walking velocity)\"", StripOnInput -> False], 
         TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> Automatic, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.11503581358657185`, 2.080393671572329}, {
       0, 2.2019570527362307`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Prolog -> {
       PointSize[Large], 
       GrayLevel[0], 
       PointBox[{{0.7, 0.6349412047575536}}]}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"(0.70,0.63)\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[66]=",ExpressionUUID->"c0930e55-ffc9-4c6e-8b6d-ddf207242ce5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Detailed Slices", \
"Section",ExpressionUUID->"3c29b84b-ba3b-4fb8-864d-788baba488b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"round", "[", 
    RowBox[{"v_", ",", " ", "h0_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", " ", "p"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p", " ", "=", " ", 
       RowBox[{
        RowBox[{"Ceiling", "[", 
         RowBox[{"v", ",", " ", "h0"}], "]"}], " ", "-", " ", "v"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"m", " ", "=", " ", 
       RowBox[{"v", " ", "-", " ", 
        RowBox[{"Floor", "[", 
         RowBox[{"v", ",", " ", "h0"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"-", "1"}], "}"}], " ", "->", " ", "m"}], ",", " ", 
        RowBox[{
         RowBox[{"{", "1", "}"}], " ", "->", " ", "p"}]}], "|>"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellLabel->"In[67]:=",ExpressionUUID->"ce68ab20-3802-4614-b735-43a173ea3b0c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MinMax", "@", 
   RowBox[{"Mv", "\[LeftDoubleBracket]", 
    RowBox[{
    "All", ",", " ", "\"\<c\>\"", ",", " ", "1", ",", " ", "\[Sigma]i"}], 
    "\[RightDoubleBracket]"}]}], "/", "Degree"}], "\[IndentingNewLine]", 
 RowBox[{"MinMax", "@", 
  RowBox[{"M\[Sigma]", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", " ", "\"\<c\>\"", ",", " ", "1", ",", " ", "vi"}], 
   "\[RightDoubleBracket]"}]}]}], "Input",
 CellLabel->"In[68]:=",ExpressionUUID->"24728051-e5c7-40eb-b340-eba595546196"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "189.8975472772834`"}], ",", "15.348876898700166`"}], 
  "}"}]], "Output",
 CellLabel->"Out[68]=",ExpressionUUID->"4055ea6b-03eb-4126-8749-6626c50dc7fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1551451576270975`", ",", "2.080393671572329`"}], "}"}]], "Output",
 CellLabel->"Out[69]=",ExpressionUUID->"c6d214d5-9601-4723-9fa9-1124bfb3900c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"m\[Sigma]", " ", "=", " ", "10"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "#", " ", "points", " ", "between", " ", "a", " ", "unit", " ", "of", " ", 
    "\[Sigma]"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mv", " ", "=", " ", "1000"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "#", " ", "points", " ", "between", " ", "a", " ", "unit", " ", "of", " ", 
    "v"}], " ", "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"i", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[Sigma]i", ",", " ", "\[Sigma]i", ",", " ", "vi", ",", " ", "vi"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", " ", "=", " ", 
   RowBox[{"round", "[", 
    RowBox[{
     RowBox[{"cv", "[", 
      RowBox[{"[", "\[Sigma]i", "]"}], "]"}], ",", " ", 
     RowBox[{"1.0", " ", 
      RowBox[{"Degree", "/", "m\[Sigma]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"h", ",", " ", "h", ",", " ", 
      RowBox[{"<|", "|>"}], ",", " ", 
      RowBox[{"<|", "|>"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "cv", ",", " ", "cv", ",", " ", "c\[Sigma]", ",", " ", "c\[Sigma]"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h0", " ", "=", 
   RowBox[{"N", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Degree", "/", "m\[Sigma]"}], ",", " ", 
      RowBox[{"Degree", "/", "m\[Sigma]"}], ",", " ", 
      RowBox[{"1", "/", "mv"}], ",", " ", 
      RowBox[{"1", "/", "mv"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<v\>\"", ",", " ", "\"\<v\>\"", ",", " ", "\"\<\[Sigma]\>\"", ",", 
      " ", "\"\<\[Sigma]\>\""}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m\[Sigma]", "/", "Degree"}], ",", " ", 
     RowBox[{"m\[Sigma]", "/", "Degree"}], ",", " ", "mv", ",", " ", "mv"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", " ", "=", " ", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
        "cv", "\[LeftDoubleBracket]", "\[Sigma]i", "\[RightDoubleBracket]"}], 
        "+", 
        RowBox[{"220", " ", "Degree"}]}], ",", " ", 
       RowBox[{
        RowBox[{"16", "Degree"}], " ", "-", " ", 
        RowBox[{
        "cv", "\[LeftDoubleBracket]", "\[Sigma]i", 
         "\[RightDoubleBracket]"}]}], ",", " ", 
       RowBox[{
       "c\[Sigma]", "\[LeftDoubleBracket]", "vi", "\[RightDoubleBracket]"}], 
       ",", " ", 
       RowBox[{"3", "-", 
        RowBox[{
        "c\[Sigma]", "\[LeftDoubleBracket]", "vi", 
         "\[RightDoubleBracket]"}]}]}], "}"}], " ", "m"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "Negative", ",", " ", "Positive", ",", " ", "Negative", ",", " ", 
     "Positive"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<g1_f_v_0.7_n\>\"", ",", " ", "\"\<g1_f_v_0.7_p\>\"", ",", " ", 
     "\"\<g1_f_\[Sigma]_0_n\>\"", ",", " ", "\"\<g1_f_\[Sigma]_0_p\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seed2", " ", "=", " ", 
   RowBox[{"MapThread", "[", 
    RowBox[{"List", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "i", ",", " ", "h", ",", " ", "c", ",", "h0", ",", " ", "f", ",", " ", 
       "m", ",", " ", "d", ",", " ", "file"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M2", " ", "=", " ", 
    RowBox[{"finecurve", "[", "seed2", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mvf", " ", "=", " ", 
   RowBox[{"Join", "@@", 
    RowBox[{"M2", "\[LeftDoubleBracket]", 
     RowBox[{"1", ";;", "2"}], "\[RightDoubleBracket]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M\[Sigma]f", " ", "=", " ", 
   RowBox[{"Join", "@@", 
    RowBox[{"M2", "\[LeftDoubleBracket]", 
     RowBox[{"3", ";;", "4"}], "\[RightDoubleBracket]"}]}]}], ";"}]}], "Input",
 CellLabel->"In[70]:=",ExpressionUUID->"69fe223a-f5d5-4a39-991e-58bd2741a863"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"c: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.03105251575495737`", ",", 
     RowBox[{"-", "0.9324001746726582`"}], ",", "0.8171914888102924`", ",", 
     RowBox[{"-", "1.8923553472243022`"}], ",", 
     RowBox[{"-", "0.43514757158137174`"}], ",", "0.7`", ",", 
     RowBox[{"-", "1.2948878259047715`*^-33"}], ",", 
     "5.455029601375074`*^-18", ",", 
     RowBox[{"-", "1.6619901193997144`*^-19"}], ",", 
     RowBox[{"-", "2.6302739484573732`*^-18"}], ",", "0.`", ",", 
     "1.2842718516941118`"}], "}"}]}],
  SequenceForm[
  "c: ", {0.03105251575495737, -0.9324001746726582, 
   0.8171914888102924, -1.8923553472243022`, -0.43514757158137174`, 
   0.7, -1.2948878259047715`*^-33, 
   5.455029601375074*^-18, -1.6619901193997144`*^-19, \
-2.6302739484573732`*^-18, 0., 1.2842718516941118`}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"4f1c0227-2a75-4cf8-b45b-2a3a4780b531"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"c: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.03105251575495737`", ",", 
     RowBox[{"-", "0.9324001746726582`"}], ",", "0.8171914888102924`", ",", 
     RowBox[{"-", "1.8923553472243022`"}], ",", 
     RowBox[{"-", "0.43514757158137174`"}], ",", "0.7`", ",", 
     RowBox[{"-", "1.2948878259047715`*^-33"}], ",", 
     "5.455029601375074`*^-18", ",", 
     RowBox[{"-", "1.6619901193997144`*^-19"}], ",", 
     RowBox[{"-", "2.6302739484573732`*^-18"}], ",", "0.`", ",", 
     "1.2842718516941118`"}], "}"}]}],
  SequenceForm[
  "c: ", {0.03105251575495737, -0.9324001746726582, 
   0.8171914888102924, -1.8923553472243022`, -0.43514757158137174`, 
   0.7, -1.2948878259047715`*^-33, 
   5.455029601375074*^-18, -1.6619901193997144`*^-19, \
-2.6302739484573732`*^-18, 0., 1.2842718516941118`}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"804155d2-dd1d-4ab8-99a7-8b03503f177a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"c: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.2241004718292953`", ",", 
     RowBox[{"-", "0.4482009436585906`"}], ",", "4.155036555355064`", ",", 
     RowBox[{"-", "4.648146895143267`"}], ",", "0.`", ",", "0.7`", ",", 
     "0.19048727777068006`", ",", 
     RowBox[{"-", "0.8609772551063415`"}], ",", 
     RowBox[{"-", "0.07966046943210067`"}], ",", "0.47225922824868327`", ",", 
     "0.`", ",", "0.6349412047575536`"}], "}"}]}],
  SequenceForm[
  "c: ", {0.2241004718292953, -0.4482009436585906, 
   4.155036555355064, -4.648146895143267, 0., 0.7, 
   0.19048727777068006`, -0.8609772551063415, -0.07966046943210067, 
   0.47225922824868327`, 0., 0.6349412047575536}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 2)",ExpressionUUID->"e513cab8-1c90-4612-9512-5128c4921c34"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"c: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.2241004718292953`", ",", 
     RowBox[{"-", "0.4482009436585906`"}], ",", "4.155036555355064`", ",", 
     RowBox[{"-", "4.648146895143267`"}], ",", "0.`", ",", "0.7`", ",", 
     "0.19048727777068006`", ",", 
     RowBox[{"-", "0.8609772551063415`"}], ",", 
     RowBox[{"-", "0.07966046943210067`"}], ",", "0.47225922824868327`", ",", 
     "0.`", ",", "0.6349412047575536`"}], "}"}]}],
  SequenceForm[
  "c: ", {0.2241004718292953, -0.4482009436585906, 
   4.155036555355064, -4.648146895143267, 0., 0.7, 
   0.19048727777068006`, -0.8609772551063415, -0.07966046943210067, 
   0.47225922824868327`, 0., 0.6349412047575536}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 1)",ExpressionUUID->"f553d09b-028f-417d-b04c-9bff421add44"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"writing to: \"\>", 
   "\[InvisibleSpace]", "\<\"csv\\\\g1_f_v_0.7_n_Z_F_2_Z.csv\"\>"}],
  SequenceForm["writing to: ", "csv\\g1_f_v_0.7_n_Z_F_2_Z.csv"],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"0a13a6a3-cf91-4081-94e9-af1fe3b306df"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"writing to: \"\>", 
   "\[InvisibleSpace]", "\<\"csv\\\\g1_f_v_0.7_p_Z_F_2_Z.csv\"\>"}],
  SequenceForm["writing to: ", "csv\\g1_f_v_0.7_p_Z_F_2_Z.csv"],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"539ba807-2ddf-41ba-abae-9a22a551c944"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"writing to: \"\>", 
   "\[InvisibleSpace]", "\<\"csv\\\\g1_f_\[Sigma]_0_n_Z_F_2_Z.csv\"\>"}],
  SequenceForm["writing to: ", "csv\\g1_f_\[Sigma]_0_n_Z_F_2_Z.csv"],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 2)",ExpressionUUID->"f7108bb4-4bb8-4baa-b34e-fd73116aacf8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"writing to: \"\>", 
   "\[InvisibleSpace]", "\<\"csv\\\\g1_f_\[Sigma]_0_p_Z_F_2_Z.csv\"\>"}],
  SequenceForm["writing to: ", "csv\\g1_f_\[Sigma]_0_p_Z_F_2_Z.csv"],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2dacc1dd-3fbd-4988-afac-bc6be96a5ff1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"9532d8bb-40ed-4992-bf98-027e1bca1931"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"19f336ec-c279-453b-a74c-02b8a1096a4f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"9725ba53-a4fa-4d0c-b8ad-18dbba67be01"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"OptionValue\\\", \
\\\"::\\\", \\\"nodef\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"359f6efd-27c3-4387-9cd2-b06c51960625"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"5e3e531a-a963-4bed-8bbc-4eaf42cbcbf6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"12a68443-ca5e-4f12-89de-0a3db1444197"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"6b67ef85-7702-4c58-b0ef-a84e9a088122"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"OptionValue\\\", \
\\\"::\\\", \\\"nodef\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"9ddd0262-b3ea-4c4c-a826-7e44bc9863a6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 2)",ExpressionUUID->"6981360a-11e3-4b03-bdf7-7ca8cd8d8b6b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 2)",ExpressionUUID->"032485c5-5042-4bc1-980c-f60cd8c52e33"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2f9e48db-b3b4-4421-8cf9-c5d47a3f41b1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 2)",ExpressionUUID->"cc1f6ac5-dbe4-43ce-8514-e67b629f9af5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 1)",ExpressionUUID->"5a106687-8581-481f-a816-4ce8960298f1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"OptionValue\\\", \
\\\"::\\\", \\\"nodef\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 2)",ExpressionUUID->"80b75763-52a9-4d0b-b4a6-505137845d6c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], " ", ":", 
  "  ", "\<\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"max\\\\\\\"\\\"}]\\) \
for \\!\\(\\*RowBox[{\\\"cmnat\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c2afa0dc-45f2-4890-93a2-f14ecb3a60ee"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"OptionValue\\\", \
\\\"::\\\", \\\"nodef\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2f2f47e9-a9f8-4c47-9567-8ac4c68eec03"],

Cell[BoxData["\<\"tmon --- tree depth: 409 |M|: 410 |Q|: 1 t: 12840.00\
\[ThinSpace]s t/|M|: 31.32\[ThinSpace]s/pt\"\>"], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 3)",ExpressionUUID->"588e1281-4465-46b1-b052-7c9eb321781a"],

Cell[BoxData["\<\"tmon --- tree depth: 700 |M|: 701 |Q|: 1 t: 18950.00\
\[ThinSpace]s t/|M|: 27.03\[ThinSpace]s/pt\"\>"], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 2)",ExpressionUUID->"4b8d5ada-3d85-458a-b573-95ddfb9f308a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ContinuationMethods`Private`corrector", "::", "cvmit"}], 
   "MessageName"], " ", ":", 
  "  ", "\<\"Failed to converge within \\!\\(\\*RowBox[{\\\"30\\\"}]\\) \
iterations; starting from \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\
\", \\\"3.0641806154913223`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.0205073851858104`\\\"}], \\\",\\\", \\\"10.389454170511899`\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"10.711349844585992`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"3.576179637336222`\\\"}], \\\",\\\", \\\"0.7`\\\", \
\\\",\\\", \\\"1.3867933332949285`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.2561472776445382`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.35881011849016403`\\\"}], \\\",\\\", \\\"1.0343826154594264`\\\", \\\",\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) the final error was \
\\!\\(\\*RowBox[{\\\"0.0032257409610087096`\\\"}]\\).\"\>"}]], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"a132333b-dec8-46e9-9a6a-e6f6fb806318"],

Cell[BoxData["\<\"tmon --- tree depth: 1801 |M|: 1801 |Q|: 0 t: 36260.00\
\[ThinSpace]s t/|M|: 20.14\[ThinSpace]s/pt\"\>"], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"b2122664-7b0f-4e4e-83f5-fa24a29f72c1"],

Cell[BoxData["\<\"tmon --- tree depth: 2300 |M|: 2301 |Q|: 1 t: 40740.00\
\[ThinSpace]s t/|M|: 17.71\[ThinSpace]s/pt\"\>"], "Print",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7cd3a4d7-532c-414f-a1d1-f2d4e0e7825a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotGaitParameters", "[", 
  RowBox[{"M2", ",", " ", 
   RowBox[{"\"\<i\>\"", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Sigma]\>\"", ",", " ", "\"\<v\>\"", ",", " ", "\"\<\[Tau]\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[86]:=",ExpressionUUID->"25998d48-0d0d-4dcc-baf0-b178831f4bdc"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{{{{
        TagBox[
         TooltipBox[
          TagBox[{
            Directive[
             RGBColor[0.3315753, 0.4561011, 0.6388182], 
             AbsoluteThickness[2]], 
            Line3DBox[CompressedData["
1:eJxM3XlcTWsXB/C9N2UqopKUkqEMIUU08DxEpjIliogiIYWQMkQpJEMyVSgh
U6QylJCxDCnJlClEphI6Ow1nePdZu/euc/95P/v76dOq85y1f/vcu1aviVfA
1AUcwzAtWzBMM+F/3Q/GCf8suukD/1SQlpmprQ+71BLTBcLlfvT9xvay8om1
pGaglZVVLHqnZ8NMpeNryU25QqHYhZ5r+dB+5ZhasuNRQUFBNPq73f/iTEfV
kpnKutvQX+/0dWNH1BIzZd1I9KFXWs5rGFZLJMq64ejTgtp6tbGrJbeUdUPR
S4+tMbAYWkt2KuuuQ09ZuDdqweBaMktZNxhdP3tW0GnLWtJLWXc1+sTBTwY2
DKglvLJuILrRup++0/vVktvKugHol/4aaV3vU0t2Kev6ofvY7XLu16uWeCjr
LkL3/pe/NKVnLemtrOuDLmdlr82615JaZV1v9LbVqR3Tu9aSO8q6nujvL1Vc
HGFUS3Yr63qg/9192a3UoJbMVtZ1R3fWWJgepF9L+ijrTkdfuHD2GkO9WvJP
WdcFPX/zooB8nVpyV1l3EnoPvaWeazrUkhhlXSd0i6jRegO0askcZd1x6CcP
fF/8U7OW9FXWdUSPdkqzPNemltQp6zqgs20yxq9sVUvuKesS9O5aU/fQFrVk
j7KuvYpH3P/ZXq2WeCrr2qB/simw+8bVEnNlXWv0UHbUojtMLalX1rVS+TlJ
89nH5DzJU9YdgF52Zx+7VcqTWGVdc/TVs5s7LG/gyVxl3d7oXFVmW886nvRT
1jVFn/3D1mVKLU8alHW7o8dtH8GMlfAkX1nXGP1h6Xx1h7882ausa4h+qFuX
GSN/82Sesq4++rIJJz+P/sWT/sq6HdHNkn4fda7kSaOyrja604PNYe4/eHJf
Wbcd+v1D60MWfePJPmVdDfReMSs3rK/giZeybit027hV4fs+82SAsq46egOp
2ZD+iSdSZd1m6Jqvc3yKP/DkgbKuwvc/35FWbcG/58l+ZV0p+lX5vxLDdzzx
VtatR5+bu8Fx7BueWCjr1qIXdFgYGlTKE5mybg268fi8VWde8uSRsm41+v6g
d10/PufJQWXdSvQlq7XXGDzjyQJl3e/ovb2qV7g/5Ymlsm4Fehd/7VYJT3ii
UNYtR9+sM9TyQyFPCpR1y9AT95tV9HrMkzhl3bfo7W9lG656xBMfZd1S9Ct/
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
jRnb5vkpyCnoX/Tg1XRuha+CjIT+VXl9wjL6Ll6gIG+hf9HdhiX8rJynIKuh
f9GfF0Yn+s9REC24Rm9b1WlM9UwFOQP9i777zZOP/jMUZBT0L3rE4tEBVS4K
8h76Fz2XV69ePFlB1kD/on/1PjH3q5OCdFBeOqLv73nhjtc4BUmF/lX5fQdd
1ns3WkEcoX/RAzo4ekwfqSAfoH/Rd96v2l04XEFCoH/R51bYXhptpyA6yktT
9J8br97PGaIgadC/6MUD6x9aDFKQcdC/6H4dw3OOWyhIOfQvemFheZxePwVZ
D/2Lrrk+ZcG23gqip7xUV3lf3XU1auipIOnQv1P/89H5a+8s6qYgE6B/0Q/1
Sp72ykhBvkD/oue3nFo82kBBQqF/0ePVdGwy9BREHy7RF9os295FR0EyoX/R
621+5W/RUhBn6F/0y3q6v35rKMhX6F/0JI8lMrdWCrIJ+hd9TZsgPldNQQyU
l3noT49cf96TU5BL0L/omi3vHo6Sy8kk6F/0yPNtnX81yMl36F/0rf4m5ZP/
yUk49C96yMFQz4waOemivExBf1N99laH33JyBfoXfeSZXq1WVMrJFOhf9AT/
oMFPvsnJT+hf9BbT9B37fZGTCOhf9JoPO223fZQTY+VlJLpFa7cOn9/JSTb0
L3ozS0nBsNdy4gL9i25k9mnR/hdy8gv6F/1U96RvVU/lZCv0L7pHwdmxo4rk
pBtco28fELYt7pGcXIP+Rde+m3imKl9OpkP/oof5bjxL78rJb+hfdC2vxO17
bspJFPQv+rFZQePLr8lJD+WlI/q7+WFfLbPl5Ab0L7rJHxuvTZfkxA36Fz3i
Rcerhely8hf6F51zjvnV+bycREP/qvy+VV0VC87Iiany0hS9/QX7n2kpcnIT
+hd9V+XMjLpkOZkJ/Yuu4fbHhSbKiQT6Fz2x+aqiyAQ52Qn9i24/d2aPggNy
0kt5qY5+1kp3qtZeObkN/TvlP4872snNZbeceED/ou/s+XLwvmg5qYX+Rf+1
5/aP51vlZDf0Lzqv7bRaN0JO+sAl+o1en1+6bJKTu9C/6INSGtrGrJeTOdC/
6IaX5J0fB8tJHfQvukbxnMYWq+UkFvoX3St/a9qIFXLST3mZh25z+bt1iL+c
5EP/ooe1+bU7fbGczIP+RX8Vzl7/6iMnjdC/6Am9d1019JaTfdC/6Ldd2G2T
PeVkgPIyBV16/JZZ+Cw5eQD9i76rtc3+izPkxBv6F31GTlHJZxc5kUH/op+3
rirTniwnB6B/0Vc61GWPcJKTgcrLSHS2evo8/7Fy8gj6F1072v953Cg5WQD9
i56Vfkz3LpUTBfQvuqvtTJMqezmJg/5F3zGS/6djIydWcI3et9fLg3aD5eQx
9C/6gG3zms0bKCcLoX/R94zkrSP6yQkLMYg+M+Cv5anecpIA/YsetDCr9kFP
ORmsvHREP3bjxKYfJnJSBP2r8v0dOpW0MpKTRdC/6Ivlfj/MOstJM2VdK/RO
Fkz+qI5ychj6V+V1m9LPd24HORmivDRF76816XFIWzl5Cv2LfnRKLh/bWk78
oH9V+qXfyw9n1eVEXVlWG/3y7187bnNykgT9i35Gb470pfL/f0F5qY6+Zsra
vpUNMvIM+ncy5uy6Q50VtTLiD/2LPjGl4wOtGhlpqaxbg7601XBrk2oZSYb+
RXfW9Jln8VNG7OES/cyoj+OGf5WRF9C/6Ov92Orx5TKyDPoXvWSx3uTpZTLS
Wlm3BD3POdBv7hsZOQ79i241fr7DopcyMlx5mYd+4+rQZ8tKZOQV9C/6ZqPh
RkFFMrIC+he9S6dbXdc9khENZd1M9El+mm9C82UkBfoXXcr4O4XdkRGqvExB
l7wxXxmeKyOvoX/Rb5vETgnPkZGV0L/oUTrfyzddkZG2yrqx6E86rO4Tmikj
p6B/0Wfv39hjbZqMjFReRqJXW04sXnVWRt5C/6Kb7+tuEXBSRoKgf1V+r02j
6MJjMtJeWTcQvcPTGmZOooychf5VqRsUuNwlQUZGwzV6n1XNY8YckJEy6F+V
c/lUMcc2VkaCoX/RX1e4v+67S0a0oX/R7+YkcIbbZeQc9C/6vVPfX7TeIiNj
lJeO6DubbZxeFyYjH6F/0Zf0j9/4eYOMrIX+Rdc9sGJaUYiM6EL/os+/NLI4
a7WMpEH/ords7VCbtEJGxikvTdFndDl7e4u/jJRD/6J/Xp8+eOliGVkP/Ys+
N3f7xCk+MqIH/YtuF+yvMchLRtKhf1W+/+gd/rpzZGSC8lJd5fW50Xkl7y4j
D6F/J/3nCzaONXzmKhPvwzXoud3H+KRPkYn32wr0lcRxyg5nmXhfLUXv4bPy
7cJxMvH+WYDO91CojxgtE++TueiU037SaYRMvB9mok9b98a62l4m3vdS0Otb
hNveHSojS+D9j27Szur1gUEykgjvc/QN1dq6iy1kpATez+gT6p1+2JrLSAt4
36KfXdrcvXUvGbGDa/SA9Z5zX3WXkQB4H6KnjQlTHDduup84oTu82jV4mUHT
fYOgB5meYW31mu4PVuh7tP96cdpN9wFT9CWLtrg9aNvU7/ro315t/bizdVNf
a6An1WnLpqo39a9iIj4HOow+o8vJiBbch9H3dRz67YVMSkbBJbpmuvrl/fVS
sgbOF33UwIcdXHkpSYXzRWf3xsva/5GSD3C+6Ncydq56XCklOnC+6GNHXgve
8k1KxsL5omsVD2lFP0vF938c+uV7Ot3/lUnF93k0+vbZC/JS30jJFzhf9LIz
tn/nvpQSfThfld839vgJ7RIpcYZrdJ+i9LK7hVKyCc4XfWNFQOLKh1JyCc4X
PWvAz/JueVLyHc4XvVNR/9SiW1LSBc4X3eTiqH8h16VkCpwvuuXBwXd7ZEtJ
BJwvukLassPji1KSDeeLfr7PvbLAC1JSBefrjO/P/gHm+qlS0g3OF/3Mq9b/
rp2UkulwiW6dEz/c85iURMH5olebdeWYRCm5AeeLfr5/Ak2Ml5K/cL7ohQmt
6+33S4kpnC/6iNolfUpjpGQmnC/6r/U5JYE7pGQnnC/6i96SGo1tUnIbzhfd
K6Vd1PHNUlIL54se5aK+z3ajlPSB80WXjyzSLlorJXPgGn2l9Vw1ryAp2QPn
i37x8DnfmhVSkg/ni35v7xn7cH8paYTzRe/yaezG9oulZACcr8rrI1ljeWSB
lHjD+aK3+9R7au95UnIAzhd97/xx7zM8pATGwDXQZ5XeeW7rJiVwvAon7N/h
m4fccpESKFuDHmSxknOcJCUL4RJ9y/e1gx+Ml5IEOF/0KcPDisY7SkkRnC/6
9kN+RQ9HSEkzRvjnJnplS+NB44ZJyRA4X/RGw3XSe0OlZAmcL/pgtQVmIwZJ
SRKcL/q9DdmZVwdISQmcL/qh5zOSLPtKibqy7kZ0m0+GladMpcQGzlfl61t8
3telm5T4wTW63sAth3Z3kZJEOF/0gU/ey1n9prpO6H6vb+Us12mqS9FN8tWe
lrVrqmuFTndsoE5tmuqaonc6Kle7ot5UVx+989/pJl25proa6FHfpsdskTWK
dRn0Ud4F06rqGsW6NRP+c+9L4YunSBrFuhXoVcfGFGdWN4p1S9FDvD9u0fnZ
SJ7C+aIX7eu0I7Ciqe5N9K1jMsuefGyqm4meWLVqg/m7prop6C29u/tGvmqq
G4fev2JdwvuSprrR6JEdR+oNLmqquxFd86/F620Pm+oGop96qlb+9l5TXR/0
wiVrLfrfaqrrjn4hf/yt9dea6jqhvxvVd++jK41EDc4XfXPs05N6mU11rdCf
ZEga5p1vqmuK7vjLIfrM6aa6+uh6b5bN/HO8qa4G+lTXPvOtk5rqMugj1nc5
FZzw//Md/5/HXuR75Oz///mi703wKG2I+f/5ok9r23Bn6I7/ny96ucnK8pVb
m+reRJ9uEmCdFt5IhsL5ov+O2pHzdcP/zxe9u+ay5UYh/z9f9JzwS9NdVv3/
fNGvShoWRS5rqrsR3XfHm9NXljTVDUQfl/hb56vP/88Xvfnh4tM6Xv8/X/Sh
ejoL6ez/ny/65uwJExa7/f980fuPae26x6WprhW69EBZWNbERvF+ZYrecZ97
ydtx/z9f9EODm49WjPr/+aIvW7vohTH9//mivwloHzncrqluzTh8Pu8aNnWW
dVPdCvSIeGK7emAjOQLniy7//shul/n/zxc9Qfuka4rZ/88X/ViHSZE53f5/
vugdn5OCwi5NdVPQjYbW9PzQqaluHPqK5h9jqrX/f77oWT82tJW1/f/5or8I
pfEtW///fNGJzQGrDmpNdX3QDRb9faXPNNV1Rz9um7vVuLGBFMP5opud9x3R
vbah6XzRJ+6bwfb809B0vuiau/7m9ahsaDpf9DfNjuzu9rVBrKuPvs3kmofR
p6a6GuhzX6b27vSuqS6DXlP8mG/3qqluzdj/vEVQSK5aSVPdCvTgj20i6h83
1S1F//P21aif95vqFqDf+ThY9vpOA2kO54u+UWtV6v0bTXUz0a/1q5h8Mbup
bgp6wuEX3w5fbKobh+7vGbMiIq2pbjT6kFaelYvPNNXdiK5/J2LaxBNNdQPR
n/+vKTuPinn/4zg+hUoiStJFSt1BUr+EK8m0IDEk6o4KWWpEEbJUrow9FT9S
KFJSKlsYsiQtRMh2VW4kS5S4KTVb9cPvnJn3p1f/Po7Tc97z+taZ4uyWbZ1K
XSHc7P6Xz32OUdcb3l0/u9+/CWxfuMGKQtP7B6jrCM/bvdIwNaZd9XnDFr4w
paZ54262b5f3R+BxbuY2ti/8dYHE1fgvtm+XrzNHUfRtI3U58GG1UQPz11K3
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
6V64r15cg7ZCqnpuhXCzlBP+0c1Suhde/vqSbo8GKd0L5xqdr414L+UlKe+F
j5y4uOprFXU5cL+IvQ2Cv6lbN6nTC8ZU6BQ8lPIeK++FP0l+Y296h7pieFGS
RUhknpTuhT8MsUmpFLN74YYxnndHnpPSvnAdl9rKTensXrhvgtHTwuNSep7h
9R+HZnRPoK4RvCVX28NlH7sXnrr61cO/dlG3zr7TGzQ3a1/aQt0yeMezO5rv
NrB74ZnDNt3suZrdCw81dP7NSsju7fLvnW4Zz1rE9oXX+C0vEP7J7oWH9c1p
jZjN9oVf2/H58t5p7F74Rsu5krjJ7F54doh+zuHxbN+JnT577qRX8VbsXvhg
bknwPi67F541dv9CkTE9V4lwgxV+p1YNYPfC/RX1Y736sHvhrZq3tf7QoOeK
D8+fu8hA/6eE7oWXlo3yaJBK6HmGa08NuXyjUcJTnsuBp/UQWO/8JKF77fD8
rJPlT38joecZzs+Y6qlZQV0xvK+26eeCMuomwotl00PW3aWuCL7YZclb41vU
FcLHv20eXSKmLh8u8F8yJ+CsRPX/1LbwIdk/7X+lsXvhZ91ln+KS2L3w95UC
F5M4Ce9AgLFfyrcJeA5tzNIXx0p4/wdBHXbk
             "]]}, Annotation[#, "Charting`Private`Tag$12120#1"]& ], 
          "\"(-24.93,0.70,1.28)\"", LabelStyle -> "TextStyling"], 
         Annotation[#, "(-24.93,0.70,1.28)", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{
            Directive[
             RGBColor[0.7926498, 0.5499369, 0.1278459], 
             AbsoluteThickness[2]], 
            Line3DBox[CompressedData["
1:eJxN2Xk8VfkbwHHboCJShCJLsqQoof1RU1GoiDJNSgrti0Q0RZmypD3a06Jo
00KlUqRNUk1jSpGyc113R8yIn773fL/P7/7T63m/et3PeXSde87JNHC9d5CS
goLCCUUFBeWePw8EGS9JFY7NDyavetg0yjwtIKkF5CO6l5POzPSEFnhT/POF
/u+yVr7ljhZw+PnKQvf477bJ+S0tcOL4zxe6s2FZue6GFlD4+YpBPxrxuV9s
CNcNRq+d3nWXt5jreqBX39yUN3M+13VAP+03dcgFzxYgWQN0k6I5Ra3TuK4C
un+rf/aUiXRfZ+YvzvZ+v9uhBci6xegZn9/2f25D90X3C+xa32nKdY+jWxm9
/GRr0ALdP1/R6FfC7KfM16b7ouflG57aosZ1PdBlGZO/HO6Scfuih8fatqS3
yrh90dVuuX/MbpbJu91OzM+1fg57UCPj9kXPftP0JKdMxu2LbpEffOPGexmM
Jvuin7nW2y61kOseR1+sFzI6Lo/rRqNvWv3tSshdGQSRGb2f2+UEl+tc1wNd
7e7rvH5pXNcBfesK48nlJ+i+6Ctlbq2nDtJ9HZl3dT35MD+e69ajV4S/face
TfdFf5MdU3J7M90X3Sr93l8+a2RwjITRL0iN7gkD6b7ogVrW4TG/0X3RzZfq
/+g1Vwavyb7oz2e1jN8zg+6LvnTiXmOVSVzXAP1wblRKmIMMukh4DPPeawwP
frGm+6K3K+/vnGDCdYvRn8/Oe3FIj+6LLjH0rajUoPuij7bKHTFMmetGo6/u
a3oxsEPK7YsebLzBPkUk5fZFd5nok5tfJ4VRZF/0qVmOjtXlUm5f9HqlcXH/
vpdy+zow739x0plehVJYTkZ02zdfgrQec91i9LdDVrzqk811s9BHLWvM6rrM
dY+jJ1sO1m5M5brR6CorwgtfJnPdYHSemdHL03vovuiqTQ2tK3fQfdGnrlo8
2TZCCkfJvugTm+4m1K6h+45mrpD/T/6hQLov+rRHM4qd/KRQRPZF9zo0/chf
nnRf9K3DbisE/Mp1j6P3aujfUTtWCj/IvugT+hxdvmQk3Rf945veNu/Mua7H
/3VPfrMbY0D3RS8dY7FoX1+6L/qal/FHKpS5bvco5nrfvR+bdki4fdFDK4Ie
LxRKuH3RI/4bHxlfIwF7si/6LOOqv698knD7ous7/Zv55I2E2xfdZsh9cXGB
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
             "]]}, Annotation[#, "Charting`Private`Tag$12120#2"]& ], 
          "\"(-24.93,0.70,1.28)\"", LabelStyle -> "TextStyling"], 
         Annotation[#, "(-24.93,0.70,1.28)", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{
            Directive[
             RGBColor[0.5041629000000001, 0.6224121, 0.1753965], 
             AbsoluteThickness[2]], 
            Line3DBox[CompressedData["
1:eJxFm3dczd8fx7s3o1QaWtpoR9p1b1fvDyENyU5WErKSFCEJSZQkO6uBBhFa
t04aUrT33t1722nv+N17/L7cP77fh/P4PM76nPN6PV+nz1nicGrLITIXF1ca
+z/c7P/PfnwQs/PlBlRX/XMTOSMXTdRrpLxUIRHmniOl+W/SUmVeDJZtdLAB
Na/W9QXs8kSDy0rFaMSY/xWn3B7kLrsbCaqSCN0Q02eWn1uMF5w/htzuOcEt
VbdiL3Y52XM1V+yT/NQ5kZznXWAk3kpEWo1EcPuHC2kpDKRcE35v1nrBDeQe
/OZlsMs/ftfeHaQwZkz25NTjAQf8BbJq1UlEeiwtZvknlvEVlrI2zztP8Ohz
2jCjQSKE6HnJdTNvjb2jOPV7w7K5jrGWK0jE75F5ZbIOlikZjZtuP3K+Crpp
T7m/a5IItzFvXQjRNuZaxGnXBw5EN+0/rUUiLuywyfS6X0ElNvCTNW74wv18
wVozHRIh4bs9wGZ8NdX7Eqc/fnDz0Fw/Sz0SMS31LLj00yw149P3s19e3oKY
FocbngYk4jhf5aGUsIMpXJ2cfgaAG9l5uM6IRIhnqWQsSRmjErLXezYnB8Lb
b01dh41JBGSeMi2/xUMjojn9D4LO09E3FUxIhGWmJ0t61ydqy1eFOFenuxD1
LGto/moSUVd+W3JoJJDq3cQZVzA8dWtYJ7uWRFzmTr1KvfadqjDpxekoXMmV
eWVvxp5nwVophv0tagYe732gbc3XLLMgEa/oLQdrPSDFXrNRcd6VB3Du3Pg8
V2sSoRdnQUuXqEnlMufMw0MQaRbdSGwhEaHhNpsUtkcZhx40bma3DCrKgQqr
dpAI22VHBhJcHYwJ3OxjCCiyeulkRyL2ju8vDpWYl9Ly+AnnB9LP9JlZ+0hE
COvCXnReg+r9mTNvIZBz9DGf1UES4R50zaPCLipVoWh8a/vrp3D3QbDqHCcS
IRp+yNPdTI+agefzGZi1OVj3nCARbyKPbEt/rEK1596xcMWn5zDTHXuL5Eoi
Dq1Kj9aab5jCJceZ5xfwpfEjc/05EiF4XOCVi8cMJdQontMwzN53OpDqSSIC
Un7t1F5HpITi+Q+FHcUPJ/ZdJRHPr2nceL5JhTpgcHO1PTMUUg/lPtf2IxEH
NztdPHVagUpkc95LGBg5a1N1A0nE5EJ/tX2LO+lBm5PZLYfB8dV+7w7eZ9fj
8Nz6y+wr4xb8vsIhZ3V8blYIu93xjunkX4tTtE50TEcPhkNw5JnNNmHs+WyP
vWfhJ5Tijd9jBBifb+PijyIRbUarirS0VaklvuK1ReMRIKHa5Tn6nkQMh+iw
MgKPpCqIct7vK9h1464dfyKJaBg42HH20a1Ul7B1icOzr0BeYo20TRqJ2HQ8
fq8rbzs9A7/313BJqEU9I5vd7knVeT+CHxoLsd+i5Jw3sHVebePuAhKxTLwr
QvXFFWN7vB7eQGGg2KmlFSTiYtIgsjilQI2rinBZtSAScudXz4o0kIhz691O
OL7rpXM5ctZJJJRbXfNfziARLaIUNDWXm2rDmWahKLgk5zB5spc9D1XLpo7u
W0INxesnChIHbOZVjZCIU89JKvvb5FMG+NjNikfD8TFXq4OzbB0wKHW8nc9D
JfCyioYb1xgmovPIhMeyw3tedUunBHGWiUwMjApeUOlYSCb8DVynDL5cN27B
6y0GPny+r1gnQSYSS6fUX88NMNZiv92SpW+hd72ESo8CmVBcq5qbWLqS6o3X
4VuoK/YbkFAnEzdM7NzF7ProJbvvZI2qvoMOU1fhfbpk4oX0swNLA8RTFLo4
Db+Da3Pmd6bQyMSXm6tua1F0Ul3YrUqtjAWyl+pLjfVk4n3ZnIfR8/hTMvC6
jQUDw6oVsZvIRNLy4ldzxtVThO72eYL+e9BcJLOTtotMHJfVzP+eKZVij9fz
e7D3DYqpdCATGQcSbj5qUqHGvZWxczT+AEUNZ667nyATCqKlNenU08ZcFM46
/wD8V7xFJc+SiZYx4e13fstSVdmbi710wW7xhR30y2TiXUqG5JYgOWoJXv9x
cMjHV377TTLhHMIlzffomrEH++1WR8SB0Hxb2Y5gMrElxYlXYViCqmDI2Rdx
8Ntdo+HYMzJh4sd3a4U6N/X7bIVHl/JHeNv2qKD+NZnoer9/cLm5eIoL3i8f
IdZOxUL/A5mwny52FDdZmCLpz9kAHyFwIDrcNZlMtFXVbRC3GKZn4H30EdJj
VsjdyWSPV32ceDArTHWSnMOZOPA6e3m+bx6ZcO3MpmT5Lk4R4qiS8ydwWbYo
YUs5mQBuFR6dQemUZDzcT3BHUiN4oJ5MLBpJJknIclPt8b77BI9WiqruZpAJ
yRaeN5N7hyg8upzfZxAwNVMJ7CUTFVZXYMPnRdQ4vB8/w1g84XJ9hF1P18OK
aJ4Iim1GHnuHfYalcU3Sq2bIRFVicuKVKEkq1w3OPv0M69UWX/vIzU1QG0qu
h7VP06PYq9+WEg+zUd3rmhdwE/X3GhNYtxZQbfD+jYfD7us3fxXmJvzv/TJo
D79Kn6jjNBwPyr6/2+0kuQm9kIwVV3ja6KF4X8fDSg//4Ag5buLO5Qt7kOh3
+gYnzgJKgKWkB+ZPFbmJZbPCCsc2cVMH8H5PgLuVuzYR6txEWMHahnWfpFMe
j6ruuZOVAAniNaZ3V3ITvuVeMm92zqcSWAcSoZ9ZJX9bj5vIs7hb17B8fkrn
VTxgyF7foKNL4SbaRwUkNtkN0IOwPiTCxR4VhWuruIm4t+9lTU+00404o/2e
CJeeFdV5ruYmNoqbL95xe5zegnUjCVS/iIYprOMmevmJo80C86h+z39G5lgm
wa8OlXHnDdxEq1b3jJ7lZ7oW1pMkcM3eGeZkyU08v6r9YmJfO71GnTPRSSD9
vO/5QmtuQlzsXHK9UjvFG+tMMhiZZMg52HAT9xkFSU3HuimqyXgjQbLzy6uO
W7gJ5wqBri+L5lNLsP4kQ7v5B2uJbdxEenXZjwPC0xQPzjRXJMPN699VPLdz
E9ud3v0wd5ylKHCGK04H7fU/8+/v4CZUmjI3xp7iTfnOadaWDtmf+vkO7uQm
9kovXFkRN0hxwXpFB9flit862eVtK+zClLl3pUpy5KeeDvb9V+pVbLmJXUtO
2y9tmUPNwDqWAsm/CnWXssuDzkTdeDs1RHfiyMO+FIiqkH9fy67nEt+z+Gwu
fqoQtrUUeFj1TMGGXb6S9lsxT9DHOPkCZ2GlQP1c1y032P2MaYisNTx8N9Ue
614q3A+aP+7NHpfxgg+9G73IVB52q3aOqWDTfDTahD0Pd803nou2jkdxWA9T
4XV6W0cme97mOTq+zDT7jGwfmLJ3cCp4xiNB/s3s9eOvP2It+wlx7eHoJIL7
Uuq75Dax1609b8m6gjgUtbSes6DhQqJ5+aQVN6EZLHLhU/h7ZIP1E8H3XWvs
X1pwE7pHXl4Y3PwWTXxg008fAou0Ux8F2evhbuZ13+cvIlEo1tU0OKz41NSS
vX7cYjJ2eHtHoA0cuXJJAx9T491b1nATqhZCGz83PkcDWG/TYF1VEpcScBNP
VRjuORn30GPOah5OgzOP389kGbPXVYfF1wMrriAC6/AXeFtvVKFhxE0sP3yw
viXyJK1zJxZWaHur820fe1/Yu9NHXA3v0oLwsvoCv4N8s+y0uAmPc8vVTbhD
aUac1zv5BRR3XnORW85NOOUwUnfJRNFasG6ng9Wo6ZIoFW5iIvOgVMPrExQ/
znA90yE/qqFndCk3wfX/nxZuNh0aBYNgrty/52t+c37pMG/c9lK55H/lAXQC
63wG7DErvL130d9yyv0cS7ZyZ0D6w6MTLwX+K/ekdGL9z4CYkJLWh/P/ltNp
bFUVuZYBNxRSF5iQ/vUnCPtCBgg/TC8OmiL/LWdw6C07A0pipdVvDf8rN8J+
kQFap2I/KrJ11ce9Q3Db0cuUAKmVbGHKhKMWFqF2bB3+0+4zSgv2kUxQCw+v
UmogE9aOn/e4n3lG12vlLOhMuFzf2HaZrfNita3H5DbfpPthf8kE334xXge2
Lyy87qH2wE2L0hDJGXAmDN4q3fgtg0xUi0G/Y8Vlihb2nUxIvhh0NTyRTHyS
nVF2Yp6k+HBGm5cJWUtObRt6SybKk11ij54Pp9dgP8qEkS/le2JDycQd44jL
UnE36cvZm9GcPwu+ynPrFdwnE6uO61xsyd9H98Y+lQUPShyum/mx+cRgg2D0
iouUimnORGfBnXJxJcmLZCJzWc+VqSwtuir2ryzISw1SNjxJJnaZ5vn4eTym
eGZhgQbrq0HDz/eRiZnJvU90Px2gl2BfywL59LkH17P5wel3peUrvyC6Imea
S7JA4LpesTqQiTFGx+fbAc8oHtjv2PUIXFJfr0km6P4BOqSlj+kFnGZFvsKV
Peoi92XYnFD41M/I5zldAfvgV3jZS28SWsAeL3+ZoumLcxQ3jq1t/Qozl5U+
0sfYOavDYdkr/af079gfv8LDgSrPgDYSUXbM4kDx5vt0GRwvvsIxB5GFfoUk
QsAlPjJw1pnigm3kKxyyzud/l0QiHjpvOT+39RU9m2ML1V9h/SPSzEQoiZAx
CM+rFL9Dl8R++hXK13Tru9wkEU6pjx6mWN6ln+DItmQ2qAeZMxedJhEeFusG
pbqP0DOwz2bD7YOXZ1g7SYTBFZ9Ttx32UEQ5smqXDRuP1qn3rSIR9+d8JXvt
uktxwv6bDT8dS0vUl5GIlN9hS149Pk5HOI5kw0xY9vCr+SSiwKtY1CrNjS6E
ZSwb3gUxtA/0cBFHwnWWnXUKpTtyZKkxG+axihIPFXER6vPp3a91gijJ2K+z
IfmjgzY9jv188fg2Xv+jFH6ObMh9gx5Bw3yHYC6iREP50AKFILo99vFvwLWC
Z+mxM1zEjLxatuucJ/R4zva1/wZ7SNtNq7dyEb2yUlM+becoPJxtdOUbXFLY
GPNJl4so6K/1eaV1hr6Hs5zDvsEDljAxdxEXcamDi+xQGkSJw8vqG0xLHEJx
7b/hzZTbtjWfL1PmcF5v+zegvtn55njob8gyt8x7YB1MscU8kAMVVzRLN+35
DZt99nfudL1CeccZrmIOvNuvXukq8RtYztXpvX6H6VycZtflgJpL2v6e0l/w
alxawHuRI2XbYc4vB2DvE9NS/1+wXCjVdEmxBDUK80MOXJoZWLRq3S/Y3eny
OsRXnTqz/BOHCED4juACi1+zEPvU/y63lA7VBnNFDiQebtBclDQL0ucHejcl
ulFeDXOEIweE0jLuJJyahYObVS8Lua2iTGDeyIUFxTH3rVVnIe1DReg5njmp
VimchnNBao9o/GzLDPjmrZ40M7WhhGIOyQWnkzoL25/MwH86NuLNMbxckDTM
DZbfOgP/6dUGzCe5cE30y7cK/n/PPzPjCFYuLOtd46GYO/23fABzSy68SCY8
tK5Ow3+6vZaTZn/mAq/CQoqUyb/nH2Oe+Q56TzM9yNNTf5/v5cik9neQz5Zi
8dD/llMIzDnfYW2icL6lx3/lnvT7HNlw/Q5np1jpHUZTf+vvxPzzHRrezjs2
PjX593kaxtXv8MTV1Pzel//KT9CDMBd9B8rH0ful1/6WUxicZTX6HXbLXFfL
sfhXboR56QfM9HVev7poEiR/8TZQXAIpAZxpNvwBOo7V1WJNE2C8yysouuMA
pQVz1A9Ydj1N9HbMxH/9oehxmvX4AStBV3bY47/yPXQ/zFc/oLvSvdPGfALa
78r0SCQTtAaMSz9gFVxIiJWeADVywC3VRApNC3PXD7i93xYEB8YhRtjP4/ZT
HZoPB2emf4CIu9Tw+ZxxaAw976vuokqrwTyWB3MztikNvhiHCK2kKPJ+Kdpy
Dm6syoNFpA3rz50fh25qSsit+Gljb8xpeRCn8XbRwh3jf/tfwcEBrzzIDgrI
TdQbhwrH8Jb9No0pqpjf8sBKgbTWVWwcFueedNG9aZnqie03D9KU7huvnhgD
d227Ood0CeMSzHV5kCf8ZIdi49jf+hU5dkTOB77+V9tlssf+vl8PzHv5kP4s
SFs99l95AUeeTfPBN92DsunxGMz3t7KUOyFMV8AcmA+7d5isvH393/NuHLm6
ng/vQfwgy+1f+XfMh/mwZzStaO/hMbB31V7lF8lvLIO3bz4c6BzWGt81BmmR
++hC5dNUF8yN+SC7uE4tadMYuBn9oiestqVnc5YzTwEoTgzZRpiNwS9Lr7BT
FbvpkpgnC8DSy+1S1uoxuPN77NLPdVfpJziv17wATjilPpExGfu7LzIwZxbA
+ad0qVTa2N99KsoZrn8BbL21cU70qn/9d8L8WQDhh3yWDRNjcKE0b9EhzwQK
KsA/+FRfaxa1/r96EEWIcyrXVwDHa4J8aq3H/r9uM+mO9zjGXwizv/Uuhuz6
W05JxrxaCI1SCnGkI//a5bfjCEch6BzZ06V6bgzo5hKPFIR/UOwxxxbCnWn1
Rytu/Xs+Hh8HFsKKgP2m2qH/9fMbnQfH4kLgNavjsqP/V08tfQ/H9ssK4WE7
rbCs8l89cZh7C8HA5NeP/NExkJGtKbKUHaDM4digaBG8y0iSurB4/P/9H6TY
Yh4uAiVVDQGJ1f+t5wbKO44t7CgCI585HY0n/j3PxVGNs0VgMVhGmf98/P/9
HKVvw8eHRTAdY1WVXvpfuRg1CvNzERRUZNhJ8k38vz9C1BmSBkcoYU2UpF7X
hgk4KrzG4nnU/lQbzNVFMLhYZ3nkrYn/j3cx9RVnG0kVg0NMrJ568cT/dUaO
OoF5uxgGuvT0z4tOwlrB4aGagKVUK86y2lMM8e9sN/zYOQkLBdVvM33rKKGY
w4vBUKjAh/VgErx/9Jqp3OFPGdnOEehiqFddcmw2fxISGu8b2XcIpGzAfF4M
2heCtLdNTIJ+XnX+FSetlGecZpuLQT2xNMdLagrsTu39JD9PM2UAc3sx9HgP
VgvqTkFH5PIv67UWp4RjnS+BPJPc1fKmUzB+V8Uu4KlEihXm+RJQnlV26Lac
gl4bFfdiHgnqGNb/EviQ/T31hfUUIAm/ZlcJckoo5vwSuP/AYcVaqym4EJT2
jdtxDtUC+0IJLPi58HLyuilYWvQ0ZyY1mzKC+b8E3qrNefjJeAoOXbKJH53m
TnmB/aIESgvvLv+uOQX+24Nvt7eW0TfgXFACt/lYaWfk2fWvNl/gHxxDGcI+
UgJZPvRvixdOgfkXfQ3tkwOUZzgvlEDfmKi0wPQkHFZRS7XYyaSvx/5SAms2
R7gEsyZhmqnnPfdUPGUAY1cJ1NyZkWovmYT5JFOy5O5ySgj2nRJ4neNKrEyZ
BC+uZcr74tooa3G+KIFnZ2WDX4ZPwraVgmnqI3mUfuxHJaDOvSZqx61JOJqc
Wf1uEYP+GOeOUljomSPuenoSGH2EJ++pfMoa7FOlsOAbMuezZdffFjuvcWcm
vRfnkVJIYjoYGJlMwrXp+INRzEr6Q+xfpQDVi7r5FCch1e/AXNt5UXQC55RS
eDbt8ush7ySMrYqlXlr7lN6Nfa0Uhr/tn+jo/8+/3lHu4/xSCrfeaj3kq5j4
T3/oJtjvSuGp30YhATp7X5CW985186Z04lxTCq0LhTaNPZ+AF/drzr2e/EIP
xj5YCnVcpRIlVydg9vxJW/N1qRQazjulcLKmVCf8yMRfXWJhfywFb14r/zNW
//XnGT0I204pFPe+t7DQ/u/5jxQq9s1SEDnc+lNDfOKv3jJwPiqFlAidg7LT
4385JBD7aSkopF2fv6xl/K8OG+HcVAYFk2o/iG//ytuwz5bBoxVp6hdixv/q
VQDOU2XwvMbRpuzOf7rxmmKA/bcMhOe+4LVy/9suvQXnrDK49rimtsvur//S
b2FfLoOMJQu43hP/2tXD+asMkt7vvRSi/M+vm7Bfl0HhSnnpj/z/yv1wLisD
psXsqeGhv/5L18E+XgYbvZIYDrX/9LYB57UySO60TObK+Ffui/29DKbi47mL
3vyrRwsv5zIIEDZNy7/97/k67PvsenIjUqfc/j3vg/NdGXRefpS8e8+/ck3M
A+VQlXdk60/Tf5xQg3NfOajtV1iUqDH2l+uuYk4oByLwnlPcon/PL8d5sByo
V1bGNU2P/u1PFeaHctB2j9ZdzfhX7o1zYjls3H1No6Zg9G/96pgrysHhx6mM
iIR/5RU4P5bDva+P+F+9GP3brhfmjXK4YfRNpvbGv+dVca4shyN87oNrTv9r
twxzSDnoDZZdbrX7V+6J82Y5XDcJ+xS/9l89yphPyiHm/sLjSHMUnigs2LZ5
IpZWgnNoObifHFg3ITkKx45NPdE/+o52AXNLOQzt8gl04h4FB/PBj28HYmiK
OJ+WQ9vByUL+/hEgDrx4vPp2NK0I80wFxE/tyGHUjEDemPrh0FVRNA+cWyvg
dr697sDXEfA2/ch3iyuSthRzTgVcq5LJ1/wwAuZzbcyrK17TCnCerYAc1iaT
0JAReN1slu9Of0U7i/mnAhasHzRa6zsCUW/cvA7HRtAUcM6tgHyThw5SriOw
VucUF/oQTsvDXFQBQcZV+5buG4GplXxmT9LDaG44/1bAovbIwt0WI+CbGmCl
1RBKk8O8VAG+s0mWOQYjkPK0eiBjTijtO87FFRBtneJ6YNkI2LcrfF15+gXN
FXNUBXCLJ9QuFxoBuRXG26T7n9FkcF6ugHWnzMRUZ4fBete8B3yXn9JyMF5V
QCZ/T9KW7mGYP7+vsX5pCM0F5+gKOOGrveVd9TDEn76w8ULNY5oU5q4KmIyd
ddX7Ngwux2ovsV48omXjfF0BdbPJkd2fhkGu7h1Ny/0hzRnzWCUEh173LAod
BrOWl3vP2j2gSeLcXQkqkic9mwOHIWpsXRJz431aFua0SnCo89eWvTQMSkwJ
6WTre7QTOI9XgrMIVenG8WHQr425prsnmCaO+a0SEkO1W2TshoGqQVKIdr9L
y8A5vRKs0cfuxg3DcH+RV4xbSBDtGOa6SphZEFrww5A9rhiHPeP37tBEcX6v
hKHwSIEW5WEIXOIVu2t+IO0L5r1KaPi5XV9BfBjm8alF/rodQHPCub4S7D/o
59+cOwyq09GxDGV/mgjmwEq4Mbdzh8zoEPDW7edZXHqThnDeZ4/3p7F9NWMI
Hm3XHEj096MdxrJRCc18a0+lVAyBRrfae9b2GzQhfA5QCZdYx/i/ZQ8B423o
1wZNX1oK5sZKeFZ6PWMsfgjcrvrL1Ipdpzni84EqEDjJEt30egi2+Kw7obzA
h7YQ82QVfK4/dq/wwRActu7wWMx3jZaMzw2qQK0xIOe07xA8586xF5K8SnPA
nFkFZSmnKMbnhsCjxsDEVesKjR+fJ1SB6tK+c2pOQ+AQLnf0/VZvWiLmzyqY
WRi2kLZrCKQfuOp4kC/T7PE5QxUUJY/ccrUYAt8HU4m6py/RFmAurYLocNWL
BcZD8FsunAgZukiLx+cPVVBYtdfZfMUQXHB+9PXr9Qu0fZhXq4DP9sVIp9wQ
GElneVWonafxcGJ6ZBU0ljJexAix5+dDquhM4znaJ8yxVTDn+bLft8lDkJjU
o+Yedpa2B8foKtgvbhkVPDII7vWit33OuNPmcXCjtgomd27STGYNgpuWRLrH
VjdaHD7HqIIT+1co/6oZhLygmU3RxBmaHebeKmC8/qnkmD8IQZ+Cz5ylutLm
VGPBAiWtT9ldaYMws7P59AbiNO095uFqSFN7ExIYNwjXeLLW39nsQrPF5x7V
oM0ltnpLxCBscRYx9al3ppE58mxcDc+kDm7RezgIC4aPzKapnqS9w+ch1dC+
TOSY3s1BkO/QKq+4eZy2A/NzNfT2ZSlu8RyErKysicbZozQujmycqIYPcwwV
bp8ahNCcJOmpa060GMzV1bCXsXma4TAIu8sR93bpI7Rt+PykGtrqF+/YtWMQ
PjeuKFT8eoj2C/N2NZREJZd2mQ/C5XFD8+gLjrQofK5SDe/zLwo9XDUI20mi
kRqrD9K2YA6vhg33KhL2ag+CiIxFx6yYA20Gn7dUQ9zozsOE0iCUzVW2uDBh
T3uD+bwaGHJfclctHoSRphHTeSX7aTb4HKYaKqtavbcLDMKJvUZKc77vpU1h
bq8G2dh0yg3SIIzvWPmruHo3DX8OI1QDnhNuT8tGB2DNRkum7a9dNGvM7TUg
HW1iY9g9AD/p32pCqLa0CcztNVDbe447oWkAmueV/n7uv4MWjrm9BpYnPj5g
WT4Aby+ekjo7sI1mhbm9Bi4t1pOcyh2AnLVDP1Y7baWNYW6vgaqbY5UZaABK
pHzk1Yc200Ixt9cAczrC4uXHAdBtbpZ1uG1Ds8DcXgN3GGIqD94MwMMXh49b
uVrTRjC318BeJYps+NMBIKy4Lp7rsqS9wNxeA2PNfC3fggbAZcMW5VYvc9oG
zO018Gvl02VcvgNwlvvGUX1tM9oQ5vYaEC3iem5zcQCSwxO/r/y9lvYMy3MN
7PxoT05yYT9fU6Qe0rGGth5zew1E32Yt0D08AGcyQ3ytugjaAOb2Gjht/tU5
e/cAqK4x9rCdZ0ILwdxeC7JH1TuObR6ANtvvS3c4UWlrMbfXwlqXTZrKZgPw
NWjwQOCYAa0fc3stzFl+8PcobQCct/86JPpBl/YYc3stNJLvitfpDEC59zWm
UJAWbQ3m9lrYpz+jVaY6ANZvRpSvrtSg9WJur4UIyTT+JrkBeDkx+7nPT4n2
EHN7LaB1TU6zogOQmbDho6aaAo3A3F4L5YW75mrxDcDWoR9OB6TEad2Y22vh
wSHxCHfSANjW5E8Ifueh3cfcXguK4j/mP/v5E4ZNjqSGbOwyNsHcXgsrd4xX
nG74CVKyN89NHxlL7cTcXgvnAvv1Tvz4Cfml3hoONXwoGHN7LfzQiIq7lfgT
TikPdhSUiiEa5vZaOL25rqwg4idYLyzzv7VJFrEwt9eCqPyQis7dn9D5QoRv
RG8pCsLcXgs7BwVMUrx+gtpg99STYCVExdxeB4+Txl85nvgJ9lW56rlZqoiB
ub0OHEC+X8vuJ0xNvznilquBAjG314Hw7fvv5Db8hPE7s5bXwzWREeb2OjDX
IbuvMPgJ705Y8DFitFAb5vY6SPgY2bhH8ScIONR+vDiojQIwt9fB7v6tXu9E
foK8tHN1o5IuMsDcXgdXnuwfkCb9hFf7tMwqN+ihFsztdTDzLrIo5mc/bJ9M
MVbcrY9uYW6vA/rojQTbpn4wyOEWvr7XAOlhbq8Dp+eVa5QK+yHS5MXXaBtD
1IS5vQ5e5teKCSF2PTYnKmn6RsgPczu7nnVWxZJv+2H0lm98Kx8F6WBurwPl
ZdbCENIP5NXG2vqVFNSAub0OzPwdL1+92Q/xZ9O7C+5SkS/m9jo46XXmS5tH
P/DvCfMyWmOMtDC318Pm98lu+536weF0wg9ShzGqw9xeD6EHc8wndrL7GThd
9dabhnwwt9fDmkNerHdm/aAd9zQ8QXAV0sTcXg+7+QRGPQ37IUj4fOmj+6tQ
Deb2euA2ZCg4qfSD0TmVtTmCJugq5vZ6yPRMFHeW6Id7UZONH66YoOWY29nl
6119Auf3A+/Fqa3p3SaoCnN7PcwIrFr8Y7wPmr7M1bSzBOSNub0e9rx0vi7b
2QcS78NPtEUAUsfcXg997gEX/Gv6YMVo5tWEEUAVmNvrwVNk3VuRH31wlrTb
RVyeQF6Y29njung8/xO9D1D6GodNBIFUMbfXw7OEoTvHY/rgyCvpEM19BCrD
NlgPulu63tOe9sHUSNSPeg8CeWJurwczSfdmpYA+aB3eeN8ziEDKmNvrYWdY
Ua3ypT5QOvpaV/81gUowtzfAOvlVO8G5DwouMw6qJhHoAub2BujXEBE5tb8P
FmwkLpzLIZAi5vYGMHr0+luCTR9IxcVYrSknUBHm9gbI37xZc9GaPnCTf3kl
spFAHpjbG6Do5EneG7p90B0RZpbNJNBSzO0NMClqJSas1AdZp/fHxvcQqABz
ewPIvNEX/ijeB6OfTjy795NAZzG3N0BWuWPaYZ4+eGtzq//CIIEUMLc3QH01
uV57qhfCihRkr7HL8zC3N4Db22XLRXp7IXzOuXnZ7HrcMLc3gKxd1pn5Tb1w
KerV9m29BJLD3N4AcnZp7sIlvfBd60qSeQeBvmNub4Bdg2VjK7N6IbjyXk1y
C4FcMbc3AH/cc+QQ3wu78y41JdQQSAZzewPYjwTdjn7TCxvmJ9ZuLSZQDub2
BljkMao150kvNPd+Gn+VTSAXzO2NwD/EdHb174UTXUkFKckEksLc3gj6GZZC
I5d6oe157cY3bwmUjbm9EU68rm/yc+mFLbm7tpx7TiBnzO2NsMJH5LXWwV5Q
WoQOrwokkCTm9kZINdHR7NneCxnjAyvnexEoC3N7IwgGmqxP3tAL48J+420n
CHQCc3sjmA9M0h8Z90LVzGn1JjsCiWNub4RFoW07bmr2wsDD1aVzNxAoA3N7
I7x/vLInYEkvRIUglcN6BDqGub0R8iIL14WL9sKCBdtV+RQIJIq5vREu+e0x
+DG/F/RjDVZz8RHoC+b2RrAQXH6bNN0DNO3Aq6HdgJwwtzdCwU6KtGV/D1wX
81/E9wWQCOb2Rvg2b/mn1609oE3vXr8tCBDC3N4IDx9uVRSu7IEVe9NnAg8A
Ooy5vQkU371ae/t7DyjytaQWagMSwtzeBDJnE1mLUQ9sodpcX0IClIK5vQmU
xDOaEj/0AFQs9n9abIIcMbc3gZPCQ5JjRA+8G+4By+cmaCHm9iaYEopSXPKo
BxLvStCIYyYoGXN7ExxrnpXtv9UDyW4Go34GJsgBc3sTzL2jn53n1QNnP1Qf
0yWbIH7M7U1wu9K7P9G1Bw4/Qt+sClehRMztTTBKD3f7dLgH+taPdbU+WoXs
Mbc3QZ9Nn2aaXQ88lrWa/nVgFVqAub0J7M7CWJV1D+Rwbdv5QWMVisfc3gS7
75Nf/V7TAwHHPfb+GqGhfZjbm+C4m6qIoWEPjEi2BI6l0RAPxo0mWCumJn1J
owfOB1V0hPnS0CfM7U0QdocrpFS+B3697hrm3URDezC3s+eHa8UxPVH2PH9Z
amgkQUPzMLc3w/Yr74685umB2aM28vrNxigOc3szmEtPOyvOdkPIZzFd3khj
ZIe5vZntu0J7Pw52g1n2pUDkbIzmYG5vhhOZ+wWtWN1gyzA+ucPAGL3H3N4M
brxlB0fqusFmi7Vg0ywV2WJubwZLse9GMcXdYDIefc3uGxWRMbc3w+aP4idP
ZndDzeCzI2UBVPQOc3szVFLmtqyid8NRvvT3ltuoaAfm9maQLLI8Lf2+G0aa
vZ0KpKmIC3+W2wwdd4VJ8yK6YaD8xmK7dgqKwdzeDDd/dp+afdQNi8+PUKdi
KGgb5vZm+NpZ/YJ0uxsiygSLPrpS0C/M7c1w1X7NKZGr3WClKx15nUpBUXi4
zUC7PJO18lw3cL3oV71ApqAtmNubgV8IPHed6IankZlc9/OM0Azm9mb41RN5
6c6BbnhLjh6tCjZC5VjnWyDhgFFM6Y5uiGn2ljTbbYTw5+RCLfAxYStT3qob
tnqTZzuWGSH8GbhkC6x4lCZyYXU3SJwSn5/Wa4i2YM5vAebrx+ItBt3Anb3h
2Y8EQ6SCfaEF2qcdKzcv74ZzmUdahS4bohnM/y3gj37pFi/pBpXNalcfbDBE
pdgvWkAo6pmErUQ3yBv4utmJGKI3OBe0QG1q0aFefnY9mkIUhwYDdBH7SAuI
F3nOCSB3Q2dNxJoPbwyQDc4LLQDGzFqDiS4ImI7PMT1tgJSwv7SATeDTgt6+
LvhiXNm8hGaApnCOaIF4wxtfY9u7YPZxe77lfANUjH2nBapWt70+X9sFA7tj
ZL+W6aNXOF+0QLaw0W6b4i4oz1uddfOFPjqP/agFylQd87W/dcH+1iDesGP6
yBrnjhao7glqkk3tAkZrx9ACQ320DPtUC9idM7gk+rELrEqqL37n1kcTOI+w
2z28OEgssgua3ylr15fooULsXy1QnGjOteR5F2y56Siw9oUeCsc5pQV2PFuS
ZHCvCw7qbjWec0IPncO+1gLbDq99seNmF9jtl/siQ9VDVji/tIDA4ecvvS93
Qci9lTcDefTQEux3LfC4et/rePcucLc8ccSuWheN4VzTArvKuUKGjndBCQ9V
5MobXZSPfbAFrpkQTlSHLrB+PWnHfVYXheK80wKhubLT/rZdsGCO/cPWdbrI
HdtUCxxpbljVYd0FEUlc3jLiusgC5yD2fCKyjNW6Lrh7qMs9nqWD5LFvtsDt
/duvpBh3gfDiXJ6YJB00gvNRC7x+UrdLR6cL9CMyXWb9dNAP7KctsHJJ9d3P
quz5rx6tem+ng17g3NQKAo8LxUzku2AktNjny3IddAb7bCtcjblUVirWBaT2
zTXLf2sjfA1CvBUMldrjnfm74FhhbPNkqTbC1xfkWmFWUD9GlLsLLq/YelTp
tTYawjmrFVYWMV5+neyEJ5c/f/vgoY1ysS+3wqH1z69dHOiEuRHCpY+ttNEz
nL9aYSPPGlNaRyc4Pnvv16KgjU5jv26FC+f6C+Y2dcKytuFW31EttB7nslZI
nhxZWFPRCdfyrr3zz9NC0tjHW0FVo2n8U34n3Co48rz/pRYawHmtFbYJO519
mNUJVe1W+R/ctdA37O+t0LLj+vmr9E4IFkQJRZZaKATnuFYQ89kzcDauE76/
P7rBcqkWOoV9vxVurTHLOxPZCRI7Cy0shlaitTjftULpk9IxjxedsMF0dDQp
dCVajHmgFTKN6Id8H3SC4JvFBU2bVqJ+nPta4UNa77xnAZ3gm+wOX35roj/X
O1pBnOyfR7/WCWFSrke3x2miP9cmWuHY4bbQ5gudsEK+6nbEAU10EvNDK+Qq
ulwQcO0EkvWL55GLNNEanBNb4cCrZjPTo50w9UTN+EDOCiSBuYL9vsp5p7zt
2eM6azBcdH4F6sX5kT3PniNXcnZ2Qn5UdN7PFStQJuYN9joJLS1ZtKkTxKwK
R7LalqOHOFe2wmjDr2qn9ex+ajD3mT1ejo5jDmkFzR9zbn5b1Qk3VaymLlov
RwSOI62guOthpZp+J0TZPqneP3c5EsN80gqstUEfHixnz1u2a+Ag0kDdOIe2
QpjLBA+vYicIbK4U03LXQOmYW9jvy262/Jp0J1z5ON9MSlMD3cf5tBVMfEbJ
8xZ1QmeYNu+HDnV0FPNMGySx9vndWdAJGnv5DPrC1JEJzq1tQD7QtEOB3Ak6
Rwwyy/eoI3wtRrQNIrThQPJkBwzpFw/YS6ojfN1Epg0eOLiG7BzsgFn+hKZ7
FWooDfNPG2yyCRyd7eyAZ3Z1+sfvqqFgnHPbYFq66NDblg7o9Dp1h2mtho5g
LmqDauW7TftrOiB9uZwwWUAN0XD+bQPPJ3ZbpUs6wF0SiaTnqyJhzEttYNpQ
ktSY2wEF9zqcpf1VEQvn4jYYU0j7/Sa9A9Ku5y4Ut1RFqZij2iCtbYH8uaQO
cBV9qhPLp4qCcF5uAyWXXF7rDx2QSyMnNheooEOYr9pg5MySeI3IDrjcfP3l
u0AVRMU5ug1KLzuJCL3sAG9DHnWRzSpIEHNXGyQ+5F88/bADzvMcMhEUVUEM
nK/boBc9R72BHdDgyToXXq2M6JjH2oD/Zv4gw7cDSs2j7+c9VUaBOHe3geVn
x9h2rw6okyKr+toroz/Xidpg27sdjM6z7P4cc5arUFJGf67psOvRjvUfce6A
PSOB/Z96lJAA5rc2+NZ09/G8Ix3gM5epv+STEmrDOb0N+EosueT3d8DJOYfa
ZM8roSTMdW3gpQvJq3Z2QPEa0v5IQgkF4PzeBlw9vQkOmzrAeM+664hHCR3A
vNcGp5SG+m+bsd/L4Jq63aWKCF8DKmmDppn5u9KhA658Pe7sE6KI8PWUWva4
5Li7xww74I5h4U09R0XUguWqDSz2lT/S0+qAxl+/pY9rKqIEzIdtcOnoNVsP
1Q5AffWflSeXoVv4HKANfu83Wpql0AHnHnjvOJy9DO3H3MiehyvaPcKLO6C6
eomBatAypIfPB9qBqyA3+ohwB5wKXb/t+J5liBfzZDvUfzi57StvBwzIyfhr
qi1D+PqRSDs0fnzfqkjuADGRk0dcxpYifC1Gqh3WSa7cEDDFgpMbC7pXZi9F
fvg8oR1+P37rNTnEghJlAavjwUvRXsyf7RBJnrx4oocFRq733yw5sBTp4HOG
dvg8zG3IbGdB/qWyOVu0lqL5mEvbocWn5M3BBhbMMkvcp34vQQ34/IHdn4nz
WR0VLOgRYl6WKlmCPmJebYf8szpXTheywDu06GBc6BKErz1tbQeHxDV1XDks
WD1uN5NyegnC13H2tINHEu+3B19YsL29+gjFdAnSwucV7SB3ccZIK4kF1aIr
RNXFlqC5mG/bYWXC6xUlH1jQ+w5JB3QoIHzNwq0d1vu/DnGPYgFNx5GyL0UB
4c/PPdthrtnHcwphLHhzsXPZy9sKyAefb7TDcdF7qOQJCyQ+qvBZH1BAuzAP
t8OLL2oHfINZMKUVs/WovgL6c82uHcaPOO1d7c+CXy8FJn/yKqA/19faQdty
RzTJhwXun77wZqXJoxp8HtIOxecXrsr1ZMHdSvctZ53kUSzm53bY/yhdKNid
BVc7hqSnF8mjP9cy2qHh5VsZB2cWfPeryN+YIYf+fK7eDqxwlV2GR1jwe4/5
ghMn5dCfzyrbwfrW0y/C9iz48OaJ9TZpOfTnc5t2KGq4sm7QlgXNzm7Z3Hmy
CH8+Wd0OPJePsCo3s4Bn/aYHHudlEf6sprkdfC70PEm3YMFC4vqmODVZhD+T
7GiH+K9fbN+bsuDGvLy90XUyCB/n/2wHX9Ir6XAaC+Sz91kdCJBBGPPH20F9
86n6EH0W5D7qgCoTGYSx/Xc7dArPu/tYkwU2SgIb5g1JI4zPPAyYfbtP/6kK
C7jkV+v+fC2NMMYKMSDDzjszXIEFYcunMwPtpBHGSUkG8E9d1fywmP0e0012
tQtKI4x1Cgy4UxDoniHCAnM62aHnmxTCeKXKAK+NDXeq+Fhg6PH8aYSnFMKY
o80AlfHPZwfnsEDb+/hOPj0phHGDwgAZSedlwr+YELO67I5C72KEbX81A9pC
XO/ojzMh+WnctZZXixG2X3MGkGuN4vcNMAGpfDG02LcYYRvczADPo2b+AV1M
0Ny5wmq35GKE7ciOATwDugvT25hgGvx7uUi5JMK24MCAC4PhBmP1TFDQ/mBz
MlASYXk+xgCRcLNf2pVMuCHmxXPMQhJhmXRlwAt6+z7XIibQRHjU5s+XRFiu
LjDAxcxsS1IuE07xe+auyZZAWDauMWDmqk0ZVyYTKmSG2qSvSiC8ff3Z8xnZ
U2OdwgTKhjLnO4QE+nP9lAFzUkTswz4z4eSRBS+e/RZHf651MkD+TOGBiXdM
uCjwMnZ1ujjCyyqCAdfnatdsfcOENvursZ6XxRF+ve8YsHRqf9rnl0zQDdP4
bUmIoz/Xpxjwcf4tPsknTKBOBLfEksTRn2slDODu7UHewUw4sbQwNuyr2P8/
32aA6eri/D5/Jhxbd8Ff0Vfs/5/1MSDC9pbO/utMeKn/REPfXAz9+TMyA94u
8u6p8GJC+eYz3mX8YujP8RIDar/ID1p7MMF8/qsFUyWiCOMkkwF9PYxVhaeZ
EOJs5Pb2gSjCWNfHnk/rnQWbjjNhSZFaAsNO9M+fYUcZkBa84FGVIxNMEicK
IxRE/xzPzDJAiXjx+MA+Jjx1dh7sYC1CGDfmMSEuOC1/YCcTlCWuXP8QuwhT
zo6FTBjaIa/hs5kJst8FFk66LULYfsWZ0J13/aO0JRMcd7nmZdEWIWyDckyw
PP9lV9JaJsRa303jm7sIYTtSZoLS4nC5nSZMiOSyMi0rFEHYFlay++0sOj1l
yIRzBkrcYo9EEJZn9r/JSnO6w7WZkLjLwq3MXgRhmQT2eko6xrLWYIJiUmom
r4YIwnJlxoRhM6ueX4pM2G638W3yqDDCsrGJCXd9k4Y/sfu1WVG6qilDGOHt
a8sEh7vfpo5JMmGPSILVhQBhlPNnokGn7Mm0sgh73vz0xG7ZCiO8nJ3Y9bMO
DLL4mBARfOQzv5IwwsvKhd0/r+3VMXOZIJK4Qpk0JITw62W/PxEiMcr1N4PN
b6O9h9KFEJ7mK0zIjS62N5lkwJZI1zzKbSGEh3uTyfapsSmBYQZcEZI/dXG3
EMLN3mXCc15/19Ze9j5bV9+spi6EMLaz16UFMZKVzGJAE998J78hQYTxOYw9
rmOvOu61sPd9Pk9w0F1BhDE2mgkvwsQbXOsYkPWxPvq4tiD6c82RCdGU4qfb
OesxkkdKvGwh+nP9iwkyz3YvpRUxwLuvSf3OmYXozzUR9nwabjmu/J0BVrzW
JuViC9Gfz4eZoLVvi6toFrv/HdVDLckC6M/nQkwo0JmjO4+9b34UNNLj9wig
P39GYEK6v2T0dAJbV7a/v29NEkB/7JcJD5s2lIx8YMBC0kRd9Bt+hG2whwkj
S3e+GoxmwOqNZw1zrPgRtqNhJqR+EVgyxN7fs3NvlIYO8yFsC9PsdXUS1ow9
Z+8nG31nw6d8CMszW0/XqORy/3rEgJ7Az7J+pnwIyyQ/C74J+B3gDWZAve3+
ZXd7FyAsV6IsiN18cqdkAAME1d3dbB4uQFg2ZNg+IXesVd2XAcpfJXiziQUI
b19FFoxcPT9NeDPggGudX1cPL8LbaAXbz/a9CLNj69+Jx8u00h/xIryc2T40
vr69+JwbAxJ6fzw0XcuL8LJaxa7fw+7qY2cG/HyjIHZmkAfh17uOBbpINgE5
MeC3yIz+ppc8CE/zRha02Vo7Mtg6PR58RKpsIw/6s4FZcGxUNEBwLwO2recK
rJ2Zj3Cz+1iQEhSmarKT8ff7JYzth9n9XBJj6ML2h/8BKXwbLg==
             "]]}, Annotation[#, "Charting`Private`Tag$12120#3"]& ], 
          "\"(0.00,0.70,0.63)\"", LabelStyle -> "TextStyling"], 
         Annotation[#, "(0.00,0.70,0.63)", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{
            Directive[
             RGBColor[0.8302733999999999, 0.3470634, 0.18826110000000001`], 
             AbsoluteThickness[2]], 
            Line3DBox[CompressedData["
1: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
eq5d7swqFB7Ui+pWKEOSxXuR91o+ndBOu6AKF8//iTuZI4PwTtDXo8v5tIK5
vQprj7fL6S+U4ZY4ZFnVAj45MdhVQX14zbgr32WImOfgu2AWn7qzwl8FQX1I
ocUXGcZnBO2vnMqnMub2KrxYtvLy8w8yFNgcTov05lMac3sVGj4dOTb5rQwO
6fvyPd34dIy5vQoj+eZXC1/KsCbu0tVeDnxaxtxeBVFZbOHGNBnyRw7Tabbi
kwMDZRUa/Qe5dEqR4XRez1SNGZ/0GDiqsGWA/stLD2VYW3E7pdNwPpUwt1fB
SvMy0PmuDEMu3H/NG8inZ8ztVTD7sH9ITpIMbSYEpmzow6co5vYqPIlI/rf1
qgylq8wWvtfn0xLm9io8mHLvV79EGaxrf5627MQnOwbZKkxzyez6/LwME2fs
m/GgDZ+6MuhU4Xr0SofFZ2V43+Xl3HEtPCpibufiKrx8Z8dTMmwKjV8kb+RR
CksbVZi98qbwYbQMui6e0ffkPDrC3F6FyxEGHgsiZfjqeXP9vioeLWJur0Kc
TfSrzgdlsNoS2WVNCY9sGKCrsSB197S0vTL0NPOcuqqAR50ZsKqRP9u3bs0u
GZ6sTyzbLuaRlLm9GvMnrIsdvF2GkeKSLwk/ePSEub0a4U8nTBOGcPs883p6
zmceHWZur8bK1Gndo9bLcMXg3PeR73m0kLm9Gopp6pzxQTKIb/LSDr/iEZ+5
vRr8JUm32qyS4ZPvTz8d4lFHBrtq3E4tDXu1VAbzUc93RSTzqIC5vRoHdIbM
CwuUYbtnrsWIBzx6xNxejUfPsu085nHvOVljK7zFo0PM7dXo6r6jt+5sGWoz
1qyLvcaj+czt1ficeUr1eboMv2Qhd4ITeWTF3F4N/zkXvp6aKsP+R87Vs8/z
SJeBshqjqfe1BRNl6HD42+8ZZ3iUx9xejfXR+7aOGi/DgM0Lvi85waMHzO3V
0LFd6dnkzt0X/xMe4Ud5dIC5vRp+kgkdPrjI4NdbOeDZIR7NZW6vhmrBo9ex
DjLUtT47/t8+Ho1lbq+GRZDZhiAbGeQvltGs3TxqxyBbjcBlLgYeVjIcaHcq
8PV2HuUwt1cja8G2m/3NZVh9RF/gsplH95jbq+E0fPVYtakM3c87z/6ynkf7
mdurMcf2ytVvw2W4F/rvfFAQj+Ywt3PPeZnc4c4QGQSWHuGDVvHInLm9GoIY
m9lHjLj7Gz+sumgpj9owQFdDY/vsRFA/GbYNbS9KCeSRmLm9Go2fBMnTDGSw
uenfO34ej+4wt1fD22D4G+vuMoyB8emY2Tzay9xejegdbsmGXWX4tz1wTPwM
Hs1ibufmbfM+ql1HGfpabMxJmcaj0czt1Wg/fvpEeVsZTFb9CiqaxKNWzO01
mLo1vCpPh9v/8pZsIx8eCZnba/Bj4d//Mv9IkWmUWLrKi0e3mNtr0Mo/MDOt
SYqpWYaU4cajPcztNTiEqZ3uqqUIrbao57nwyJ+5vQaex9eNuCSXIvLAzIMP
HHg0irm9BrleqweerZHC+ExuAmx59I+5vQZHpOXy6AopVq49XJvP41E2c3sN
Fi4/dj6iRIqb7draHBnLoyTm9hrcWaA/OFwqRccLXqkTxvBoF3N7DdZ867V9
bx73/EOqUf1G8Wg6czv3HIdJSWFiKb52Kt2mGcGjkcztNWgdt/z23mwpHu57
u6F0GI9amNtrMG6xwd7wLCl+fzM0KR7Mox/M7TUYvbWz6eHPUsRl390hN+LR
deb2Ghhbt1w89kGKkx/7Leo6gEc7mNtrIA1MKD37VgrTxPZX7fvyyJe5vQYR
Y283XUqXYtpsa+cQAx6NYG6vgZenRHSXpPhkY8dL78GjZub2Gvy9LAujp1LI
hDuN+uvzKIu5vQYjnu9pyHwsxbaNJlP2deXRVeb2Gugt3miZf1+KDrOVwc2d
eLSdub0Go95t4ctvS9G8cNqmvR14NJW5vQZmWye3tE2SIj/1cnDf9jwyZm6v
QcKqJ4cHXJXC6XdYz+dtePSLub0GVbL1ubxEKVakztu0rhWPvjK318Bi77i6
yRekUJlu2Gj1z4ouM7fXoNi16dWqWCmWZjdUt26xoq3M7dzzV072PxgjRd34
+jLZbyuazNxeA/OYrtevHZfiinnJ+G9NVjSUub0Gbg9bJb8/KkXvqS9+fWq0
Ig1zew0WNan2VEVIMfmWfV622oo+M7fX4GvVvfZ6B6TYH/W+uUZpRYnM7bU4
MrP1OOu9UnyxKRrYU2FFm5nba3FhyjPn+bukaN29fsb4eiuayNxei1tmV2oO
bJdi1g//QxG1VjSYub0WXSNO+j7czD3/5PwYSbUVNTC310LhNmd14QYpzAeZ
z7GtsqJPzO21+LTug123YCkiFjr+u1RhRReZ22uxJ+jJU5fVUtyY+83VsNyK
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
Ld+SyKdX7LuBAhNlifbvh+XBe2JI4NTrfDJjzuT2LbLnMMOBedi949kNizt8
imHfExTQ6zrfbmPfPEjq31zr+4hP//K0B6zA7jivrZ97cOfeOHFvp2d8WsW+
Myhwc0GMzKQrd14jBvxp+5JPP/21UFPAJdhgY7gut65dOgc6vOOTM/v+oEAb
cbRZaas8fB5y8WevTD5dZ15VoPWJbx3H/8nFQk2Xt6bf+dT9f/+RCPn7Errc
aszF0B8WZ8aL+BTKHKtA//BvVt0Vufhnss5gbT6fSttoQayAxcxRoduqc7E6
7/6OC8V8msp8q4D06u6S4tJcrB1g9VBQyadn7DuGAue7XAyaJs3FS/3CV73l
fBrG3KvA4i5zDF7m5OJD1cZNgY18Osq+bygwt9vuHAtBLjrldRI//MMnzQNt
QCswdXlx2qVvufh0ef7wbm2saRH77sHdl8lznvb5lItuox94behoTZmjtGBV
oGvR469Rb3MRcTXWsFDPmqzZ9xAFHEZmtui+zIVRwdPUGb2t6SLzswJRuhs8
9z3LRcf5MW1/GlpTR/adRIEGnz2JOo9z8by80jpgmDVtZK7m9vPCl5577nLj
4f3sq0ytKV+s3WgFAqOszrVKykXXuN6/9461pvHM2wokRR7ihV/Oxe+ZUSuN
ba3pAfuuooC5LKmgU3wujrZt8/irszUNYA5X4Gza+nMnzuaCX/tfRpinNYWz
7y0KJAyjZYYnc1GsU/rQeaI11R/QXmAFjP8tw42juZhzJ82vtZ81zWHfYbi8
1HXyCJtDufC7uPvut9nW9Oaf9qfA7Nqp/TL25uJux6nSqwutaQxzuxLne0zp
M3tnLhL8Z5buX25NZ5jblRBlmgyq2ZIL1/hfz9cEWVMr5nYlurm9sNi7IReb
p7rbzd9kTauZ25VQBavG9w/KxZJRo0/MDLUmwR1tYCnRfvTN5Y9X5EKQ2v3H
7L3WBOZ2JeSDMw5PW5yLnZf2n1sSYU1JzO1KBHw2e1Q3LxeeTYMWbjlmTT2Z
25XYuie9IGpWLjK3Lio8ecaadjK3K9Fh6X9dLP1yMV9vuNezeGsqn6tNWEps
D9J3FEzi5tVL55dftSZf5nZufNm5VaHjufe8680beMea0pjblfheJj89zD0X
3+J/6Sx4bE3DmduV8JnT8uqLUy6S8+zPX0uzpmjmdiXWqZMqt9nmYsORj2Wa
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
b0TKq+TIrgeFmPf6hyh1vRu9e6VNWI0Y2a7dkdn7uP0ZMUpTtN2NLJjbG6G6
XZFyZbcQO+tnZ3Xf70axzO2NqD0h7qYMFcLUri5/3FE3asPc3ohk2cRjrluF
mL21bsve024UxNzOzdsn1fHYJiHa/VtNby+6kShY6/ZG9GgXpy9bJ0TVnNwp
XZPcyI25vRFDPy7vxgsSQrpnx4l5D93oFnN7I4TCGP6BVdx7uhZ7P0xzIwPm
9kYckCfszVkmRJFs/dNu79xoN3N7I8xNWzVZLBai62XfpPVf3ajSSOt2Lg+U
Wpw6sEAIsf3MYbkiN5rO3M69v/jazIIAId66BM+fKHOj58ztjRiiK3WxnSXE
QGlp59dVbmTC3N6IhDf+k45PF0LzbNoiqN3oOHN7IyY93LurZqoQp0MOuL5p
caPmTK3bG9HmnSzbe5IQD5Rde07RdadlzO2NWOtcN+WatxAT4vLnFuq70zdP
rdsbuT5qWE1bLyFcSr/t2NLfneyZ2xsRUdtya6mbECEf7rfrbexOl5nbG3F+
7K+j75y5vHR7fkLaGHfqytzeCJH8+HETByH+Wnb4sMLWnbYwtzcittEz+bCN
EFY1ouT+bu4kU2pB2Yifs6Ob66y4fOJruSR7gjtNZG5vxJ3tdYEzLIQ4OrX0
w6kZ7vSEub0RG7pJS1PNuHv0/nDu3AXuNIiVwUac614UMXSkEMWlC3+brnSn
COb2RizI2jAp0liI6Yphu/+udydVgtbt3POl+mMaBgtR3/PolpxQd5rP3K7B
wJGOZoFGQqx8p4yncHd630/rdg3qs9eN+9xPCIyYXnU12p0smds12LHUcpd9
byG8mpZ1Oh3rTnHM7RpEnP/z/XoPIUzm+Xc5etmd2jG3a1B23M+tj54QQdLE
lsN33CmYuV2DlMRHmQc7CzHnSOqj6BR3krzXAlqD5E0J637pCnFg97klca/c
yYO5XQO3f7EWa9pydWSZidndTHe6w9yuwZfdQzpIdbh1bWqV/F7gTn2Y2zWI
2f3014wWAd786OJXUehOYcztGqiypG0yfwkQXX7/kV6VO1WHaN2uwbhjhiPc
GwVQdd8BF7U7+TO3azB0RN3CVKUAw5KLv238604vmds1GOwmvs+rF+DvGB3P
+x08yJS5XYN9OfP73q0WIMutVaOqhwedZG7XoNq69WnTCgHko54vcDHyoJZh
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
S9ra3C2RQKB0ey/8HHbDLmi5GCQryt47B1kiE+z2Xhj/JEt9LSGGQH7G+8oI
S3QNu70XkhZReX5GYhjZtvWK9SFLNAK7na5DdqKez2IxKGwCk6pPW6JI7PZe
SNjwKsbLUAyfNyYXb7psiVr2K93eC1n9BhR6zhcDu/DQtAEFlsgWu70XHv33
9bnnHLrf1ja25xVZokfY7b2AmDqFXvr0OhWcZnuyLZEOdnsvWOw0j/HRE4PR
oB9Ooxos0Qns9l7I/NpP13+aGH7smmUt7rBEv+cp3d4LNZ2SrLVTxGDQNDs7
s8cS+WO394LLAoEiaJIYiNrxlhGDrNDr60q398KYi3OWbhsvhrq2dRVOY6zQ
Iuz2XhjoUGAWPoa+jm63O6FnhS5it/eCwVmmYeRoMUgvrg+fs9gKDcJu74WJ
H1/9OqAhBt3/NA1mrLZCYdjt9Lj8zDl9TJ2+Du9E9mwnK9TgonR7L+zLMB+U
PFQMw2Xn3JcFWiFT7PZeEH6zcb04SAyupQVf7UOtUAF2O/29ZvtF5/YXg1bq
yJFh+63QeOz2Xqgv1Ym8zxRD+7NVe9JPWaFD2O298MdhhV2ZXATP+7SP8y5a
oU6W0u29cDbfS8KViuCe4fLb6reskDt2ey+oibVj3vWI4OzVEYtdkRUqw27v
Bbee+TVff4vgS9ehrderrNAc7PZeyI9cMqCvWwT2wydfYDZYoRTs9l6QttcN
Gf5dBEcZV5KDPlshxR2l2+n6DChrmdIpgt9DivvEvVZoM3Z7L1wtSjmz8LMI
ypZGbLYdYo1Es5Ru74Xthgots08i+MMz8OGNs0bLsdt74Xr+te1erSIwGKyw
8ta3RjnY7b1QecswLeSDCJzPCwb8MLJGI7Hbe2FFk/X5uEYRvGNw85PMrVE0
dnsvXJh0cUtGgwjmrqgYT7hbo7Zapdt74Uwwd8T9OhEM39PwqDPIGtljt/fC
qmHHjrCrReBg0m/0zV3W6Al2ey+s9dklaBOKIDfzgFN4vDXSxW6n6/wTOhU8
EdyorUxefc4aJWC30/3nbOKbCRwRWNTq1E2+bo3+xind3gtbFoxIW1opAke/
/OX9H1qjQOx2+nu1bdJ3fiWCJeMGHfz5whpVyZVu74UrDPOjoc/p65+d9uFr
tTVagt0ugYMy58enykTwVU8Q8L3NGmVit0tgQizx+FaxCEo+jj/c99saDcFu
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
hcRV7HZ6P5qjFdIprwI9J9fftu85lCrnziL7bmuSMmkVRGvff2h/XkQMw26n
P1+3Pl+ttwokuvXvt+uUE6r8O4scOa26cOKfKrpvB3SrjS4hdmG30/NKZOQ2
92cV/OcYy53lJ6RUuXgWuWSXb/Ly71Xgtj8+ee20Suo9djuLnDp27Fb7zipo
XP1xuc3GckKVl6f3tTdL3gV+roKow2naNz/xCSvsdhb5vvt4R8SnKqg8q9Xx
ajiHUOXoaSfkfUo82loF7vrbsrcQ74j72O10n/TU5md8qII3gu4x+ltuEKp8
PYuUbu27cbexCu6t/3OJN7WZmIzdTs/zAE/tVw1VQB56MOru1buEKndP74+v
WbPf1VWBTuONAS1zG4ij2O0scpJlFe9ndRXkpuhdnP6iglDl8en+ee7wcDVR
Fbx6l/F818oGohufJ2GR+lGMj9P4VXBtzacKH7NtlCqnzyIDORpuJpwqyE7Y
7LSooozwwW6n73/fET+Xyip4aBJ5Y0vmB0KV36frc2KpYvurKpi+sWqu7sci
4iV2O4u8PuC70dHnVdDtOOB7uOANpcr10+4aGT84q6wK2Jbb2OFeBcQC7Ha6
z7RUhhYXV4HPmfU+bsdrKVXen94vniWFvnlaBe1ND3Qnjm4lLmC30/1tWN6g
v4+rYJaftJD79AOl+h0AFumm37FE82EV1IZqykfsekj0x26nXZQyVWpYWAXJ
Q4/bL3vxhlL9PgCLRC3T3B3uVMG8bbo/D2nVEMHY7Swy5kG5ZcitKjj15cza
Z+E1lOp3A1hkJxIKT+VVQajx6hXX+gdRddjtLLKkRK/7dk4VrNZ7Xvmd2Uyp
fk+ART48eyqHl10FgmR9B44+IlZht7PIQr333d+vVEHGN+eJq62KCNXvDLDI
sm2dolGZVXC0Rbi+3uMTkY/dTvfbXceslmRUQem+pd8XGvMI1e8P9CN/BBxx
80irgkUDjVovzi0jxmC39yNDvKm/0eeq4PbQVotbK3iU6ncJ+pGdOb/nXU6u
AjlnCjtai00cwG7vR94/P6z3eVIVmM1JaW1PFxGq3yvoR1qfEXp8TqiCcx9t
HKs6XlGf8Tl5+nO1ibYaJ+jrNLhddbKspFS/Y9CP3Hv8SfX/Jdx3XI3fA8Bx
uvd5bhL62mQkO2QmjjgnO7KSzJKVEdkJJaOSkS2JUJIisyKnnXruc+9Ney8N
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
q6gTyCOHnAED/swl4/MvMyrtTClgHiyP5q8+r9GAyLn0UHdrVHQGMKPdziPz
TvcsKub8/97506uwRYGZE0vOSZ/Z7flGcnglZmFUbssnEEm7nUeqxrUdqUAO
d3w4EOijTADMj+XRtE/p6+Uz5PDAnoFOvnEVeBTtdh7Zcnd6RE+XwwjYzexR
t0+YubJk3Tp4DA2bRrql/GeWJCEaX6PdzqOwbg8vBE+RQ+tpLlstll8HzJvl
0e23ocv8J8lhUHf5GjgqDvymPiGPpJbvbe/ry6H7rh850S8bMXNoeeTZ5Vr5
rfFy+GRPUkNP8vfvdtrt5N+NGR3moUfOPedGwehCKWY+LY9WXdpZ4jZGDud8
y+8YfOc5SKbdTs6x0zN2nB5FOuRUb6euF3Iwc2t5FBt1bt6JEXKIw/LrA3EW
mEG7nUe/tk85eUSXnMPzDrYfmFyOmWdLzpPHEzT368jhuHNJvJl+EfCj3c6j
pBdWrbuHkHOJ27DOfW8tZs4tuWcjX87cMYjc49MOqP/sVAE0abfzyKC3LNt6
IFknOl8f+55Ixcy/5dHVjpWqTf3J6+revuF8CrCn3c6jjOSjA9b3lcODoF/G
3JQiwFxcHiUXWcWu6S2HffMu3f7dMweX0G7n0TqPHzFmPcl+H+ZZiRvfA+bl
knFYMLz/Si051F4/s+zq2iqwhHY7ef+xNHFZdzlsyEwuyvfMBszR5VHD/eq0
pZpk/e8bOTJ9dz4Opd3Oo5FT1kxdoiGH64ao7WwdcgMwX5dHO2Pb6xark3u/
OebEmT1FeAjtdh6dyk7qWMTLYUr7uKypHpmAubs8WtQleNciKek9p1DwV/oB
u9Nu51Gfny56i9TI/dW9i+2VlBbMPF4eDVloPH9RJ9I/bva/Gq9U4ybqN/JI
w08ZtqhDgJnVV5bE9duImdPLo7ZoDefFfwW46tmG/pvX++NNtNt5ZL+u9qHJ
bwHu/W4R5GLfhpnfy6Pjky36L20T4LqzajuC81OAQLudR9m9DapMWwX4cuyJ
3r2/lgDm+pL5zTzYY0WLAEc5ZdVdX/MKT6LdzqNtJq0eq5oEWButr1i+PQYw
71eGXM2Dt5k3CHA3N8L7EizB3rTbZUi3yOna2noBTuiU133diUbMHGAZmplh
3ntjnQBb1fQCGsPrgJR2uwy5TND+blUjwG3wiXIE3wyYDyxDYg3W2VYlQPeM
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
FNPu3hIB/g+VI6l0
             "]]}, Annotation[#, "Charting`Private`Tag$12120#4"]& ], 
          "\"(0.00,0.70,0.63)\"", LabelStyle -> "TextStyling"], 
         Annotation[#, "(0.00,0.70,0.63)", "Tooltip"]& ]}, {{
         GraphicsComplex3DBox[CompressedData["
1:eJxF1GswnFcYwPF936ClpEkqQkxsJaKUxrDZiag6pxsRJG6LLIu4BREb6z5D
S2JCYlzHug1JZ4kgZddMuq2kJVlppC6Ja10qWSoqWzQ2dC+WuNT0wznPzPPl
9/Wc528awWVGkRQKBezsrp3VvS4tra6O7Yz+f6RgpNJr+7avCgjIPJ0aC+xu
4ird9lUlmEjecDVqvYR82VK2YvijEth9P9rZ9iV2qHXbNThHCXKCZ2p5z2OQ
e042HfuJrQThhNhlyQf71yIVl3pICa5cJsyjZ6KRV3da6e9pVgDymcHzkCjs
Ytpk0si6HJR+F/pH2dso5MfK2U/eZKmBl4Mudf4b7Df8XqjG07dAZU+BVTuB
PZ189Gsmk4C7jbmJgpKLyAOc3h5tPE7CrH9yqRIqdqWT2cHEahKmCbll+Y2R
yNnviiVVfSTk0x5BFh17YEdeC/sVCZktU6I7v0QgVxCCM+E7vlVrW2LNwP67
j07J2CAJJ9gL9aPD4cjn2+9q6z8moaNWStZ7FvbsXP6SXwMJh1MjeFAahrxo
95CWVz4JZeNHOBpx2H14Rk71sST8kGMbrDcXitx/0/7aAxcSlv0wy/Qkscs+
MY5bPkJCmuTkWKHeBeQ6e0L69m4Q0LY4oO8DyxDkHAbHYWWUgFTH6ZJt12Dk
1pnh3RIBAQ/3a79W+Achn8yGeulXCZgj3bhrnsxGXt9UZO7pS8C12QqFf2Yg
crMR4eolUwKGvqrQJwsDkFvUcdTnZBR4NDikabGZhbxUcwo2dlDgprjv2VDb
eeSDcTH7CnIo8Lhg+7x8xB//N5Ymd8WDAkPLbz3kyf2QOzvykx0MKLAmdKrB
hsAecGvpTUTrNjghkmpqU32R13b1zjfRtoF0oWLlT0sm8mv9QrHo3haQ39P1
ljv7IKfEl7dom24BReRi1vWL3shnWC2S/ZWbQEdDknR41hO5zVepNVbqDbDi
ndTfZuyB7yt3vJgbsgHmIv2Ai81Z5NGqQ8J3gvegJV6DOXjWDbndjGFYp3Id
2Oefch/OO4PftyvWUQ3XwULcQOAA/zTyg6tPpx8nrIGAC/OezhOnkBuOMMbc
6tRA4Do0JzrAQO4unKvs7V4F5mu7eCZ2EPn+vSbZbr0q8HNKkZvGS0fkJtoW
sx93K4GPiyyPL7NHPrpPfT+sUAEkjBMDRuG4S909heaGVBWQtw7KxcW4J4Af
T4NQCaT0sDZLI+wdhml+dJkCPDxQqH59B/ekih6ob+asAO627cNqC+zTf1v+
m2KnBMnEuYZhJ9yNT2s+Ko5LpcCRxMwBUQ/uQ9e33M8vvyTg6esZrl0s7BGd
NXWJCSTMeJERSPsL9yHz5BfCoAckLEgwWFy+gp0T1Bx2c4yE6VyP9Y1V3Ift
NrqX3RQJP2u8WReThf1+w6bmk3ESdjN+S6PPOOA+864+rbdWgv8AJgDVlA==

          "], {{{}, {}, 
            TagBox[{}, Annotation[#, "Charting`Private`Tag$12142#1"]& ]}, {{
             Directive[
              GrayLevel[0], 
              PointSize[Small]], 
             
             Point3DBox[{2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
              17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
              33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
              49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 
              63}]}, {}}}], {}}, {
         GraphicsComplex3DBox[CompressedData["
1:eJxF1H9Q0wUUAPCB0B1KAoERQ72xRNgYsFhMsuR516kg7iLClCAYDMbPwTHn
UUjCRUh1bN5FqWiGyE1ERuBKfknIbwVBZGXD4QkcsNb4Mvb9boYERV53vL27
98/nn/fu3XvPJyUvJs2eRqPxX+SmF9lO/PBRtSmsW/x/6GGqTXlVWGGFoalz
84UhNg874VOXKrACnzUQo/pgD3rNXiFjmWaFwYcnq2pK+eihXp0WdasFcs80
VTW0hqIrubFnlyUW2H6j2D1H9ya6M/fWWIu3BYgAjdi8xealcWNFqhEKur1v
8wI4PPTczsGcOBkFjV6BHYXRIehcwyNxB52CrpM+dEXpG+h21t68mH4SNKCy
HFNy0V9KEtULRCR4PJQK7jcEoxcGnL903JGEn9+p3u26LQjdTJ65MqA0w8dl
z6meeA56VkFF8a9vmSHq6w+lq3fY6PwHq0+za5bg3eyZuRo7Frq+2WdkUW0C
Scbp4fwoP9vcuhJm+joXQefDEA2pfdF/OVR9IeA+AbGtJpN8+XX08AN1bZEt
C+Dm1Buoi2OiJ1Qx4FmtEbT83qTKKga6it+0Nij+E6rt6p2I3h3otfni1AFP
A9C3atu75XT0H6XRxrJBPdRrEqPz3D1tfR4/L7oVNg89LuYjgb+5o18npLz1
K7MQXqYMDle6oqdPR1BHDDPwbVom+X7KZvQHo/0ri3VTMHrz4nsHzZvQWZZv
+lSJk3Dgyb/WJ3+s3NnwgZhTzRMCLThK1IOk0IA+/irXzXtuGrhXx/vVR2th
w7X2s/5S6RwMTZ8mJqwE+u6iU8YTpB6+zA/pWpSsovs5bCn0bTHAFxHDLW6u
Dvs3/HfvtXTWLiOEGO72fGLZjF5QOXkpvWABhFFxJcJmV3QLP0HLlBNQaZS1
szke6EsX9v70/cVF2O9WXjGf44k+4sgr9y82Qfm67FPBZTp60j7nIINgCTpC
nUomX9mJXj89m+zvYoabK5GujdcY6N/lK5j8LDMUF6VIisVMdC3fN+ztu2ag
z2Yc89+5C31Pcv1y8w4ScuVZisg2X/SM9oh717NIuB0Pmn9kfugLsRG1jR0k
dEtcRGwPFrqRCD1aY09BpWi0JLCBja746vDf6wcpSPossaEvlYPOe/75a7yz
FMzpjEwNLQj9qbAp02+cghuPhptHRoLRt1+DoHteFthGDWfvq7L9JcXC2tpf
eVagXF5Oo0tptvtKznvc6/AYsp04BNvZgntyOU7NifedhEMTuswxva3u1nxZ
jvwZBf8BGeR5mA==
          "], {{{}, {}, 
            TagBox[{}, Annotation[#, "Charting`Private`Tag$12162#1"]& ]}, {{
             Directive[
              GrayLevel[0], 
              PointSize[Small]], 
             
             Point3DBox[{2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
              17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
              33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
              49, 50, 51, 52, 53, 54}]}, {}}}], {}}, {
         GraphicsComplex3DBox[CompressedData["
1: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
          "], {{{}, {}, 
            TagBox[{}, Annotation[#, "Charting`Private`Tag$12182#1"]& ]}, {{
             Directive[
              GrayLevel[0], 
              PointSize[Small]], 
             Point3DBox[CompressedData["
1:eJwl1FO4EAYYBuBz0sm2z8m23bKN5VotLdu1hWXbtlu2F5exLRtbNt6eLt7v
v/1uvj+4aftq7QIDAgLSi1BuaMIQlnAEEZ4IRCQSkYlCVKIRnRjEJBaxiUNc
4hGfBCQkEYlJQlKSkZxgQkhBSlKRmjSkJd23jmQgI5nITBayko3s5CAnuchN
HvKSj/wUoCCFKEwRilKM4vxACUpSitKUoSzlKE8FKlKJylShKtWoTg1qUova
1KEuP1KP+jSgIY1oTBOa0oyfaE4LfqYlrWhNG9ryC+1oTwc60onOdKEr3ehO
D3rSi970oS/96M8ABjKIX/mNwQxhKMP4neGMYCSjGM0YxjKO8UxgIpOYzBSm
Mo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrWso71bGAjm/iDzWxh
K9vYzg52sovd7GEv+9jPAQ5yiMMc4Sh/cozjnOAkpzjNX5zhLOc4zwUuconL
XOEqf/MP/3KN69zgJre4zR3uco/7POAhj3jME57yH//zjOe84CWveM0b3vKO
93zgI5/4zBcCbD/w2/4JTRjCEo4gwhOBiEQiMlGISjSiE4OYxCI2cYhLPOKT
gIQkIjFJSEoykhNMCClISSpSk4a0pAv8/qMy8BUTQIU8
              "]]}, {}}}], {}}, {
         GraphicsComplex3DBox[CompressedData["
1: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
S1aZTcP/AdEJgXs=
          "], {{{}, {}, 
            TagBox[{}, Annotation[#, "Charting`Private`Tag$12202#1"]& ]}, {{
             Directive[
              GrayLevel[0], 
              PointSize[Small]], 
             
             Point3DBox[{2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
              17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
              33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
              49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 
              65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 
              77}]}, {}}}], {}}}, {{}, {}, {}, {}}}, {}, {}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic, Automatic}, 
     FaceGrids -> None, Ticks -> {Automatic, Automatic, Automatic}, AxesLabel -> {
       FormBox[
        StyleBox["\"\[Sigma] (walking slope)\"", StripOnInput -> False], 
        TraditionalForm], 
       FormBox[
        StyleBox["\"v (avg. walking velocity)\"", StripOnInput -> False], 
        TraditionalForm], 
       FormBox[
        StyleBox["\"\[Tau] (step duration)\"", StripOnInput -> False], 
        TraditionalForm]}, Axes -> True, 
     PlotRange -> {{-204.7999999999909, 
      15.900000000000052`}, {-6.591959001486209*^-16, 2.99999999999978}, {
      0.17198491762394222`, 2.4180447720553246`}}, 
     PlotRangePadding -> {{0, 0}, {0, 0}, {0, 0}}, Lighting -> {{"Ambient", 
        GrayLevel[0.5]}, {"Directional", 
        GrayLevel[0.5], 
        ImageScaled[{0, 2, 2}]}, {"Directional", 
        GrayLevel[0.5], 
        ImageScaled[{2, 2, 2}]}, {"Directional", 
        GrayLevel[0.5], 
        ImageScaled[{2, 0, 2}]}}, ImageSize -> Automatic, TicksStyle -> 
     Automatic, FaceGridsStyle -> Automatic, BoxRatios -> {1, 1, 0.4}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"(-24.93,0.70,1.28)\"", "\"(-24.93,0.70,1.28)\"", 
       "\"(0.00,0.70,0.63)\"", "\"(0.00,0.70,0.63)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.8302733999999999, 0.3470634, 0.18826110000000001`], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.8302733999999999, 0.3470634, 0.18826110000000001`], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.5041629000000001, 0.6224121, 0.1753965], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.5041629000000001, 0.6224121, 0.1753965], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.7926498, 0.5499369, 0.1278459], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.7926498, 0.5499369, 0.1278459], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.3315753, 0.4561011, 0.6388182], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.3315753, 0.4561011, 0.6388182], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3315753, 0.4561011, 0.6388182], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.22105020000000003`, 0.3040674, 0.4258788], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3315753`", ",", "0.4561011`", ",", "0.6388182`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3315753, 0.4561011, 0.6388182]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3315753, 0.4561011, 0.6388182], Editable -> 
                    False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7926498, 0.5499369, 0.1278459], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5284332, 0.36662459999999997`, 0.08523060000000002], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7926498`", ",", "0.5499369`", ",", "0.1278459`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7926498, 0.5499369, 0.1278459]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7926498, 0.5499369, 0.1278459], Editable -> 
                    False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5041629000000001, 0.6224121, 0.1753965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3361086000000001, 0.4149414, 0.11693100000000001`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5041629000000001`", ",", "0.6224121`", ",", 
                    "0.1753965`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5041629000000001, 0.6224121, 0.1753965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5041629000000001, 0.6224121, 0.1753965], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8302733999999999, 0.3470634, 0.18826110000000001`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5535156, 0.23137560000000001`, 0.12550740000000002`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8302733999999999`", ",", "0.3470634`", ",", 
                    "0.18826110000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8302733999999999, 0.3470634, 0.18826110000000001`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8302733999999999, 0.3470634, 0.18826110000000001`], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"ReversedColumn\""}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[86]=",ExpressionUUID->"3848f3b4-899d-43e1-829c-1efb2fda488e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"BLSaveTo", "[", 
   RowBox[{"\"\<Here\>\"", ",", " ", "\"\<mx/slices.mx\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "Mp", ",", " ", "Mp1", ",", " ", "Mp2", ",", " ", "M0", ",", " ", "Mv", 
      ",", " ", "M1", ",", " ", "M\[Sigma]", ",", " ", "M2", ",", " ", "Mvf", 
      ",", " ", "M\[Sigma]f"}], "}"}]}], "]"}], ";"}]], "Input",
 CellLabel->"In[87]:=",ExpressionUUID->"d85ac938-596b-4fd3-a467-07a1faae49d2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"40740.00", "/", "3600"}]], "Input",
 CellLabel->"In[88]:=",ExpressionUUID->"485934f8-a538-4005-8bbb-782286b2331b"],

Cell[BoxData["11.316666666666666`"], "Output",
 CellLabel->"Out[88]=",ExpressionUUID->"bdb67da2-454c-47f4-9dce-7cd206ce7815"]
}, Open  ]]
}, Open  ]]
},
EvaluatorNames->{"Local" -> {"AutoStartOnLaunch" -> True}},
AutoGeneratedPackage->Automatic,
WindowSize->{766.1999999999999, 700.8},
WindowMargins->{{Automatic, 1.7999999999999545`}, {Automatic, 0}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->Association["TryRealOnly" -> False],
CellContext->"Global`",
TrackCellChangeTimes->False,
Magnification:>1. Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2e0b8077-7838-40d0-984b-b49e4843428b"
]

